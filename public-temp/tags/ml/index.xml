<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ml on Fireship</title>
    <link>https://fireship.io/tags/ml/</link>
    <description>Recent content in ml on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Oct 2018 18:03:42 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/ml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ML Engine Tutorial with Python</title>
      <link>https://fireship.io/lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/</link>
      <pubDate>Mon, 01 Oct 2018 18:03:42 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/</guid>
      <description>Building a predictive model is only half the battle when it comes to machine learning - you also need a way for clientside apps to consume it and add value to the user experience. Today we&amp;rsquo;re going to wire up a collection of Google Cloud services to train and deploy a Python-based ML model to the cloud. The following lesson is designed for product-minded developers who want to get an idea of the end-to-end ML process in the cloud.</description>
    </item>
    
    <item>
      <title>TensorFlow.js Quick Start Tutorial</title>
      <link>https://fireship.io/lessons/tensorflow-js-quick-start/</link>
      <pubDate>Sat, 31 Mar 2018 13:25:17 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/tensorflow-js-quick-start/</guid>
      <description>Google launched TensorFlow.js at TensorFlow Dev Summit 2018, which opens the door to building machine learning (ML) models in the browser. This means web developers can do things like&amp;hellip;
Build privacy-friendly AI features. Data never leaves the client, so you can build deep learning models without ever seeing the actual data. Use pre-trained Python ML models in your app. There are tons of successful Python-based models that you can load into the browser and start running predictions with minimal code.</description>
    </item>
    
    <item>
      <title>Google Cloud Vision with Ionic - Not Hotdog App</title>
      <link>https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/</link>
      <pubDate>Wed, 24 Jan 2018 15:00:49 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/</guid>
      <description>In this lesson, we&amp;rsquo;re going to combine Google&amp;rsquo;s Google&amp;rsquo;s Cloud Vision API with Ionic and Firebase to create a native mobile app that can automatically label and tag images. But most importantly, it can determine if an image is a hotdog or not - just like the SeeFood app that made Jin Yang very rich.
Just a few years ago, this technology would have been unreachable by the average developer. You would need to train your own deep neural network on tens-of-thousands of images with massive amounts of computing power.</description>
    </item>
    
  </channel>
</rss>
