<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>animation on Fireship</title>
    <link>https://fireship.io/tags/animation/</link>
    <description>Recent content in animation on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Sep 2021 16:17:44 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/animation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Animated Notifications with Framer Motion</title>
      <link>https://fireship.io/lessons/framer-motion-advanced-notifications/</link>
      <pubDate>Sun, 12 Sep 2021 16:17:44 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/framer-motion-advanced-notifications/</guid>
      <description>Learn advanced Framer Motion techniques by creating an animated notification feed from scratch. We dive into concepts like transitions, spring animations, SVGs, and drag gestures to create dismissible notifications.
‚ö†Ô∏è This is the sequel to the Framer Motion Basics Tutorial. Make sure to watch that one first!
üöÄ Try out the live demo
Notification Basic Notification Start by creating a basic animated notification using a motion.li component. Feel free to experiment with the notificationVariants object to customize the animation result.</description>
    </item>
    
    <item>
      <title>Animated Modals with Framer Motion</title>
      <link>https://fireship.io/lessons/framer-motion-modal/</link>
      <pubDate>Sun, 12 Sep 2021 15:20:52 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/framer-motion-modal/</guid>
      <description>Framer Motion is a React library for adding declarative animations to your components. It provides a variety of components that wrap plain HTML elements to extend them with animation superpowers ü¶∏. In this lesson, we will build a modal with Framer Motion with a variety of different animations styles.
üöÄ Try out the live demo
Setup Installation Create a new React project
command line $ npx create-react-app framer-demo Open your new React app</description>
    </item>
    
    <item>
      <title>Flutter Flare 2D Animation Basics</title>
      <link>https://fireship.io/lessons/animated-navigation-flutter-flare/</link>
      <pubDate>Tue, 02 Apr 2019 11:00:35 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/animated-navigation-flutter-flare/</guid>
      <description>Whenever I see an awesome UI element in a native app my first question is How do I make that in Flutter?. That&amp;rsquo;s exactly what I asked when I downloaded the Giphy Android app recently, which has runs a colorful and fun animation for each icon in the bottom navbar.
These animations are complex. Hypothetically, they could be created in Flutter natively with a custom painter, but that would be very challenging and painful.</description>
    </item>
    
    <item>
      <title>Flutter Firestore Animated SlideShow</title>
      <link>https://fireship.io/lessons/flutter-slider-like-reflectly/</link>
      <pubDate>Wed, 20 Mar 2019 10:18:59 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-slider-like-reflectly/</guid>
      <description>One of the best examples of a well-designed UI in Flutter is Reflectly - an AI-powered journal app for iOS and Android. The following lesson will show you how to build an animated slideshow carousel inspired by the work of Reflectly. In addition, we will wire it up to Firestore to make it filterable and able to scale to an infinite number of pages.
PageView Widget Intro The most import widget in this lesson is the PageView, which makes it possible to easily build sliding pages.</description>
    </item>
    
    <item>
      <title>Flutter Animated Radial Menu</title>
      <link>https://fireship.io/lessons/flutter-radial-menu-staggered-animations/</link>
      <pubDate>Sun, 24 Feb 2019 09:14:20 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-radial-menu-staggered-animations/</guid>
      <description>Building a flashy animated radial menu in Flutter can be done with ease thanks to the Transform widget and staggered animations. The following lesson will teach you how to compose flutter animations into a cool rotating circular widget, which can easily maintain 60FPS on modern smartphones.
Step 1 - Initial Setup We will define two custom widgets for this demo.
The parent RadialMenu is a StatefulWidget responsible for defining an AnimationController that sets a duration for the animation.</description>
    </item>
    
    <item>
      <title>Angular Router Animations Guide</title>
      <link>https://fireship.io/lessons/angular-router-animations/</link>
      <pubDate>Sun, 10 Feb 2019 07:42:41 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/angular-router-animations/</guid>
      <description>Smooth animated router transitions will impress your users and set your app apart from the crowd. In the following lesson, you will learn how to build complex router transition animations in Angular.
Here&amp;rsquo;s a summary of the animations that we will build from scratch.
fader basic fade in slider slide in from left or right transformer translate, scale, and rotate stepper complex keyframed animation sequences Router Animations Setup Let&amp;rsquo;s start by taking care of the initial Angular Router animations boilerplate.</description>
    </item>
    
    <item>
      <title>Infinite Virtual Scroll with the Angular CDK</title>
      <link>https://fireship.io/lessons/infinite-virtual-scroll-angular-cdk/</link>
      <pubDate>Sun, 21 Oct 2018 18:16:07 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/infinite-virtual-scroll-angular-cdk/</guid>
      <description>The release of Angular v7 gives us access to a new virtual scroll behavior in the Material Component Development Kit (CDK). It provides tools for looping over a lists that only render elements when they are visible in the viewport, preventing lag an janky-ness in the browser. As an added bonus, it exposes a reliable API for building an infinite scroll where new batches of data are retrieved automatically when the user scrolls to the bottom of the list.</description>
    </item>
    
    <item>
      <title>Mobile Touch Animation with HammerJS</title>
      <link>https://fireship.io/lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/</link>
      <pubDate>Thu, 28 Dec 2017 14:17:38 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/</guid>
      <description>If your app targets users on mobile devices (80% of apps do), then you should carefully consider the impact of touch gestures, i.e. swipe, tap, pinch, etc. In this lesson, I will show you how to listen to touch gestures with HammerJS, then apply cool animations to them with Angular.
In addition, we will learn how to customize the configuration of HammerJS and build our own custom events beyond the basic ones provided.</description>
    </item>
    
    <item>
      <title>Angular Animations Examples</title>
      <link>https://fireship.io/lessons/angular-animations-examples/</link>
      <pubDate>Mon, 24 Jul 2017 04:50:44 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/angular-animations-examples/</guid>
      <description>Animation is often the X-factor that sets remarkable apps apart from average apps. In this lesson, I provide five basic animation examples based on Angular 4.3+. This article covers the animation techniques I find most useful when building Angular apps, but check out this excellent post on new Angular 4.2 animation features for a more comprehensive look at the latest features.
All animations can be boiled down into two simple steps:</description>
    </item>
    
  </channel>
</rss>
