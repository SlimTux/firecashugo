<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>payments on Fireship</title>
    <link>https://fireship.io/tags/payments/</link>
    <description>Recent content in payments on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Mar 2021 11:13:56 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/payments/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Accept Crypto Payments with Coinbase Commerce</title>
      <link>https://fireship.io/lessons/crypto-payments-web-firebase/</link>
      <pubDate>Mon, 29 Mar 2021 11:13:56 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/crypto-payments-web-firebase/</guid>
      <description>Accepting crypto payments, like Bitcoin and Ethereum, in your app opens the door to more customers in a very fast growing niche. Coinbase Commerce is like the Stripe Payments API for crypto. It provides a simple API where you can create charges, invoices, etc. But unlike credit cards, which are processed by a central authority, crypto payments are distributed to a global network of miners where they are confirmed on the blockchain.</description>
    </item>
    
    <item>
      <title>In App Purchases in Flutter</title>
      <link>https://fireship.io/lessons/flutter-inapp-purchases/</link>
      <pubDate>Tue, 25 Jun 2019 06:14:51 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-inapp-purchases/</guid>
      <description>Flutter recently launched official support for In App Purchases (IAP) and provides a unified plugin for both iOS and Android. Native mobile apps that collect payments for digital goods on the Apple App Store and/or Google Play Store are typically required to use the In App Purchases API, which means services like Stripe and Paypal are out of the question (with the exception of payments for physically shipped goods). In reality, In App Purchases are far more lucrative for digital products, with the game Candy Crush generating $4MM in revenue per day in 2018.</description>
    </item>
    
    <item>
      <title>PayPal Checkout</title>
      <link>https://fireship.io/lessons/paypal-checkout-frontend/</link>
      <pubDate>Sun, 23 Jun 2019 06:44:00 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/paypal-checkout-frontend/</guid>
      <description>In February 2019, the PayPal Checkout API received a much needed facelift that brought massive improvements to the developer experience. The new v2 API has detailed documentation on par with Stripe and offers one of the smoothest paths to start accepting payments and/or subscriptions in a progressive web app. The following lesson will show you how to start accepting payments entirely from your frontend JavaScript code with PayPal Checkout with your choice of Angular, React, and Vue.</description>
    </item>
    
    <item>
      <title>Stripe Elements and Checkout with Angular</title>
      <link>https://fireship.io/lessons/stripe-elements-angular/</link>
      <pubDate>Mon, 04 Mar 2019 08:48:04 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/stripe-elements-angular/</guid>
      <description>ðŸ’° Are you building a payment solution with Stripe? Consider enrolling the Stripe JavaScript Master Course.
Stripe provides several JavaScript libraries - Stripe Elements &amp;amp; Checkout - that makes it easy to collect and validate payment sources like credit cards, bank accounts, and more. The following lesson will show you how to integrate Stripe&amp;rsquo;s clientside JS packages into an Angular application.
Step 0. Prerequisites This lesson only covers the frontend code.</description>
    </item>
    
  </channel>
</rss>
