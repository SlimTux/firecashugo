<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ionic on Fireship</title>
    <link>https://fireship.io/tags/ionic/</link>
    <description>Recent content in ionic on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Aug 2019 10:23:30 -0900</lastBuildDate><atom:link href="https://fireship.io/tags/ionic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ionic 4 Firebase Master Course</title>
      <link>https://fireship.io/courses/ionic/</link>
      <pubDate>Sat, 24 Aug 2019 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/ionic/</guid>
      <description>The Ionic4 Master Course will teach you the fundamentals of full-stack cross-platform app development, using the combined powers of Angular &amp;amp; Firebase.
ðŸ—¿ What will I build? This is a project-based course that starts from zero and works up to an authenticated realtime todo list with push notifications. While that may not sound super exciting, it provides an ideal foundation to showcase the UI features offered by Ionic and connent them to live cloud infrastructure.</description>
    </item>
    
    <item>
      <title>How to Pass Data to Modals in Ionic</title>
      <link>https://fireship.io/snippets/use-componentprops-to-pass-data-to-modals-in-ionic-4/</link>
      <pubDate>Sat, 22 Sep 2018 23:12:09 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/use-componentprops-to-pass-data-to-modals-in-ionic-4/</guid>
      <description>The snippet below shows you how to use componentProps to pass data into an Ionic 4 modal. This technique is useful when updating dynamic data.
Pass Data into Ionic4 Modals In previous versions of Ionic, the NavParams class was used to read the passed data. This is no longer necessary and should not be used, although it does still work technically. In version 4, sharing data with a modal is easier than ever&amp;hellip;</description>
    </item>
    
    <item>
      <title>Ionic Routing and Navigation Guide</title>
      <link>https://fireship.io/lessons/ionic-4-routing-and-navigation-guide/</link>
      <pubDate>Tue, 04 Sep 2018 17:43:04 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/ionic-4-routing-and-navigation-guide/</guid>
      <description>The single most important change from Ionic v3 to v4 is how routing and navigation is handled. In the past, Ionic used its own push-pop NavController, but has since decieded to use the Angular Router directly. This is a very smart move in my opinion because Angular&amp;rsquo;s router is just so powerful - but it does have a bit of a learning curve. In the following lesson, you will learn the fundamental concepts required to be successful with routing and navigation in Ionic 4.</description>
    </item>
    
    <item>
      <title>Ionic Intro Slider for New Users</title>
      <link>https://fireship.io/lessons/ionic4-intro-slides-tutorial-to-educate-app-users/</link>
      <pubDate>Sun, 19 Aug 2018 15:16:55 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/ionic4-intro-slides-tutorial-to-educate-app-users/</guid>
      <description>A useful intro slider is a sign of a highly polished mobile app. A quick tutorial for using your app provides an excellent user experience and can reduce bounce rates for new users.
In the following lesson, you will learn how to use the slider component in Ionic 4 to build a multi-step introduction that educates users how to use your app.
Ionic slides as an app tutorial for new users</description>
    </item>
    
    <item>
      <title>Ionic CSS Variables Dynamic Theme Generator</title>
      <link>https://fireship.io/lessons/css-variables-in-ionic-4/</link>
      <pubDate>Tue, 14 Aug 2018 15:10:28 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/css-variables-in-ionic-4/</guid>
      <description>One of the major changes to theming in Ionic 4 is the use of CSS variables, which are simply CSS values that can be reused across multiple elements or components. Unlike variables in Sass or LESS that need to be compiled, they can be changed and interpreted by the browser on the fly. This is an extremely powerful feature for web components that use the Shadow DOM, like Ionic 4.</description>
    </item>
    
    <item>
      <title>Google Cloud Vision with Ionic - Not Hotdog App</title>
      <link>https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/</link>
      <pubDate>Wed, 24 Jan 2018 15:00:49 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/</guid>
      <description>In this lesson, we&amp;rsquo;re going to combine Google&amp;rsquo;s Google&amp;rsquo;s Cloud Vision API with Ionic and Firebase to create a native mobile app that can automatically label and tag images. But most importantly, it can determine if an image is a hotdog or not - just like the SeeFood app that made Jin Yang very rich.
Just a few years ago, this technology would have been unreachable by the average developer. You would need to train your own deep neural network on tens-of-thousands of images with massive amounts of computing power.</description>
    </item>
    
  </channel>
</rss>
