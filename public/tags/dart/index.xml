<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart on Fireship</title>
    <link>https://fireship.io/tags/dart/</link>
    <description>Recent content in Dart on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Jul 2022 10:23:30 -0900</lastBuildDate><atom:link href="https://fireship.io/tags/dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dart 101</title>
      <link>https://fireship.io/courses/dart/</link>
      <pubDate>Tue, 05 Jul 2022 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/dart/</guid>
      <description>Dart - The Full Course is designed to teach you the fundamentals of the Dart language to prepare you for a successful journey into Flutter.
ü¶Ñ What will I learn? This course provides a tour of Dart and teaches essential concepts for Flutter developers. Here&amp;rsquo;s what you&amp;rsquo;ll get out of it&amp;hellip;
üë®‚Äçüé§ Become confident with the Dart language üê¶ Get Prepared for Flutter ü¶∫ Master null-safety ü¶æ Learn how to use the Dart CLI üïπÔ∏è Practice OOP and Functional Programming Concepts üåä Asynchronous programming with Futures &amp;amp; Streams ü§î Is this Course Right for Me?</description>
    </item>
    
    <item>
      <title>Handle Radial Pan Events in Flutter</title>
      <link>https://fireship.io/snippets/circular-drag-flutter/</link>
      <pubDate>Mon, 02 Dec 2019 09:19:58 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/circular-drag-flutter/</guid>
      <description>A UI element that is not currently supported out of the box with Flutter is a click wheel, or knob, or radial control, rotatable circle, or whatever you want to call it. The following snippet demonstrates how to take a circular container, then detect which direction the user is rotating (clockwise or counter clockwise) and its velocity.
Full wheel demo source code.
Flutter Circular Pan Wheel Detect Pan Gestures Use a GestureDetector to wrap a container with a BoxShape.</description>
    </item>
    
    <item>
      <title>Access the Index on Dart List.map()</title>
      <link>https://fireship.io/snippets/dart-how-to-get-the-index-on-array-loop-map/</link>
      <pubDate>Sun, 24 Nov 2019 07:55:05 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/dart-how-to-get-the-index-on-array-loop-map/</guid>
      <description>The following snippet demonstrates how to access the iteration index when using List.map. It is a common need in Flutter when looping over or mapping a list of values to widgets.
Problem Unlike JavaScript, one cannot simply access the index of a list during a List.map operation in Dart.
file_type_dartlang main.dart List myList = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]; myList.map( (val, index) { // This does not work! // Which index am I on?</description>
    </item>
    
    <item>
      <title>Flutter Firebase - The Full Course</title>
      <link>https://fireship.io/courses/flutter-firebase-v1/</link>
      <pubDate>Sat, 24 Aug 2019 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/flutter-firebase-v1/</guid>
      <description>Flutter Firebase - The Full Course Version 1 will take you from zero to a complex production-ready iOS or Android app using real-world cloud infrastructure.
‚ö†Ô∏è This course uses Flutter version 1. Checkout the latest version of Flutter Firebase course for version 2+.</description>
    </item>
    
    <item>
      <title>Flutter State Management Guide</title>
      <link>https://fireship.io/lessons/flutter-state-management-guide/</link>
      <pubDate>Fri, 08 Mar 2019 15:19:53 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-state-management-guide/</guid>
      <description>State management is a hot-button topic that brings out strong opinions in developers, and in extreme cases results in Twitter fights. In my experience, people tend to over-engineer features that would otherwise be straight-forward because they assume a full-blown state management library is necessary. In some cases, they just add complexity, but in others, they can be extremely valuable. My recommendation is to analyze these strategies closely and choose an approach that feels right for your app&amp;rsquo;s requirements and your team&amp;rsquo;s style.</description>
    </item>
    
    <item>
      <title>Flutter Animated Radial Menu</title>
      <link>https://fireship.io/lessons/flutter-radial-menu-staggered-animations/</link>
      <pubDate>Sun, 24 Feb 2019 09:14:20 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-radial-menu-staggered-animations/</guid>
      <description>Building a flashy animated radial menu in Flutter can be done with ease thanks to the Transform widget and staggered animations. The following lesson will teach you how to compose flutter animations into a cool rotating circular widget, which can easily maintain 60FPS on modern smartphones.
Step 1 - Initial Setup We will define two custom widgets for this demo.
The parent RadialMenu is a StatefulWidget responsible for defining an AnimationController that sets a duration for the animation.</description>
    </item>
    
    <item>
      <title>Flutter Widget Positioning - A Guide for the CSS Developer</title>
      <link>https://fireship.io/lessons/flutter-widget-positioning-guide/</link>
      <pubDate>Tue, 29 Jan 2019 07:10:30 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-widget-positioning-guide/</guid>
      <description>The addition of Flexbox to CSS revolutionized the way we position elements on the web. It makes the alignment of elements on a 2D plane automatic and well, flexible. Fortunately, Flutter uses the same principles for aligning widgets with Flex, Column, and Row. In addition, it supports absolute and fixed positioning with Stack.
The following lesson will teach you how to position containers and build layouts in Flutter with direct comparisons to CSS Flexbox.</description>
    </item>
    
    <item>
      <title>Flutter for JavaScript Developers</title>
      <link>https://fireship.io/lessons/flutter-for-js-developers/</link>
      <pubDate>Sun, 20 Jan 2019 12:28:17 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-for-js-developers/</guid>
      <description>So you&amp;rsquo;re a web developer working with JavaScript and curious about Flutter? That was me about one-year ago, and at the time, learning an uncommon language like Dart seemed ridiculous because there are existing hybrid app frameworks in JS. Then I tried it&amp;hellip; To my surprise, I was able to write productive code right out of the gate. The following lesson will compare Dart/Flutter to JS/ReactNative.
Source: FlutterDev subreddit
Throughout this lesson, you will see the üëâ emoji.</description>
    </item>
    
  </channel>
</rss>
