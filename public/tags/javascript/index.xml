<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Fireship</title>
    <link>https://fireship.io/tags/javascript/</link>
    <description>Recent content in javascript on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2022 10:23:30 -0900</lastBuildDate><atom:link href="https://fireship.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modern JavaScript Full Course</title>
      <link>https://fireship.io/courses/js/</link>
      <pubDate>Fri, 11 Nov 2022 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/js/</guid>
      <description>The JavaScript Course teaches you how to build modern applications with vanilla JavaScript - no React, no TypeScript, no Frameworks - just plain old JavaScript.
ü¶Ñ What will I learn? This course is focusd on the basics of JavaScript - the world&amp;rsquo;s most commonly used programming language. Here&amp;rsquo;s what you&amp;rsquo;ll get out of it&amp;hellip;
üë∂ The Basics of JavaScript üë®‚Äçüé§ Advanced concepts broken down in a quick no-BS format üì∞ Prepare for JS interviews by coding algorithms üß™ Test Driven Development with Vitest ‚öîÔ∏è Debugging and Error Handling üé® Build a text-to-image API with Node.</description>
    </item>
    
    <item>
      <title>React - The full course</title>
      <link>https://fireship.io/courses/react/</link>
      <pubDate>Tue, 22 Feb 2022 11:11:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/react/</guid>
      <description>React - The Full Course is unlike any other React course on the Internet. It provides a fast-paced introduction to essential concepts, then puts them into practice by building multiple fun and challenging full-stack apps from scratch.
What will I learn? üë®‚Äçüé§ Everything you need to be productive with React ‚ö° Breakdown of key concepts in 100 Seconds üìö Design patterns and best practices üé£ Component composition and custom hooks üöÄ Lazy loading with Suspense üì± How to build Progressive Web Apps (PWAs) üé® Animation with Framer Motion üêï Advanced data fetching with SWR and React Query ‚öõÔ∏è Complex dynamic forms with React Final Form üî• Manage realtime data with Firestore üì∞ SSR with Next.</description>
    </item>
    
    <item>
      <title>Twitter Bot Tutorial</title>
      <link>https://fireship.io/lessons/twitter-bot-oauth2-tutorial/</link>
      <pubDate>Thu, 03 Feb 2022 09:09:07 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/twitter-bot-oauth2-tutorial/</guid>
      <description>Full tutorial under development&amp;hellip;</description>
    </item>
    
    <item>
      <title>Cryptography Concepts for Node.js Developers</title>
      <link>https://fireship.io/lessons/node-crypto-examples/</link>
      <pubDate>Thu, 28 Oct 2021 13:29:12 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/node-crypto-examples/</guid>
      <description>The mysterious discipline of cryptography is the backbone of the internet. Without it, there would be no secrets and no privacy in the digital world. As a developer, you don‚Äôt need to understand the math that goes into cryptography, but it‚Äôs absolutely essential to know key concepts like hashes, salt, keypairs, encryption, and signing.
The following tutorial explains essential cryptography concepts and implements them with the builtin Node.js crypto module.</description>
    </item>
    
    <item>
      <title>API Monetization with Stripe Metered Billing</title>
      <link>https://fireship.io/lessons/api-monetization-stripe/</link>
      <pubDate>Sun, 24 Oct 2021 10:12:58 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/api-monetization-stripe/</guid>
      <description>Building a monetized API for a SaaS product might seem like a daunting task, but it&amp;rsquo;s actually relatively simple when you bring in tools like Stripe&amp;rsquo;s Metered Billing feature. There are 4 main steps in the process:
Create an API Subscribe a customer to a recurring subscription in Stripe Create custom API keys to authenticate requests to the API Report API usage to Stripe The following lesson demonstrates the backend flow for building API with Express.</description>
    </item>
    
    <item>
      <title>Realtime Charts with D3</title>
      <link>https://fireship.io/lessons/realtime-charts-d3-firebase/</link>
      <pubDate>Mon, 20 Sep 2021 10:31:56 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/realtime-charts-d3-firebase/</guid>
      <description>D3.js, or Data Driven Documents, is a powerful tool for building charts with JavaScript, CSS, and SVG. It&amp;rsquo;s a library that takes data as an input outputs dynamic, interactive, and beautiful visualizations. In this tutorial, we&amp;rsquo;ll build an animated realtime chart that changes its appearance when a new data point is added to Firestore.
Example of the realtime chart you will build in this tutorial
Project Setup Install D3 &amp;amp; Firebase Create a new project with Vite, then install D3 and Firebase.</description>
    </item>
    
    <item>
      <title>Firebase v9 Migration</title>
      <link>https://fireship.io/lessons/firebase-v9-migration/</link>
      <pubDate>Thu, 02 Sep 2021 12:10:52 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/firebase-v9-migration/</guid>
      <description>The Firebase team recently released a new web SDK that utilizes tree-shaking in order to lower JavaScript bundle sizes when used with module bundlers like Webpack and Rollup. At a high level, it works by only importing the functions/classes/code that we actually NEED, versus importing entire modules like auth, firestore, and so on. The Fireship site was able to reduce its JavaScript bundle size by ~35% ü§Ø by upgrading to the new version.</description>
    </item>
    
    <item>
      <title>Three.js Basics</title>
      <link>https://fireship.io/lessons/threejs-tutorial-portfolio/</link>
      <pubDate>Fri, 21 May 2021 08:45:49 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/threejs-tutorial-portfolio/</guid>
      <description></description>
    </item>
    
    <item>
      <title>WebRTC Video Chat on Firebase</title>
      <link>https://fireship.io/lessons/webrtc-firebase-video-chat/</link>
      <pubDate>Tue, 02 Mar 2021 15:10:46 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/webrtc-firebase-video-chat/</guid>
      <description>WebRTC facilities realtime audio/video communication on the web using a peer-to-peer protocol, allowing you to build apps like Zoom, Skype, etc.
The following lesson builds a 1-to-1 video chat, where each peer streams directly to the other peer - there is no need for a middle-man server to handle video content. However, a 3rd party server is required for signaling that stores shared data for stream negotiation. Firestore is an excellent choice for WebRTC because it is easy to listen to updates to the database in realtime.</description>
    </item>
    
    <item>
      <title>Seven Awesome PWA Features</title>
      <link>https://fireship.io/lessons/pwa-top-features/</link>
      <pubDate>Tue, 05 Jan 2021 09:31:10 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/pwa-top-features/</guid>
      <description>Progressive Web Apps (PWA) represent a collection of capabilities that put web apps on a level playing field with native iOS, Android, and desktops apps. The following tutorial implements a 7 lesser-known web features.
1. App Shortcuts App Shortcuts
file_type_config manifest.json { &amp;#34;name&amp;#34;: &amp;#34;Fireship&amp;#34;, //... &amp;#34;shortcuts&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Activity Feed&amp;#34;, &amp;#34;short_name&amp;#34;: &amp;#34;Feed&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;View your activity feed&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;/feed?utm_source=homescreen&amp;#34;, &amp;#34;icons&amp;#34;: [{ &amp;#34;src&amp;#34;: &amp;#34;/icons/feed.png&amp;#34;, &amp;#34;sizes&amp;#34;: &amp;#34;192x192&amp;#34; }] }, { &amp;#34;name&amp;#34;: &amp;#34;Recent Comments&amp;#34;, &amp;#34;short_name&amp;#34;: &amp;#34;Comments&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;View recent comments&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;/comments?</description>
    </item>
    
    <item>
      <title>Firebase Security Course</title>
      <link>https://fireship.io/courses/firebase-security/</link>
      <pubDate>Wed, 02 Dec 2020 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/firebase-security/</guid>
      <description>Firebase Security - The Full Course will teach you how to write, organize, and test Firestore security rules. The goal is to prepare developers for the safe and secure launch of a Firebase project.
üõ°Ô∏è What will I Learn? Firestore security fundamentals. How to audit a Firebase app for security vulnerabilities. Common use-cases including role-based auth, access-control lists, and more. Advanced techniques and code optimization tips Unit testing and debugging reports ü§î Is this Course Right for Me?</description>
    </item>
    
    <item>
      <title>Video to GIF with WASM</title>
      <link>https://fireship.io/lessons/wasm-video-to-gif/</link>
      <pubDate>Sun, 15 Nov 2020 10:14:24 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/wasm-video-to-gif/</guid>
      <description>Web Assembly (WASM) opens the door to building high-performance apps in the browser with languages other than JavaScript. Software normally reserved for installed desktop apps can now run in the browser with near-native performance. The following tutorial demonstrates how to use FFmpeg.wasm to perform CPU-intensive video editing tasks from a frontend react app.
Initial Setup Create a new react app, then install FFmpeg.
command line npx create-snowpack-app gifmakr --template @snowpack/app-template-react npm install @ffmpeg/ffmpeg @ffmpeg/core GIF Maker App Load FFmpeg The main binary for FFmpeg is loaded asynchronously via a CDN.</description>
    </item>
    
    <item>
      <title>FaunaDB Basics</title>
      <link>https://fireship.io/lessons/fauna-db-quickstart/</link>
      <pubDate>Sun, 11 Oct 2020 07:14:44 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/fauna-db-quickstart/</guid>
      <description>FaunaDB is a next-generation cloud database that combines the simplicity of NoSQL, without sacrificing the ability to model complex relationships. It&amp;rsquo;s completely serverless, fast, ACID-compliant, and has a generous free tier for small apps - basically everything you could possibly want in a fully-managed database.
The following lesson demonstrates how to model a basic twitter-inspired social graph with FaunaDB and access it on the web with Node.js. It will introduce you to Fauna Query Language (FQL) and common patterns for reading and writing to the database.</description>
    </item>
    
    <item>
      <title>Firebase Quickstart</title>
      <link>https://fireship.io/lessons/firebase-quickstart/</link>
      <pubDate>Sun, 26 Jul 2020 08:27:33 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/firebase-quickstart/</guid>
      <description>Firebase makes app development faster ‚ö°, cheaper üíµ, and more enjoyable üòÄ for developers. The idea behind a Backend-as-a-Service (BaaS) is to eliminate the need to write and maintain server-side code - things like user authentication, trusted API calls, security logic, database connections, traffic scaling, and the list goes on. These requirements take time, money, and add complexity to a project. The more resources you can invest in the frontend user experience, the more likely your app is to succeed.</description>
    </item>
    
    <item>
      <title>Regex Cheat Sheet</title>
      <link>https://fireship.io/lessons/regex-cheat-sheet-js/</link>
      <pubDate>Mon, 18 May 2020 16:17:00 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/regex-cheat-sheet-js/</guid>
      <description>Regular Expressions are notoriously difficult to learn - they have a very compact syntax that ends up looking like gibberish. However, they can be extremely powerful when it comes to form validation, find and replace tasks, and/or searching through a body of text. The following cheatsheet provides common RegEx examples and techniques for the JavaScript developer.
üî• There are several awesome tools that can help you debug RegEx in the browser - my personal favorite is RegExr.</description>
    </item>
    
    <item>
      <title>How to use JS with Flutter Web</title>
      <link>https://fireship.io/snippets/using-js-with-flutter-web/</link>
      <pubDate>Sun, 19 Apr 2020 08:00:17 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/using-js-with-flutter-web/</guid>
      <description>Flutter Web opens the door to building progressive web apps (PWAs) entirely in Dart. However, your Dart code will likely need to interop with JavaScript at some point to access browser APIs and/or your own custom JS apps. The following snippet demonstrates how access JS from a Flutter web app.
Using JavaScript in Dart &amp;amp; Flutter Dart.js is a built-in library that can interop with JavaScript.
Add a Script Create a JS file in the web directory and add some functions to it.</description>
    </item>
    
    <item>
      <title>How to Build a Theme-Switcher</title>
      <link>https://fireship.io/lessons/theme-toggler/</link>
      <pubDate>Tue, 24 Mar 2020 12:00:40 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/theme-toggler/</guid>
      <description>Almost every good dev website these days has the ability to switch between light/dark mode - but how do you toggle multiple themes and style variations? The following lesson demonstrates how to build a theme switcher, inspired by Alligator.io, that allows a user to switch between four different global styles - light, dark, light-solar, and dark-solar.
Theme Switcher Dropdown Menu The HTML markup should should have some type of clickable element.</description>
    </item>
    
    <item>
      <title>Electron Screen Capture Tutorial</title>
      <link>https://fireship.io/lessons/electron-screen-recorder-project-tutorial/</link>
      <pubDate>Wed, 04 Mar 2020 06:56:47 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/electron-screen-recorder-project-tutorial/</guid>
      <description>Electron opens the world of desktops apps to the average JavaScript developer. It wraps Chromium with Node.js, providing a browser for building UIs and Node for low-level system operations.
The following project tutorial demonstrates how to build a simple screen recorder with Electron. The app can retrieve the available screens from the system, turn the screen into a video feed, then record and save the raw video file to the system.</description>
    </item>
    
    <item>
      <title>Top 7 Security Concepts for Web Developers</title>
      <link>https://fireship.io/lessons/7-security-concepts-hacks-web-developers/</link>
      <pubDate>Thu, 13 Feb 2020 09:37:39 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/7-security-concepts-hacks-web-developers/</guid>
      <description>Cloud providers and web application frameworks go to great lengths to protect you from writing insecure code. The Cloud provides secure defaults and monitoring for your infrastructure, while Angular and React automatically sanitize HTML to prevent the injection of malicious JavaScript. Despite these safeguards, no application is 100%, secure and clever new exploits will be discovered. The following lesson explains some of the most common hacking techniques and how to secure your app against them.</description>
    </item>
    
    <item>
      <title>Sign In with Apple on Firebase</title>
      <link>https://fireship.io/lessons/apple-signin-with-firebase-tutorial/</link>
      <pubDate>Sun, 09 Feb 2020 08:41:24 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/apple-signin-with-firebase-tutorial/</guid>
      <description>Sign in with Apple was announced in 2019 and allows users to authenticate into your Firebase app with an Apple ID. Users must have two-factor authentication (2FA) enabled on their Apple account AND be signed into iCloud.
The following lesson demonstrates how to configure Apple SignIn with the Firebase JavaScript SDK (web).
üö® As of April 2020, all native iOS apps that offer social auth methods (Google, Facebook, etc.) MUST also include Apple Sign In as an option.</description>
    </item>
    
    <item>
      <title>Javascript 2020 Predictions</title>
      <link>https://fireship.io/lessons/javascript-2020-predictions/</link>
      <pubDate>Mon, 16 Dec 2019 07:27:03 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/javascript-2020-predictions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Firestore Pagination Guide</title>
      <link>https://fireship.io/lessons/firestore-pagination-guide/</link>
      <pubDate>Tue, 26 Nov 2019 09:17:06 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/firestore-pagination-guide/</guid>
      <description>Pagination is the process of dividing data into discrete pages. In Firestore, it is achieved by ordering a collection by a field, limiting it to a consistent page size, then offsetting the query. The Firebase Web SDK v7.3.0 introduced a new limitToLast(n) method that makes the process much easier. The following lesson demonstrates how to paginate Firestore data in both a forward and backward direction and discusses advanced serverside techniques.</description>
    </item>
    
    <item>
      <title>Deck.gl Google Maps Tutorial</title>
      <link>https://fireship.io/lessons/deckgl-google-maps-tutorial/</link>
      <pubDate>Tue, 29 Oct 2019 07:53:34 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/deckgl-google-maps-tutorial/</guid>
      <description>Have you ever tried to load thousands of datapoints into Google Maps? It probably didn&amp;rsquo;t go very well from a performance standpoint. Deck.gl is a library that solves this problem by running expensive computations on the GPU with WebGL. This means you can run realtime 3D visualizations on datasets with millions of geographic points.
In the following lesson, you will learn how to add high-performance data overlays to Google Maps based on a dataset of 140,000+ incidents of gun violence in the United States.</description>
    </item>
    
    <item>
      <title>Firebase Analytics for the Web</title>
      <link>https://fireship.io/lessons/firebase-analytics-web-guide/</link>
      <pubDate>Thu, 03 Oct 2019 13:08:58 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/firebase-analytics-web-guide/</guid>
      <description>Firebase recently announced support for Analytics and Remote Config on the web. When combined, these services make it possible to customize the UI/UX of your app based on data collected from Google Analytics. The following lesson will show you how to collect Google Analytics events and user properties, then read aggregated data in your app to customize the experience for a specific audience.
Initial Setup Firebase Analytics was added to the JavaScript SDK in version 7.</description>
    </item>
    
    <item>
      <title>That Weird JavaScript Course</title>
      <link>https://fireship.io/courses/javascript/</link>
      <pubDate>Sat, 22 Jun 2019 09:12:30 -0800</pubDate>
      
      <guid>https://fireship.io/courses/javascript/</guid>
      <description>That Weird JavaScript Course takes a unique approach towards teaching fundamental programming concepts. Not only will you learn practical techniques for building apps, but you will also gain knowledge about the history, science, and culture that surrounds the world&amp;rsquo;s most widely-used programming language. My mission is to make you a well-rounded JavaScript developer who can nail job interviews and build apps in the browser and NodeJS.
ü§î Is this Course Right for Me?</description>
    </item>
    
    <item>
      <title>Collection Group Query with Firestore</title>
      <link>https://fireship.io/lessons/collection-group-query-firestore/</link>
      <pubDate>Mon, 20 May 2019 08:43:13 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/collection-group-query-firestore/</guid>
      <description>At Google I/O 2019, Firebase launched a new query type, Collection Group Queries, which can have a major impact on your data modeling decisions. It allows you to combine all subcollections that share the same name, then query them together. Prior to this feature release, it was common to model one-to-many relationships with root collections that contained a field (or foreign key if you will) pointing to the parent document. Root collections are still fine, but this new feature makes it far more practical to organize your data in a natural hierarchy.</description>
    </item>
    
    <item>
      <title>Trusted Web Activity - PWA to Play Store Guide</title>
      <link>https://fireship.io/lessons/pwa-to-play-store/</link>
      <pubDate>Wed, 20 Feb 2019 10:27:58 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/pwa-to-play-store/</guid>
      <description>Web developers already have a variety of interesting options for using JavaScript to write native mobile apps with tools like React Native, Cordova/Ionic, NativeScript, just to name a few. I&amp;rsquo;ve spent many hours brainstorming with clients on this topic and recently summed up my thoughts about Hybrid App development, but there&amp;rsquo;s a brand new strategy to add to the list&amp;hellip; Trusted Web Activities (TWA). The following guide will show you how to covert any progressive web app to an Android App on the Google Play Store.</description>
    </item>
    
    <item>
      <title>Intersection Observer for Lazy-Loaded Images</title>
      <link>https://fireship.io/snippets/intersection-observer-lazy-load-images/</link>
      <pubDate>Fri, 25 Jan 2019 05:48:23 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/intersection-observer-lazy-load-images/</guid>
      <description>IntersectionObserver is a browser API that allows you to detect when an element is visible in the window or within a scrollable element. Browser support is pretty decent with Safari being the main holdout at the time of this article, but there is a polyfill to support Apple users.
Packages using IntersectionObserver:
QuickLink - Adds a preload tag to visible links on the page. Vanilla Lazy Load - Lazy loaded images.</description>
    </item>
    
    <item>
      <title>Flutter for JavaScript Developers</title>
      <link>https://fireship.io/lessons/flutter-for-js-developers/</link>
      <pubDate>Sun, 20 Jan 2019 12:28:17 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-for-js-developers/</guid>
      <description>So you&amp;rsquo;re a web developer working with JavaScript and curious about Flutter? That was me about one-year ago, and at the time, learning an uncommon language like Dart seemed ridiculous because there are existing hybrid app frameworks in JS. Then I tried it&amp;hellip; To my surprise, I was able to write productive code right out of the gate. The following lesson will compare Dart/Flutter to JS/ReactNative.
Source: FlutterDev subreddit
Throughout this lesson, you will see the üëâ emoji.</description>
    </item>
    
    <item>
      <title>How to Share Code between JavaScript Apps</title>
      <link>https://fireship.io/lessons/how-to-structure-a-large-web-app-project/</link>
      <pubDate>Tue, 04 Sep 2018 17:48:24 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/how-to-structure-a-large-web-app-project/</guid>
      <description>The right project structure for your app depends primarily on (1) its complexity, and (2) the size of your team. In this lesson, I will show you how to use NPM packages to share code in a big JavaScript project that contains multiple apps.
Monorepos versus Multiple Repos There are two high-level strategies for handling source control in a large complex web application - monorepo and multiple repos. Some developers have very strong preferences for one or the other, but it mostly just boils down to a series of tradeoffs.</description>
    </item>
    
    <item>
      <title>TensorFlow.js Quick Start Tutorial</title>
      <link>https://fireship.io/lessons/tensorflow-js-quick-start/</link>
      <pubDate>Sat, 31 Mar 2018 13:25:17 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/tensorflow-js-quick-start/</guid>
      <description>Google launched TensorFlow.js at TensorFlow Dev Summit 2018, which opens the door to building machine learning (ML) models in the browser. This means web developers can do things like&amp;hellip;
Build privacy-friendly AI features. Data never leaves the client, so you can build deep learning models without ever seeing the actual data. Use pre-trained Python ML models in your app. There are tons of successful Python-based models that you can load into the browser and start running predictions with minimal code.</description>
    </item>
    
    <item>
      <title>The Ultimate Beginners Guide to Firebase</title>
      <link>https://fireship.io/lessons/the-ultimate-beginners-guide-to-firebase/</link>
      <pubDate>Sun, 25 Feb 2018 16:13:49 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/the-ultimate-beginners-guide-to-firebase/</guid>
      <description>Today we&amp;rsquo;re going back to the basics in Firebase by building a basic web app from scratch. Even though this is beginner level, I think it&amp;rsquo;s very useful to write code with Firebase using nothing but plain JS, especially if you&amp;rsquo;re used to developing with a framework library like AngularFire, ReactFire, or Vuefire. In addition, I want give you my Why Firebase? opinion and explain why it&amp;rsquo;s my goto cloud provider.</description>
    </item>
    
    <item>
      <title>PWA Performance Optimization Tips</title>
      <link>https://fireship.io/lessons/pwa-performance-optimization-angular/</link>
      <pubDate>Sat, 25 Nov 2017 12:27:11 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/pwa-performance-optimization-angular/</guid>
      <description>The following lesson contains a handful of tips and ideas aimed at optimizing the Lighthouse PWA performance score. Any good optimization starts with a solid analysis, so I will also provide you with some advanced tools for analyzing the performance for your progressive web app.
High Performance PWAs with Angular PWA performance is largely dependent on the way you design your app. In this demo, I am following the PRPL pattern from Polymer as closely as possible.</description>
    </item>
    
  </channel>
</rss>
