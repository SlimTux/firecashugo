<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Fireship</title>
    <link>https://fireship.io/tags/react/</link>
    <description>Recent content in React on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2022 10:23:30 -0900</lastBuildDate><atom:link href="https://fireship.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Supabase Full Course</title>
      <link>https://fireship.io/courses/supabase/</link>
      <pubDate>Fri, 11 Nov 2022 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/supabase/</guid>
      <description>The Supabase Course is a project-based course that builds a Reddit-inspired web app from scratch with Supabase, PostgreSQL, and React.
🦄 What will I learn? The goal of this course is to provide you with a solid foundation for building fullstack Supabase apps on the web. Here&amp;rsquo;s a quick summary of what you can expect to learn&amp;hellip;
👨‍🎤 Master the Basics of Supabase ⚛ Build interactive UI components with React 💪 Type-safe queries with TypeScript 👨‍🚀 User Authentication and Row-level Security 📊 Data modeling in a relational SQL database 👨‍🔬 Advanced Postgres techniques like Triggers and Functions 🎭 End-to-end testing with Playwright 🚀 Full-stack deployment breakdown Ant Wilson @AntWilson While working with Zack on preparing the course, he pointed out some stuff in Supabase that I didn’t even know about!</description>
    </item>
    
    <item>
      <title>Next.js Firebase Full Course</title>
      <link>https://fireship.io/courses/react-next-firebase/</link>
      <pubDate>Sun, 11 Sep 2022 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/react-next-firebase/</guid>
      <description>Next.js Firebase - The Full Course takes you from zero to a production-ready hybrid-rendered webapp. Learn how to build a high-performance React app that features realtime data from Firebase and multiple server-side rendering paradigms with Next.js
🦄 What will I build? You will build a full-stack Social Blogging Platform inspired by sites like 🌈 DEV.to and Medium. Authors can create content under a custom username, then publish publicly with SEO-friendly rendering, while readers can heart or like posts in realtime.</description>
    </item>
    
    <item>
      <title>React - The full course</title>
      <link>https://fireship.io/courses/react/</link>
      <pubDate>Tue, 22 Feb 2022 11:11:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/react/</guid>
      <description>React - The Full Course is unlike any other React course on the Internet. It provides a fast-paced introduction to essential concepts, then puts them into practice by building multiple fun and challenging full-stack apps from scratch.
What will I learn? 👨‍🎤 Everything you need to be productive with React ⚡ Breakdown of key concepts in 100 Seconds 📚 Design patterns and best practices 🎣 Component composition and custom hooks 🚀 Lazy loading with Suspense 📱 How to build Progressive Web Apps (PWAs) 🎨 Animation with Framer Motion 🐕 Advanced data fetching with SWR and React Query ⚛️ Complex dynamic forms with React Final Form 🔥 Manage realtime data with Firestore 📰 SSR with Next.</description>
    </item>
    
    <item>
      <title>Web3 NFT Tutorial</title>
      <link>https://fireship.io/lessons/web3-solidity-hardhat-react-tutorial/</link>
      <pubDate>Mon, 17 Jan 2022 13:14:09 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/web3-solidity-hardhat-react-tutorial/</guid>
      <description>Over the last few months, you&amp;rsquo;ve likely heard there term Web3 thrown around in the media. It generally refers to decentralized webapps that use Ethereum smart contracts to replace traditional web servers. Sounds pretty cool, let&amp;rsquo;s build one!
The following tutorial demonstrates the entire process of building a smart contact, then interacting with it on the web using Ethers.js and React. The app can mint non-fungible tokens (NFTs) when a user transfers Ether from a wallet like MetaMask.</description>
    </item>
    
    <item>
      <title>Fulltext Search with Redis and Next.js</title>
      <link>https://fireship.io/lessons/redis-nextjs/</link>
      <pubDate>Mon, 10 Jan 2022 19:49:05 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/redis-nextjs/</guid>
      <description>Redis is an in-memory key-value store that is often used as a cache to make traditional databases faster. However, it has evolved into a multimodel database capable of fulltext search, graph relationships, AI workloads, and more.
In the following tutorial, we use Next.js and Redis Enterprise Cloud to build a webapp that can store JSON data in the cloud, then query it with results that update instantly in the UI.</description>
    </item>
    
    <item>
      <title>Stripe Payments JavaScript Course</title>
      <link>https://fireship.io/courses/stripe-js/</link>
      <pubDate>Mon, 25 Oct 2021 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/stripe-js/</guid>
      <description>This course has been deprecated. A completely new Stripe course will replace this content in the near future (Spring 2023). The Stripe Payments JavaScript Course is a project-based guide to building fullstack payment solutions on the web with Node.js and React.
The goal is to provide a solid foundation for app monetization 💸 by implementing common use-cases with Stripe APIs including Checkout, Payment Intents, and Billing.
Updated May 11th, 2020 Stripe API v2020-03-02</description>
    </item>
    
    <item>
      <title>Tailwind Tips &amp; Tricks</title>
      <link>https://fireship.io/lessons/tailwind-tutorial/</link>
      <pubDate>Tue, 19 Oct 2021 08:11:26 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/tailwind-tutorial/</guid>
      <description>The following tutorial will get you up and running with Tailwind CSS, empowering you to build a beautiful, responsive, and animated websites quickly. We will build a side navigation menu inspired by Discord.
Setup Install the Tailwind VS Code extension Install the Tailwind VS Code extension.
Use a JS Framework Feel free to use the JS framework of your choice. This tutorial uses Create React App.
Discord-Inspired Icon Navbar Make the App a Flexible Container Create a flexbox row by simply adding the flex utility to the parent element.</description>
    </item>
    
    <item>
      <title>React Native Firebase Chat Demo</title>
      <link>https://fireship.io/lessons/react-native-firebase-chat-demo/</link>
      <pubDate>Thu, 30 Sep 2021 13:18:57 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/react-native-firebase-chat-demo/</guid>
      <description>React Native is one of the most productive ways to build a cross-platform mobile app, especially for developers with a background in JavaScript. It has provides excellent support for Firebase with the React Native Firebase package
In the following lesson, we will build a basic chat app with React Native and Firebase. It allows a user to sign in with Google and then access a group chat room. The user can read a realtime feed of recent chat messages via Firestore and post new messages into the chat.</description>
    </item>
    
    <item>
      <title>Animated Notifications with Framer Motion</title>
      <link>https://fireship.io/lessons/framer-motion-advanced-notifications/</link>
      <pubDate>Sun, 12 Sep 2021 16:17:44 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/framer-motion-advanced-notifications/</guid>
      <description>Learn advanced Framer Motion techniques by creating an animated notification feed from scratch. We dive into concepts like transitions, spring animations, SVGs, and drag gestures to create dismissible notifications.
⚠️ This is the sequel to the Framer Motion Basics Tutorial. Make sure to watch that one first!
🚀 Try out the live demo
Notification Basic Notification Start by creating a basic animated notification using a motion.li component. Feel free to experiment with the notificationVariants object to customize the animation result.</description>
    </item>
    
    <item>
      <title>Animated Modals with Framer Motion</title>
      <link>https://fireship.io/lessons/framer-motion-modal/</link>
      <pubDate>Sun, 12 Sep 2021 15:20:52 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/framer-motion-modal/</guid>
      <description>Framer Motion is a React library for adding declarative animations to your components. It provides a variety of components that wrap plain HTML elements to extend them with animation superpowers 🦸. In this lesson, we will build a modal with Framer Motion with a variety of different animations styles.
🚀 Try out the live demo
Setup Installation Create a new React project
command line $ npx create-react-app framer-demo Open your new React app</description>
    </item>
    
    <item>
      <title>Handle media queries in React with hooks</title>
      <link>https://fireship.io/snippets/use-media-query-hook/</link>
      <pubDate>Thu, 08 Jul 2021 23:11:49 -0400</pubDate>
      
      <guid>https://fireship.io/snippets/use-media-query-hook/</guid>
      <description>Hooks let you use state and other React features without writing a class.
useMediaQuery() This simple hook makes it easy to share &amp;amp;&amp;amp; render components, logic, styling, etc. through the use of media queries from your JSX code.
Create the hook hooks/useMediaQuery.jsx import { useState, useEffect } from &amp;#34;react&amp;#34;; const useMediaQuery = (query) =&amp;gt; { const [matches, setMatches] = useState(false); useEffect(() =&amp;gt; { const media = window.matchMedia(query); if (media.matches !== matches) { setMatches(media.</description>
    </item>
    
    <item>
      <title>Google Sheets as a Database</title>
      <link>https://fireship.io/lessons/google-sheets-database-nextjs/</link>
      <pubDate>Tue, 22 Jun 2021 19:13:02 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/google-sheets-database-nextjs/</guid>
      <description>Choosing the right database for your app is difficult. If you have a small project or are just prototyping, Google Sheets actually works quite nicely as a primary database. It is especially practical for JAM-stack web apps that use server-side rendering. The following tutorial will teach you how to use Google Sheets as a database for Next.js.
⚠️ Be warned&amp;hellip; Google Sheets does not scale like a true production database (because that&amp;rsquo;s not what it is for).</description>
    </item>
    
    <item>
      <title>Invite-Only Firebase Phone Auth</title>
      <link>https://fireship.io/lessons/invite-only-firebase-phone-auth/</link>
      <pubDate>Wed, 24 Feb 2021 15:42:55 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/invite-only-firebase-phone-auth/</guid>
      <description>The meteoric rise of Clubhouse from a mostly unknown app to 10M weekly users demonstrates the power of #FOMO - fear of missing out. No, you can&amp;rsquo;t just download the app and start having fun. It uses an invite-only authentication system that requires a current user to invite you to the club with your phone number. Once you&amp;rsquo;re in, you&amp;rsquo;re granted two invites to send to your friends, creating a pyramid of organic user growth.</description>
    </item>
    
    <item>
      <title>Video to GIF with WASM</title>
      <link>https://fireship.io/lessons/wasm-video-to-gif/</link>
      <pubDate>Sun, 15 Nov 2020 10:14:24 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/wasm-video-to-gif/</guid>
      <description>Web Assembly (WASM) opens the door to building high-performance apps in the browser with languages other than JavaScript. Software normally reserved for installed desktop apps can now run in the browser with near-native performance. The following tutorial demonstrates how to use FFmpeg.wasm to perform CPU-intensive video editing tasks from a frontend react app.
Initial Setup Create a new react app, then install FFmpeg.
command line npx create-snowpack-app gifmakr --template @snowpack/app-template-react npm install @ffmpeg/ffmpeg @ffmpeg/core GIF Maker App Load FFmpeg The main binary for FFmpeg is loaded asynchronously via a CDN.</description>
    </item>
    
    <item>
      <title>React Firebase Chat App</title>
      <link>https://fireship.io/lessons/react-firebase-chat-app-tutorial/</link>
      <pubDate>Fri, 25 Sep 2020 07:55:33 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/react-firebase-chat-app-tutorial/</guid>
      <description>The following tutorial demonstrates how to build a simple group chat app with React and Firebase. The goal of this lesson is to showcase important beginner concepts when working with the ⚛️🔥 React Firebase stack, including user authentication, firestore, and security rules.
React Firebase Chat Demo
Important Links
Live Demo Source Code React Firebase Hooks Initial Setup Firebase Project Create a free Firebase project. Make sure to enable Google SignIn and and activate Cloud Firestore.</description>
    </item>
    
    <item>
      <title>Multi-Level Dropdown Menu with React</title>
      <link>https://fireship.io/lessons/dropdown-menu-multi-level-react/</link>
      <pubDate>Thu, 16 Apr 2020 19:59:08 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/dropdown-menu-multi-level-react/</guid>
      <description>The following tutorial demonstrates how to build animated dropdown menu with React. It is inspired by Facebook&amp;rsquo;s March 2020 web UI update.
Facebook&amp;rsquo;s new UI in 2020
Initial Setup Start by creating a new app with CRA and install the React Transition Group package to handle animation.
command line npx create-react-app facebook cd facebook npm i react-transition-group npm start Top Navigation Build a simple flexbox navigation bar to give the dropdown some context.</description>
    </item>
    
    <item>
      <title>Javascript 2020 Predictions</title>
      <link>https://fireship.io/lessons/javascript-2020-predictions/</link>
      <pubDate>Mon, 16 Dec 2019 07:27:03 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/javascript-2020-predictions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PayPal Checkout</title>
      <link>https://fireship.io/lessons/paypal-checkout-frontend/</link>
      <pubDate>Sun, 23 Jun 2019 06:44:00 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/paypal-checkout-frontend/</guid>
      <description>In February 2019, the PayPal Checkout API received a much needed facelift that brought massive improvements to the developer experience. The new v2 API has detailed documentation on par with Stripe and offers one of the smoothest paths to start accepting payments and/or subscriptions in a progressive web app. The following lesson will show you how to start accepting payments entirely from your frontend JavaScript code with PayPal Checkout with your choice of Angular, React, and Vue.</description>
    </item>
    
    <item>
      <title>TypeScript Decorators by Example</title>
      <link>https://fireship.io/lessons/ts-decorators-by-example/</link>
      <pubDate>Sun, 03 Feb 2019 09:39:23 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/ts-decorators-by-example/</guid>
      <description>One of coolest, yet least approachable features in TypeScript is the Decorator. We see Decorators implemented by the Angular Framework for classes like @Component, properties like @ViewChild, and methods like @HostListener, but have you ever considered building your own from scratch? They seem magical 🍄 in practice, but they are just JavaScript functions that allow us to annotate our code or hook into its behavior - this is known as Metaprogramming.</description>
    </item>
    
  </channel>
</rss>
