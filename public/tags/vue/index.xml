<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on Fireship</title>
    <link>https://fireship.io/tags/vue/</link>
    <description>Recent content in Vue on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Apr 2022 12:14:10 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Realtime SSR with Nuxt3 and Firebase</title>
      <link>https://fireship.io/lessons/nuxt-3-firebase/</link>
      <pubDate>Thu, 28 Apr 2022 12:14:10 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/nuxt-3-firebase/</guid>
      <description>Nuxt3 hit release candidate recently with a variety of awesome new features. But you might be wondering&amp;hellip; how do I use Nuxt3 with Firebase? There is no documented best practice as of today, so I put together a demo that is capable of server-side rendering (SSR) via Firestore, followed by hydration to secure realtime data on the client. This gives a website the benefits SEO-friendly HTML, without sacrificing the power the realtime data updates after the initial page load.</description>
    </item>
    
    <item>
      <title>Autosave Vue Forms with Firestore</title>
      <link>https://fireship.io/lessons/vue-autosaving-forms-with-firestore/</link>
      <pubDate>Tue, 07 Apr 2020 15:14:17 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/vue-autosaving-forms-with-firestore/</guid>
      <description>Modern applications that accept complex user inputs often provide an automatic save action that runs in the background, such as Google Docs and Microsoft Office:
Microsoft Office files are auto-saved
The following lesson builds a reactive Vue form that automatically syncs the user&amp;rsquo;s input to a backend database - Firestore. It keeps track of the state of the form, and when modified, waits for a short debounce before writing the changes to the backend database.</description>
    </item>
    
    <item>
      <title>The Vue Firebase Project Course</title>
      <link>https://fireship.io/courses/vue/</link>
      <pubDate>Wed, 01 Apr 2020 10:23:30 -0900</pubDate>
      
      <guid>https://fireship.io/courses/vue/</guid>
      <description>ðŸŽ¤ What will I build? The Vue Firebase Project Course will teach you the basics of full-stack web development by building a chat prototype from scratch.
You will build a realtime ðŸ’¬ walkie-talkie style chat app with the ability to record and upload audio from the device - inspired by the popular Voxer mobile app.
ðŸ’¡ What will I Learn? In this course you will learn&amp;hellip;
Fundamentals of of Vue components and reactivity Dynamic Vue routing User authentication with Firebase (Anonymous, Email/Password) Usage of the Vuefire Package Vue Composition API Chat Features in Firestore Record audio on the web Upload files to Firebase Storage ðŸ¤” Is this Course Right for Me?</description>
    </item>
    
    <item>
      <title>Javascript 2020 Predictions</title>
      <link>https://fireship.io/lessons/javascript-2020-predictions/</link>
      <pubDate>Mon, 16 Dec 2019 07:27:03 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/javascript-2020-predictions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PayPal Checkout</title>
      <link>https://fireship.io/lessons/paypal-checkout-frontend/</link>
      <pubDate>Sun, 23 Jun 2019 06:44:00 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/paypal-checkout-frontend/</guid>
      <description>In February 2019, the PayPal Checkout API received a much needed facelift that brought massive improvements to the developer experience. The new v2 API has detailed documentation on par with Stripe and offers one of the smoothest paths to start accepting payments and/or subscriptions in a progressive web app. The following lesson will show you how to start accepting payments entirely from your frontend JavaScript code with PayPal Checkout with your choice of Angular, React, and Vue.</description>
    </item>
    
    <item>
      <title>Firebase Microservices With Cloud Run</title>
      <link>https://fireship.io/lessons/firebase-microservices-with-cloud-run/</link>
      <pubDate>Tue, 09 Apr 2019 10:25:02 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/firebase-microservices-with-cloud-run/</guid>
      <description>Yesterday Google Cloud released a game-changing new product called Cloud Run that allows you to run and scale stateless Docker containers in a serverless execution environment powered by Knative.
Benefits
Run backend microservices with any programming language and/or dependencies. Serverless pricing, only pay for what you use. Scale automatically. Prevent cloud vendor lock-in. Some of the things you might do with it&amp;hellip;
Deploy server-rendered SSR frontend apps to Firebase Hosting, like Angular Universal, Nuxt, or Next.</description>
    </item>
    
  </channel>
</rss>
