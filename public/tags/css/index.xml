<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on Fireship</title>
    <link>https://fireship.io/tags/css/</link>
    <description>Recent content in css on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Oct 2021 08:11:26 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tailwind Tips &amp; Tricks</title>
      <link>https://fireship.io/lessons/tailwind-tutorial/</link>
      <pubDate>Tue, 19 Oct 2021 08:11:26 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/tailwind-tutorial/</guid>
      <description>The following tutorial will get you up and running with Tailwind CSS, empowering you to build a beautiful, responsive, and animated websites quickly. We will build a side navigation menu inspired by Discord.
Setup Install the Tailwind VS Code extension Install the Tailwind VS Code extension.
Use a JS Framework Feel free to use the JS framework of your choice. This tutorial uses Create React App.
Discord-Inspired Icon Navbar Make the App a Flexible Container Create a flexbox row by simply adding the flex utility to the parent element.</description>
    </item>
    
    <item>
      <title>Wavy Backgrounds with CSS &amp; SVG</title>
      <link>https://fireship.io/lessons/wavy-backgrounds/</link>
      <pubDate>Thu, 19 Aug 2021 12:06:33 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/wavy-backgrounds/</guid>
      <description>Wavy backgrounds have been all the rage in design for the last few years. The following tutorial demonstrates several different ways to create wavy backgrounds with CSS and SVG.
CSS Versions Bubble Pattern CSS Bubble
The bubble pattern creates an elliptical shape that stretches over the top of the content. It only requires CSS to create the effect.
file_type_html index.html &amp;lt;section class=&amp;#34;bubble&amp;#34;&amp;gt; &amp;lt;!-- content here --&amp;gt; &amp;lt;/section&amp;gt; Use the pseudo-element ::after to style an eliptical border radius to the content.</description>
    </item>
    
    <item>
      <title>Animated CSS Cards Tutorial</title>
      <link>https://fireship.io/lessons/css-cards-animated/</link>
      <pubDate>Thu, 10 Sep 2020 07:33:19 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/css-cards-animated/</guid>
      <description>The following lesson demonstrates how to build an animated card collection inspired by the 2020 homepage of css-tricks.com.
The original version on CSS tricks
The cloned card stack
Stacked Card Start by adding the following HTML markup.
HTML file_type_html index.html &amp;lt;section class=&amp;#34;card-list&amp;#34;&amp;gt; &amp;lt;article class=&amp;#34;card&amp;#34;&amp;gt; &amp;lt;header class=&amp;#34;card-header&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Sep 11th 2020&amp;lt;/p&amp;gt; &amp;lt;h2&amp;gt;Never forget&amp;lt;/h2&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;div class=&amp;#34;card-author&amp;#34;&amp;gt; &amp;lt;a class=&amp;#34;author-avatar&amp;#34; href=&amp;#34;#&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;avatar.png&amp;#34; /&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;svg class=&amp;#34;half-circle&amp;#34; viewBox=&amp;#34;0 0 106 57&amp;#34;&amp;gt; &amp;lt;path d=&amp;#34;M102 4c0 27.</description>
    </item>
    
    <item>
      <title>Multi-Level Dropdown Menu with React</title>
      <link>https://fireship.io/lessons/dropdown-menu-multi-level-react/</link>
      <pubDate>Thu, 16 Apr 2020 19:59:08 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/dropdown-menu-multi-level-react/</guid>
      <description>The following tutorial demonstrates how to build animated dropdown menu with React. It is inspired by Facebook&amp;rsquo;s March 2020 web UI update.
Facebook&amp;rsquo;s new UI in 2020
Initial Setup Start by creating a new app with CRA and install the React Transition Group package to handle animation.
command line npx create-react-app facebook cd facebook npm i react-transition-group npm start Top Navigation Build a simple flexbox navigation bar to give the dropdown some context.</description>
    </item>
    
    <item>
      <title>How to Build a CSS Dropdown Menu</title>
      <link>https://fireship.io/snippets/basic-css-dropdown-menu/</link>
      <pubDate>Tue, 24 Mar 2020 12:03:21 -0700</pubDate>
      
      <guid>https://fireship.io/snippets/basic-css-dropdown-menu/</guid>
      <description>The following snippet demonstrates how to build a dropdown menu with CSS (no JavaScript) that maintains its state when clicked. The special sauce in this demo is the :focus-within pseudo selector, which allows the dropdown to stay open when its child links are clicked.
Step 1: Start with a Navigation Bar Start with some navbar markup.
file_type_html &amp;lt;nav class=&amp;#34;navbar&amp;#34;&amp;gt; &amp;lt;ul class=&amp;#34;navbar-nav&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;nav-item&amp;#34;&amp;gt;Home&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;#34;nav-item&amp;#34;&amp;gt;About&amp;lt;/li&amp;gt; &amp;lt;!-- Dropdown will go here --&amp;gt; &amp;lt;li class=&amp;#34;nav-item&amp;#34;&amp;gt;Login&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/nav&amp;gt; The navbar is just simple flex container.</description>
    </item>
    
    <item>
      <title>How to Build a Theme-Switcher</title>
      <link>https://fireship.io/lessons/theme-toggler/</link>
      <pubDate>Tue, 24 Mar 2020 12:00:40 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/theme-toggler/</guid>
      <description>Almost every good dev website these days has the ability to switch between light/dark mode - but how do you toggle multiple themes and style variations? The following lesson demonstrates how to build a theme switcher, inspired by Alligator.io, that allows a user to switch between four different global styles - light, dark, light-solar, and dark-solar.
Theme Switcher Dropdown Menu The HTML markup should should have some type of clickable element.</description>
    </item>
    
    <item>
      <title>CSS Grid Layout Examples</title>
      <link>https://fireship.io/lessons/three-responsive-css-grid-layouts/</link>
      <pubDate>Sun, 08 Mar 2020 11:04:48 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/three-responsive-css-grid-layouts/</guid>
      <description>The following lesson contains three examples of CSS Grid layouts.
Bootstrap-Style 12 Column Grid Grid can significantly reduce the amount of code required to build responsive row/column layouts. Unlike a flex-based grid like Bootstrap, it does not require a bunch of classes in the markup to make the children responsive.
The grid below is an example of an implicit grid because we do not know the exact number of rows or columns in advance.</description>
    </item>
    
    <item>
      <title>Responsive Animated Navbar with CSS</title>
      <link>https://fireship.io/lessons/css-responsive-icon-navbar/</link>
      <pubDate>Sat, 29 Feb 2020 15:04:10 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/css-responsive-icon-navbar/</guid>
      <description>The following lesson demonstrates how to build a responsive, animated icon navigation bar using nothing but plain CSS. This project combines a variety of modern CSS features like flexbox, media queries, transitions, and filters to build a unique experience with minimal code.
Step 1 - Initial Setup ðŸš¨ The demo contains a bunch of dummy HTML not shown below. Copy or clone it from the full source code to build the demo locally.</description>
    </item>
    
    <item>
      <title>Flutter Widget Positioning - A Guide for the CSS Developer</title>
      <link>https://fireship.io/lessons/flutter-widget-positioning-guide/</link>
      <pubDate>Tue, 29 Jan 2019 07:10:30 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/flutter-widget-positioning-guide/</guid>
      <description>The addition of Flexbox to CSS revolutionized the way we position elements on the web. It makes the alignment of elements on a 2D plane automatic and well, flexible. Fortunately, Flutter uses the same principles for aligning widgets with Flex, Column, and Row. In addition, it supports absolute and fixed positioning with Stack.
The following lesson will teach you how to position containers and build layouts in Flutter with direct comparisons to CSS Flexbox.</description>
    </item>
    
    <item>
      <title>Ionic CSS Variables Dynamic Theme Generator</title>
      <link>https://fireship.io/lessons/css-variables-in-ionic-4/</link>
      <pubDate>Tue, 14 Aug 2018 15:10:28 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/css-variables-in-ionic-4/</guid>
      <description>One of the major changes to theming in Ionic 4 is the use of CSS variables, which are simply CSS values that can be reused across multiple elements or components. Unlike variables in Sass or LESS that need to be compiled, they can be changed and interpreted by the browser on the fly. This is an extremely powerful feature for web components that use the Shadow DOM, like Ionic 4.</description>
    </item>
    
  </channel>
</rss>
