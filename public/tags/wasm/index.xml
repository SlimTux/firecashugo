<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wasm on Fireship</title>
    <link>https://fireship.io/tags/wasm/</link>
    <description>Recent content in wasm on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Nov 2020 10:14:24 -0700</lastBuildDate><atom:link href="https://fireship.io/tags/wasm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Video to GIF with WASM</title>
      <link>https://fireship.io/lessons/wasm-video-to-gif/</link>
      <pubDate>Sun, 15 Nov 2020 10:14:24 -0700</pubDate>
      
      <guid>https://fireship.io/lessons/wasm-video-to-gif/</guid>
      <description>Web Assembly (WASM) opens the door to building high-performance apps in the browser with languages other than JavaScript. Software normally reserved for installed desktop apps can now run in the browser with near-native performance. The following tutorial demonstrates how to use FFmpeg.wasm to perform CPU-intensive video editing tasks from a frontend react app.
Initial Setup Create a new react app, then install FFmpeg.
command line npx create-snowpack-app gifmakr --template @snowpack/app-template-react npm install @ffmpeg/ffmpeg @ffmpeg/core GIF Maker App Load FFmpeg The main binary for FFmpeg is loaded asynchronously via a CDN.</description>
    </item>
    
  </channel>
</rss>
