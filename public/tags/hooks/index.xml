<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hooks on Fireship</title>
    <link>https://fireship.io/tags/hooks/</link>
    <description>Recent content in hooks on Fireship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Jul 2021 23:11:49 -0400</lastBuildDate><atom:link href="https://fireship.io/tags/hooks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handle media queries in React with hooks</title>
      <link>https://fireship.io/snippets/use-media-query-hook/</link>
      <pubDate>Thu, 08 Jul 2021 23:11:49 -0400</pubDate>
      
      <guid>https://fireship.io/snippets/use-media-query-hook/</guid>
      <description>Hooks let you use state and other React features without writing a class.
useMediaQuery() This simple hook makes it easy to share &amp;amp;&amp;amp; render components, logic, styling, etc. through the use of media queries from your JSX code.
Create the hook hooks/useMediaQuery.jsx import { useState, useEffect } from &amp;#34;react&amp;#34;; const useMediaQuery = (query) =&amp;gt; { const [matches, setMatches] = useState(false); useEffect(() =&amp;gt; { const media = window.matchMedia(query); if (media.matches !== matches) { setMatches(media.</description>
    </item>
    
  </channel>
</rss>
