[{"author":null,"date":1668972210,"description":"Get to know your instructor Zack DeRose","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"8aa552958c706079600e872093769849","permalink":"https://fireship.io/courses/supabase/intro-zack/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/intro-zack/","section":"courses","summary":"More Content from Zack Subscribe to the Supaship YouTube Channel Follow Zack on Twitter ","tags":null,"title":"Meet Zack","type":"courses","url":"https://fireship.io/courses/supabase/intro-zack/","weight":1,"wordcount":14},{"author":null,"date":1668194610,"description":"Source code and course resources","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"5d16960f4ba082c2742496aac688cbdf","permalink":"https://fireship.io/courses/js/101-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/101-resources/","section":"courses","summary":" Why should you learn JavaScript? Course Resources Source Code Required Tools Node.js. I would recommend using nvm mac/linux or nvm windows to install Node.js. Get Help Discord ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/js/101-resources/","weight":1,"wordcount":27},{"author":null,"date":1636658610,"description":"Build a Tic-Tac-Toe game with Angular","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ae21940e8687c5cd608063dd177d78d8","permalink":"https://fireship.io/courses/angular/start-angular-beginner-tutorial/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/start-angular-beginner-tutorial/","section":"courses","summary":"Brand New to Angular? The following beginner-level tutorial teaches you how to build a Tic-Tac-Toe game with Angular. It\u0026rsquo;s not part of the full course, but rather a gentle intro project to get acquainted with the Angular ecosystem. It is completely optional.\nTic-Tac-Toe Source Code\nExample of the final tic-tac-toe PWA deployed in this section\nRecommended Lessons You may also find the following lessons useful for mastering the basics of Angular.","tags":null,"title":"Angular Beginner Project","type":"courses","url":"https://fireship.io/courses/angular/start-angular-beginner-tutorial/","weight":1,"wordcount":81},{"author":null,"date":1636658610,"description":"Learn the basics of Flutter in 100 seconds","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"51e2f272e6ea9cd60c697b31d9e99414","permalink":"https://fireship.io/courses/flutter-firebase/intro-flutter-100s/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase/intro-flutter-100s/","section":"courses","summary":"","tags":null,"title":"Flutter Explained in 100 Seconds","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-flutter-100s/","weight":1,"wordcount":0},{"author":null,"date":1636658610,"description":"How to be successful in this course","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"4104dcbb4871420607f9f6570b9c291f","permalink":"https://fireship.io/courses/flutter-firebase-v1/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/intro-resources/","section":"courses","summary":"Course Resources QuizApp Source Code Quiz Questions Repo Flutter Docs FlutterFire Docs Social Slack Chat YouTube \u0026amp; Twitter Additional Resources Get it on the App Store Get it on Google Play Advanced Flutter Tutorials ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/intro-resources/","weight":1,"wordcount":34},{"author":null,"date":1636658610,"description":"High-level overview of VS Code features","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f165bb0a0c1cebaa8df1df7f7e170e0b","permalink":"https://fireship.io/courses/vscode-tricks/vscode-100-seconds/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/vscode-tricks/vscode-100-seconds/","section":"courses","summary":"","tags":null,"title":"VS Code in 100 Seconds","type":"courses","url":"https://fireship.io/courses/vscode-tricks/vscode-100-seconds/","weight":1,"wordcount":0},{"author":null,"date":1612207410,"description":"Watch this video before starting the course!","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"1d447991e77a419afdaa992e46ec8331","permalink":"https://fireship.io/courses/react-next-firebase/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/intro-resources/","section":"courses","summary":"I updated my package.json with the versions specified in this lesson? Using other versions could result in broken code\nEssentials 🚀 Live Demo 💾 Source code 💬 Slack Official Resources Next Docs Firebase Docs React Docs Helpful Bonus Content React Dropdown Firebase Data Modeling Course Firebase Security Course Packages It is highly recommended that you follow along with the same package versions show below.\nfile_type_npm package.json { // ... \u0026#34;dependencies\u0026#34;: { \u0026#34;firebase\u0026#34;: \u0026#34;^8.","tags":null,"title":"README","type":"courses","url":"https://fireship.io/courses/react-next-firebase/intro-resources/","weight":1,"wordcount":93},{"author":null,"date":1563305010,"description":"App tour and course resources","dir":"courses/ionic/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"7009879002ba9ffd32732a47f8c2a778","permalink":"https://fireship.io/courses/ionic/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/intro-resources/","section":"courses","summary":"How to Follow this Course You should clone the project source code as a reference. However, I recommend that you create your own project from scratch, then pause after each video and write some code. You will get the most out of a project-based course like this when you learn by doing. Experiment with your own code throughout the process and break things.\nResources Bookmark these pages:\nProject The soruce code if the source of truth for this project.","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/ionic/intro-resources/","weight":1,"wordcount":147},{"author":null,"date":1555434750,"description":"Helpful Resources supporting the Cloud Firestore Course","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"2b4a4a19869c91c02648f000931a6e87","permalink":"https://fireship.io/courses/firestore-data-modeling/intro-course-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/intro-course-resources/","section":"courses","summary":"Course Resources Query Code Snippets on Github Cloud Firestore Docs Social Slack Chat YouTube \u0026amp; Twitter Additional Resources Get to Know Cloud Firestore Data Modeling AngularFirebase.com Cloud Functions Master Course ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/intro-course-resources/","weight":1,"wordcount":30},{"author":null,"date":1555434750,"description":"ECMAScript's evolution over the last 25 years","dir":"courses/javascript/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"34394e23014ee67b670736972f26a200","permalink":"https://fireship.io/courses/javascript/intro-history/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/javascript/intro-history/","section":"courses","summary":"JavaScript started as a prototype scripting language written by Brendan Eich in 1995 for the Netscape Navigator browser under the working name of \u0026ldquo;Mocha\u0026rdquo;. After being renamed to \u0026ldquo;JavaScript\u0026rdquo;, it was standardized by ECMA International as ECMA-262, or ECMAScript in 1997. The authoritative group of people/orgs in charge of the standard is known as TC-39.\nOver the next 25 years, it would see a variety of highs and lows. The most notable releases include","tags":null,"title":"The History of JavaScript","type":"courses","url":"https://fireship.io/courses/javascript/intro-history/","weight":1,"wordcount":122},{"author":null,"date":1551285150,"description":"Helpful links for the the Cloud Functions Master Course","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"7a71de135d83607d9c45da4ace72ac3a","permalink":"https://fireship.io/courses/cloud-functions/intro-course-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/cloud-functions/intro-course-resources/","section":"courses","summary":"If you get stuck or have questions, feel free to reach out for 1-on-1 support:\nChat Support on Slack I recommend following along and writing your own code from scratch, but the source code is available on Github as a reference:\nProject Source Code We are only scratching the surface, check out these learning resources:\nAngularFirebase Cloud Functions Lessons Official Firebase Functions Docs and Video Series Also, follow me on Github and Twitter to stay up to date:","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/cloud-functions/intro-course-resources/","weight":1,"wordcount":84},{"author":null,"date":1668972210,"description":"Resources for the course","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"022a3171e033047451debddc5104dcf6","permalink":"https://fireship.io/courses/supabase/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/intro-resources/","section":"courses","summary":"Essentials Live App: https://supaship.io Demo of our course\u0026rsquo;s endpoint (note: auth will not work): https://supaship-course-demo.netlify.app Github repo: https://github.com/fireship-io/supaship.io Branch showing the end state of our course: https://github.com/fireship-io/supaship.io/tree/course-end-point Official Resources Supabase Docs: https://supabase.com/docs Playwright Docs: https://playwright.dev/docs/intro React Docs: https://reactjs.org/ React Router Docs: https://reactrouter.com/en/main Tailwind Docs: https://tailwindcss.com/ Vite Docs: https://vitejs.dev/guide/ Docker installation: https://docs.docker.com/get-docker/ Postgres installation: https://www.postgresql.org/download/ For Questions Zack\u0026rsquo;s Twitter: https://www.twitter.com/zackderose Fireship Discord: https://discord.gg/SpDdJ3qaKK Supaship Live: https://www.youtube.com/@Supaship6000 Dependencies \u0026#34;dependencies\u0026#34;: { \u0026#34;@supabase/auth-ui-react\u0026#34;: \u0026#34;^0.2.6\u0026#34;, \u0026#34;@supabase/supabase-js\u0026#34;: \u0026#34;^2.","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/supabase/intro-resources/","weight":2,"wordcount":102},{"author":null,"date":1668194610,"description":"A quick introduction to the greatest programming language ever created","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"a78d56105dbacc00d421f9bf4e097085","permalink":"https://fireship.io/courses/js/101-js-in-100-seconds/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/js/101-js-in-100-seconds/","section":"courses","summary":"","tags":null,"title":"JavaScript in 100 Seconds","type":"courses","url":"https://fireship.io/courses/js/101-js-in-100-seconds/","weight":2,"wordcount":0},{"author":null,"date":1645560690,"description":"What is React.js?","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"98366bb48b810c5f1d2e73adc04e4890","permalink":"https://fireship.io/courses/react/basics-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-react/","section":"courses","summary":"","tags":null,"title":"React in 100 Seconds","type":"courses","url":"https://fireship.io/courses/react/basics-react/","weight":2,"wordcount":0},{"author":null,"date":1636658610,"description":"Launch VS Code from the command line","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a37d18ad846e3722f373421b8ffd8385","permalink":"https://fireship.io/courses/vscode-tricks/basics-cli/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-cli/","section":"courses","summary":"When you install VS Code, it adds the code command to your terminal.\n⚠️ If you do not have access to the code command, follow the setup instructions for your machine here.\n✨ Trick - Open VS Code from the Terminal Use the CLI to launch a new VS Code window, or open a file in the current workspace.\ncommand line code . # current working dir code /path/to/dir # path code ~/.","tags":null,"title":"CLI","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-cli/","weight":2,"wordcount":79},{"author":null,"date":1636658610,"description":"What makes Flutter so Special?","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"89f8d587ee197b38e7fd452a8a2ff648","permalink":"https://fireship.io/courses/flutter-firebase-v1/intro-how-flutter-works/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/intro-how-flutter-works/","section":"courses","summary":"","tags":null,"title":"Flutter Overview","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/intro-how-flutter-works/","weight":2,"wordcount":0},{"author":null,"date":1636658610,"description":"How to be successful in this course","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"7d028c80153c291890bc1595afa77d22","permalink":"https://fireship.io/courses/flutter-firebase/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/intro-resources/","section":"courses","summary":"Code QuizApp Source Code Quiz Questions Repo Optional Courses Dart Course Firestore Data Modeling Course Advanced Flutter Tutorials Social Slack Chat YouTube \u0026amp; Twitter Apps Get it on the App Store Get it on Google Play Docs Flutter Docs FlutterFire Docs ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-resources/","weight":2,"wordcount":41},{"author":null,"date":1636658610,"description":"Ionic 4 technical overview","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"30159eca423477600e4cfeb680ed9a96","permalink":"https://fireship.io/courses/ionic/intro-what-ionic/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/intro-what-ionic/","section":"courses","summary":"","tags":null,"title":"What is Ionic","type":"courses","url":"https://fireship.io/courses/ionic/intro-what-ionic/","weight":2,"wordcount":0},{"author":null,"date":1612207410,"description":"Learn the fundamentals of React.js and reactive UI development","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"97098275a0876b5b6674427ec7969ec0","permalink":"https://fireship.io/courses/react-next-firebase/intro-react-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/intro-react-basics/","section":"courses","summary":"Which hook will be fired when the component is first mounted or created? ⚠️ Optional This video was originally released on YouTube and is intended to be a primer for React. It is not required to build the main demo app in the course.","tags":null,"title":"React Basics","type":"courses","url":"https://fireship.io/courses/react-next-firebase/intro-react-basics/","weight":2,"wordcount":44},{"author":null,"date":1605874290,"description":"A quick primer on Firestore Security rules","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"afea70131166e681bf086d82e4715d9d","permalink":"https://fireship.io/courses/firebase-security/intro-firebase-security-100-seconds/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firebase-security/intro-firebase-security-100-seconds/","section":"courses","summary":"","tags":null,"title":"Firebase Security in 100 Seconds","type":"courses","url":"https://fireship.io/courses/firebase-security/intro-firebase-security-100-seconds/","weight":2,"wordcount":0},{"author":null,"date":1555434750,"description":"Key terms and concepts related to the inner-workings of JS","dir":"courses/javascript/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"12a76e4616cecb68c453dcbb1ba961aa","permalink":"https://fireship.io/courses/javascript/intro-how-js-works/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/javascript/intro-how-js-works/","section":"courses","summary":"JavaScript is often described as some variation of \u0026ldquo;high-level, single-threaded, garbage-collected, interpreted (or just-in-time compiled), prototype-based, multi-paradigm, dynamic language with a non-blocking event loop\u0026rdquo;. You may encounter these terms during an JS job interview, but understanding their meaning will help you better understand the behavior of your code. Let\u0026rsquo;s unpack each of these key terms.\nKeep in mind, you don't *need* to know these concepts to start using JavaScript productively. It may take years of development experience before they really start to sink in, so don't worry if it feels overwhelming.","tags":null,"title":"How JavaScript Works","type":"courses","url":"https://fireship.io/courses/javascript/intro-how-js-works/","weight":2,"wordcount":467},{"author":null,"date":1555434750,"description":"A brief history of Cloud Firestore","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"b180e131143fa1757ecbbc696a726681","permalink":"https://fireship.io/courses/firestore-data-modeling/intro-what-is-firestore/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firestore-data-modeling/intro-what-is-firestore/","section":"courses","summary":"","tags":null,"title":"What is Firestore","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/intro-what-is-firestore/","weight":2,"wordcount":0},{"author":null,"date":1551285150,"description":"A Bird's Eye View of Serverless","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"44cbb28505bfab5525038d94e3f70a49","permalink":"https://fireship.io/courses/cloud-functions/intro-what-is-serverless/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/intro-what-is-serverless/","section":"courses","summary":"","tags":null,"title":"What is Serverless?","type":"courses","url":"https://fireship.io/courses/cloud-functions/intro-what-is-serverless/","weight":2,"wordcount":0},{"author":null,"date":1668972210,"description":"A quick introduction into the Supabase platform","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"3b57eb85f362d05f63c66d808501e6bf","permalink":"https://fireship.io/courses/supabase/intro-supbase-100-seconds/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/intro-supbase-100-seconds/","section":"courses","summary":" What is the biggest different between Supabase and Firebase? ","tags":null,"title":"Supabase in 100 Seconds","type":"courses","url":"https://fireship.io/courses/supabase/intro-supbase-100-seconds/","weight":3,"wordcount":9},{"author":null,"date":1668194610,"description":"101 concepts every JavaScript developer should know","dir":"courses/js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"b39fc60c84035db34407e31515bfdc30","permalink":"https://fireship.io/courses/js/101-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/js/101-basics/","section":"courses","summary":"Which term does NOT describe JavaScript? Let\u0026rsquo;s a quick look at 100 essential concepts that every developer should know. At this point, you don\u0026rsquo;t need to understand everything. Just get a feel for the topics and we\u0026rsquo;ll dive deeper throughout the course. Come back to this lesson at end and it should make a lot more sense.\nIf you want to learn more about a topic, check out the MDN\u0026rsquo;s JavaScript content - it is the unofficial JS documentation.","tags":null,"title":"JavaScript Crash Course","type":"courses","url":"https://fireship.io/courses/js/101-basics/","weight":3,"wordcount":236},{"author":null,"date":1636658610,"description":"Install Flutter and native IDEs","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e1e361408b90ff0ddba01d07630366ca","permalink":"https://fireship.io/courses/flutter-firebase-v1/intro-flutter-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/intro-flutter-setup/","section":"courses","summary":"Tasks Install Flutter and run flutter doctor. Add Flutter to your Path Download Android Studio and configure an Emulator. Download XCode (MacOS) Dependencies The current version of this course uses the following dependencies. For the most reliable results, you should use the same versions.\nFlutter \u0026amp; Firebase regularly update these packages and later versions may break the code in this course, so update them at your own risk.\nfile_type_dartlang pubspec.yaml dependencies: flutter: sdk: flutter cupertino_icons: ^0.","tags":null,"title":"Installation and Setup","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/intro-flutter-setup/","weight":3,"wordcount":94},{"author":null,"date":1636658610,"description":"Install Flutter and native IDEs","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"fe7cc36b80512ff5bc528d71b493143e","permalink":"https://fireship.io/courses/flutter-firebase/intro-flutter-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/intro-flutter-setup/","section":"courses","summary":"Tasks Install Flutter Add Flutter to your Path Run flutter doctor Download Android Studio and configure an Emulator. Download XCode (MacOS only) ","tags":null,"title":"Installation and Setup","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-flutter-setup/","weight":3,"wordcount":22},{"author":null,"date":1636658610,"description":"Migration tips for Ionic 3 developers with existing apps","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"36dc509dbbd9fa0dc38126493e864d1f","permalink":"https://fireship.io/courses/ionic/intro-ionic3-migration-tips/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/intro-ionic3-migration-tips/","section":"courses","summary":"","tags":null,"title":"Migration from Ionic v3 to v4","type":"courses","url":"https://fireship.io/courses/ionic/intro-ionic3-migration-tips/","weight":3,"wordcount":0},{"author":null,"date":1636658610,"description":"Customize your theme and add font ligatures","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"385160dd7b7bf5cca4b9de5b4e67e63f","permalink":"https://fireship.io/courses/vscode-tricks/basics-settings/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-settings/","section":"courses","summary":"Tasks Customize your color theme like Atom One Dark Update your Icon Theme with VSCode-icons Add a custom font like Fira Code ✨ Trick - Ligatures Font ligatures are special symbols that combine multiple characters into a single symbol and arguably make your code more readable. Enable ligatures in VS Code by adding the following changes to your settings (note: you must install Fira Code font on your machine).\nfile_type_config settings.","tags":null,"title":"Tweak Settings","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-settings/","weight":3,"wordcount":78},{"author":null,"date":1633723890,"description":"What are all the files in a React project?","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"45c7d1e9d7ab1c6e0af8d2db73d276ad","permalink":"https://fireship.io/courses/react/basics-anatomy/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-anatomy/","section":"courses","summary":"React Build Tools There are many ways to build a react app. The most common options include:\nCreate React App Vite Next.js Gatsby React Files Get familiar with the files in your React project.\npackage.json - The main file that defines the dependencies and other settings for your project. node_modules - Source code for depencies. Do not touch. public - The directory where your static files are stored. src/index.js - Main entrypoint to bootstrap the app.","tags":null,"title":"Anatomy","type":"courses","url":"https://fireship.io/courses/react/basics-anatomy/","weight":3,"wordcount":106},{"author":null,"date":1612207410,"description":"Learn the fundamentals of Firebase Authentication, Firestore, and Storage","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"95a0b48214c311842f4f9f6b626f337c","permalink":"https://fireship.io/courses/react-next-firebase/intro-firebase-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/intro-firebase-basics/","section":"courses","summary":"What is the name of the function used to listen to realtime Firestore data? ⚠️ Optional This video was originally released on YouTube and is intended to be a primer for Firebase. It is not required to build the main demo app in the course.\nRead the full Firebase lesson here.","tags":null,"title":"Firebase Basics","type":"courses","url":"https://fireship.io/courses/react-next-firebase/intro-firebase-basics/","weight":3,"wordcount":51},{"author":null,"date":1612207410,"description":"Learn the fundamentals of Next.js and server-side rendering","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"2d6d4762692474e50481d9bcee5cf027","permalink":"https://fireship.io/courses/react-next-firebase/intro-next-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/intro-next-basics/","section":"courses","summary":"Where do you define routes in Next.js? ⚠️ Optional This video was originally released on YouTube and is intended to be a primer for Next.js. It is not required to build the main demo app in the course.\nNext.js Basics Source Code","tags":null,"title":"Next.js Basics","type":"courses","url":"https://fireship.io/courses/react-next-firebase/intro-next-basics/","weight":3,"wordcount":42},{"author":null,"date":1605874290,"description":"Basic Firebase security concepts and project setup instructions","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"a4324c1e7bcb5858f96590c1e17dfa13","permalink":"https://fireship.io/courses/firebase-security/intro-get-started/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/intro-get-started/","section":"courses","summary":"Important Links Project Source Code Security Rules Docs Firestore Data Modeling Course 1. Create a Firebase Project Create a Firebase project or use an existing one.\n2. Create a Frontend Project Create a frontend project or use an existing one. As a bare minimum requirement, simply initialize an NPM project using the command below.\ncommand line npm init -y # OR npx create-react-app myapp 3. Connect your Local Code to Firebase command line npm -g firebase-tools firebase-login firebase init # choose firestore, functions, storage, and emulators ","tags":null,"title":"Getting Started","type":"courses","url":"https://fireship.io/courses/firebase-security/intro-get-started/","weight":3,"wordcount":86},{"author":null,"date":1555434750,"description":"Comparing Firestore to RDBMS or SQL","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"5841ae333c8fb7052dd88a8150ead646","permalink":"https://fireship.io/courses/firestore-data-modeling/intro-relational-data-sql-vs-nosql/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/intro-relational-data-sql-vs-nosql/","section":"courses","summary":"Focus on how you will access the data from the app for a specific view or screen, NOT the most efficient normalized structure. Favor efficient reads over efficient writes.","tags":null,"title":"Firestore vs SQL","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/intro-relational-data-sql-vs-nosql/","weight":3,"wordcount":29},{"author":null,"date":1555434750,"description":"How and where to run JavaScript code","dir":"courses/javascript/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"1e7fe62942b4f4f993fd803bc2ca91f3","permalink":"https://fireship.io/courses/javascript/beginner-js-where-to-run/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/javascript/beginner-js-where-to-run/","section":"courses","summary":"In order to follow along with this course, you need to know how and where you run your JavaScript code. You have several options to run your first hello world programming:\nOpen your editor and create a file named index.js.\nfile_type_js index.js console.log(\u0026#39;hello world\u0026#39;) How to Run JavaScript from the Command Line Running a JS program from the command line is handled by NodeJS. Start by installing NodeJS on local machine if necessary.","tags":null,"title":"How to Run JavaScript Code","type":"courses","url":"https://fireship.io/courses/javascript/beginner-js-where-to-run/","weight":3,"wordcount":354},{"author":null,"date":1551285150,"description":"How to setup a Firebase Cloud Functions environment with TypeScript","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"c62aecab933c353a16784537d22dad44","permalink":"https://fireship.io/courses/cloud-functions/intro-setting-up-firebase-cloud-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/cloud-functions/intro-setting-up-firebase-cloud-functions/","section":"courses","summary":"Installation and setup is identical for Mac, Windows, and Linux. The only requirement is NodeJS which is likely available on your system, but if not, install NVM https://github.com/nvm-sh/nvm.\nInstall Node Cloud functions in either Node 6 or 8, so it is recommended that you setup your local env with. For example, with NVM\ncommand line nvm install 8 nvm use 8 Setup Cloud Functions command line npm install firebase-tools -g firebase login firebase init functions cd functions Common Issue on Windows Incorrect environment path on windows https://github.","tags":null,"title":"Firebase Cloud Functions Setup","type":"courses","url":"https://fireship.io/courses/cloud-functions/intro-setting-up-firebase-cloud-functions/","weight":3,"wordcount":87},{"author":null,"date":1668972210,"description":"Breakdown of React Hooks and other essential concepts","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"e304d5e94b0a743bd06800d0075f1f96","permalink":"https://fireship.io/courses/supabase/intro-react-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/intro-react-basics/","section":"courses","summary":"Which Hook is used to run code when a component is first mounted to the DOM? Optional This video was originally released on YouTube and is intended to be a primer for React. It is not required to build the main demo app in the course.","tags":null,"title":"React Primer","type":"courses","url":"https://fireship.io/courses/supabase/intro-react-basics/","weight":4,"wordcount":46},{"author":null,"date":1645560690,"description":"How does a component-based architecture for building UIs actually work?","dir":"courses/react/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"02c82f33f4e3859726c9d0e80b65feb3","permalink":"https://fireship.io/courses/react/basics-components/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react/basics-components/","section":"courses","summary":"React Dev Tools React Components are reusable pieces of UI that developers compose together as a tree to represent a complete frontend application. Before writing any code, install the React Dev Tools extension and go to a website like Facebook that uses react and inspect its code.\nDefine Components with JSX Now in your code, define a component by declaring a JavaScript function. It can use the function keyword, or be a function expression if you prefer.","tags":null,"title":"Components","type":"courses","url":"https://fireship.io/courses/react/basics-components/","weight":4,"wordcount":420},{"author":null,"date":1636658610,"description":"Add Firebase to Flutter","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"408c5c9f6806fe32e29fdb66795cef75","permalink":"https://fireship.io/courses/flutter-firebase-v1/intro-firebase-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/intro-firebase-setup/","section":"courses","summary":"Tasks Create a Firebase Project Add an iOS app to your project Add an Android app to your project Use the keytool to generate an SHA Certificate. See my Flutter Firebase SHA guide if you get stuck at this part. Also reference the latest Official FlutterFire Setup Docs","tags":null,"title":"Firebase setup","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/intro-firebase-setup/","weight":4,"wordcount":48},{"author":null,"date":1636658610,"description":"Create a new flutter app with a bundle ID \u0026 dependencies","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"1f2306f003eea00ea5dee9fa12be5bf3","permalink":"https://fireship.io/courses/flutter-firebase/intro-flutter-create/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/intro-flutter-create/","section":"courses","summary":"Create an App Create an app with a bundle ID. Choose any bundle ID you\u0026rsquo;d like, following the reverse domain naming convention.\ncommand line flutter create --org io.fireship myapp Dependencies The current version of this course uses the following dependencies. For the most reliable results, you should use the same versions.\nFlutter \u0026amp; Firebase regularly update these packages and later versions may break the code in this course, so update them at your own risk.","tags":null,"title":"Flutter Create","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-flutter-create/","weight":4,"wordcount":170},{"author":null,"date":1636658610,"description":"Ionic installation and setup","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ca028ddba1d62cf775c9c2e6f68dc0b7","permalink":"https://fireship.io/courses/ionic/intro-ionic-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/intro-ionic-setup/","section":"courses","summary":"","tags":null,"title":"Ionic Setup","type":"courses","url":"https://fireship.io/courses/ionic/intro-ionic-setup/","weight":4,"wordcount":0},{"author":null,"date":1555434750,"description":"How data types in Firestore are used for relational models.","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"339addb14491ac4baa7c205c3bf843c5","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-datatypes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/basics-datatypes/","section":"courses","summary":"Learn more about Firestore\u0026rsquo;s supported data types","tags":null,"title":"Data Types","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-datatypes/","weight":4,"wordcount":7},{"author":null,"date":1555434750,"description":"A quick primer for advanced JavaScript concepts like primitives, hoisting, closures, and this binding.","dir":"courses/javascript/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"0104f6e01f0c71cb55f9fde4738cbf55","permalink":"https://fireship.io/courses/javascript/beginner-js-survival-guide/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/javascript/beginner-js-survival-guide/","section":"courses","summary":"The JavaScript Survival Guide is a primer for the so-called \u0026ldquo;weird\u0026rdquo; features of the language. These concepts are common pain-points for developers, but they become relatively simple when you understand relationship between your code and the JS engine. Not to mention, these topics come up frequently on JS interviews.\nAll research this section is based on the guidance from Mozilla - the holy grail of JS documentation.\nPrimitive vs Object The lowest level building blocks in JavaScript are primitives, which include: undefined, null, string, number, bigint, boolean, and symbol.","tags":null,"title":"The JavaScript Survival Guide","type":"courses","url":"https://fireship.io/courses/javascript/beginner-js-survival-guide/","weight":4,"wordcount":485},{"author":null,"date":1551285150,"description":"Structuring and Organizing Code in a Cloud Functions Project","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"c27b00bcc13beeb6a9de84a1979166e4","permalink":"https://fireship.io/courses/cloud-functions/intro-project-structure/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/cloud-functions/intro-project-structure/","section":"courses","summary":"","tags":null,"title":"Project Structure","type":"courses","url":"https://fireship.io/courses/cloud-functions/intro-project-structure/","weight":4,"wordcount":0},{"author":null,"date":1668972210,"description":"Breakdown of core Supabase features and concepts","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"c1e3b2963570bd7b95554c728f721b41","permalink":"https://fireship.io/courses/supabase/intro-supabase-basics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/intro-supabase-basics/","section":"courses","summary":"What type of authentication mechanism does Supabase use by default? Optional: Supabase Project The video in this section contains a simplifed project designed to showcase the various features of Supabase. You can follow along with the video, or you can skip ahead to the next section if you already feel comfortable with the platform.","tags":null,"title":"Supabase Primer","type":"courses","url":"https://fireship.io/courses/supabase/intro-supabase-basics/","weight":5,"wordcount":54},{"author":null,"date":1645560690,"description":"How to render a component based on a boolean condition","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"6fcd60d7620d716b4ba17b883635ea7f","permalink":"https://fireship.io/courses/react/basics-conditional-rendering/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-conditional-rendering/","section":"courses","summary":"Conditional rendering is a very common pattern where you render a component based on a boolean condition. There are several ways to implement conditional rendering in React.\nOption 1: If Else App.js function Conditional({ count }) { if (count \u0026gt; 5) { return \u0026lt;h1\u0026gt;Count is greater than 5\u0026lt;/h1\u0026gt;; } else { return \u0026lt;h1\u0026gt;Count is less than 5\u0026lt;/h1\u0026gt;; } } Option 2: Ternary App.js {count % 2 === 0 ? \u0026lt;h1\u0026gt;Count is even\u0026lt;/h1\u0026gt; : \u0026lt;h1\u0026gt;Count is odd\u0026lt;/h1\u0026gt; } Option 3: Logical And App.","tags":null,"title":"Conditional Rendering","type":"courses","url":"https://fireship.io/courses/react/basics-conditional-rendering/","weight":5,"wordcount":118},{"author":null,"date":1636658610,"description":"Every VS Code command at your fingertips","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"773a4a44f416330d04eb87fc6699ae80","permalink":"https://fireship.io/courses/vscode-tricks/basics-cmd-palette/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-cmd-palette/","section":"courses","summary":"Tasks Open the Command Palette with ctrl + shift + p ✨ Trick - Symbol Search From the command palette, type @ to quickly navigate to symbols within a file.","tags":null,"title":"Command Palette","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-cmd-palette/","weight":5,"wordcount":30},{"author":null,"date":1636658610,"description":"Maximize the power of VS Code for Flutter","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"98452a74e8b0436de11e9ba336442f9c","permalink":"https://fireship.io/courses/flutter-firebase/intro-vscode/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/intro-vscode/","section":"courses","summary":" Use the Flutter Extension Outline to navigate your code and move widgets around. Use Quick Fix to handle linting errors. Use Snippets to write boilerplate automatically. Use the Refactor Tool to add widgets to your code. ","tags":null,"title":"Editor Tricks","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-vscode/","weight":5,"wordcount":36},{"author":null,"date":1636658610,"description":"Quickly navigate the file system","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e53c2d2240b212d0bfbf4788188fa319","permalink":"https://fireship.io/courses/vscode-tricks/basics-explorer/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-explorer/","section":"courses","summary":"Tasks Open the File Explorer with ctrl + b Close a file with ctrl + w Save a file with ctrl + s ✨ Trick - Collapse Folders In the file explorer, find the icon to collapse all folders and click it. This will save you the tedious task of closing them one-by-one.\n✨ Trick - Show hidden files VS code excludes certain hidden files from the file explorer by default, like .","tags":null,"title":"File Explorer","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-explorer/","weight":5,"wordcount":91},{"author":null,"date":1636658610,"description":"Firebase iOS/Android native app setup","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"00efad7757f09b4bd717787cbe9d92b6","permalink":"https://fireship.io/courses/ionic/intro-setup-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/intro-setup-firebase/","section":"courses","summary":"Native Tooling Overview ","tags":null,"title":"Firebase Setup","type":"courses","url":"https://fireship.io/courses/ionic/intro-setup-firebase/","weight":5,"wordcount":3},{"author":null,"date":1636658610,"description":"Maximize the power of your IDE for Flutter","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a551516af00cb1d19c1787bdb00d23d1","permalink":"https://fireship.io/courses/flutter-firebase-v1/vs-code-pro-tips/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/vs-code-pro-tips/","section":"courses","summary":"TIP! The Refactor Tool is your new best friend!","tags":null,"title":"VS Code","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/vs-code-pro-tips/","weight":5,"wordcount":9},{"author":null,"date":1555434750,"description":"Key concepts and practical examples of JavaScript functions","dir":"courses/javascript/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"ab6a5fe1ecc32db5b8928cf095f2f610","permalink":"https://fireship.io/courses/javascript/beginner-js-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":5,"relpermalink":"/courses/javascript/beginner-js-functions/","section":"courses","summary":"Functions are the backbone of JavaScript development, but perhaps the most difficult concept to master. The following section defines key concepts related to JS functions with practical examples that you can try on your own.\nAnatomy of a Function A function is piece of code that can be called during the lifecycle of the app to perform a task or return a value. A function declaration can be broken down into the following pieces.","tags":null,"title":"Functions","type":"courses","url":"https://fireship.io/courses/javascript/beginner-js-functions/","weight":5,"wordcount":953},{"author":null,"date":1555434750,"description":"The four main techniques for data modeling in Firestore","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"98500ac6ccc236af56d4416d05f39134","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-collections-documents/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/basics-collections-documents/","section":"courses","summary":" Embed. Model data directly on a document. Root collection. Normalize data into separate collections, then reference document IDs. Subcollection. Nest data in a collection under a document. Bucket. Separate data into multiple documents, but embed as much as possible. ","tags":null,"title":"Techniques","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-collections-documents/","weight":5,"wordcount":39},{"author":null,"date":1551285150,"description":"How to Deploy Firebase Cloud Functions","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"f09bc3fd1eab0ed70e2a2299810dc984","permalink":"https://fireship.io/courses/cloud-functions/intro-deployment/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/cloud-functions/intro-deployment/","section":"courses","summary":" command line firebase deploy --only functions or firebase deploy --only functions:your-function-name ","tags":null,"title":"Deployment","type":"courses","url":"https://fireship.io/courses/cloud-functions/intro-deployment/","weight":5,"wordcount":11},{"author":null,"date":1645560690,"description":"How to render a collection of items in JSX","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"394283b4e1c10f7156b365ca34090b62","permalink":"https://fireship.io/courses/react/basics-loops/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-loops/","section":"courses","summary":"Array Map The most common way to loop over a collection of data in React is to use the Array map method. It takes a callback function that gets called on each element to transform the data into UI elements.\nApp.js const data = [ { id: 1, name: \u0026#39;Fido 🐕\u0026#39; }, { id: 2, name: \u0026#39;Snowball 🐈\u0026#39; }, { id: 3, name: \u0026#39;Murph 🐈‍⬛\u0026#39; }, { id: 4, name: \u0026#39;Zelda 🐈\u0026#39; }, ]; function ListOfAnimals() { return ( \u0026lt;ul\u0026gt; {data \u0026amp;\u0026amp; // Only render if there\u0026#39;s data - see \u0026#39;Conditional Rendering\u0026#39; data.","tags":null,"title":"Loops","type":"courses","url":"https://fireship.io/courses/react/basics-loops/","weight":6,"wordcount":128},{"author":null,"date":1636658610,"description":"Setup and installation of @angular/fire","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"77b44281202d5f98e8a3846cee38fe3d","permalink":"https://fireship.io/courses/ionic/intro-angular-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/intro-angular-setup/","section":"courses","summary":"","tags":null,"title":"AngularFire Setup","type":"courses","url":"https://fireship.io/courses/ionic/intro-angular-setup/","weight":6,"wordcount":0},{"author":null,"date":1636658610,"description":"Use Flutter Dev Tools to debug \u0026 profile an app","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"0b493f656250cbcea8f845e5e850401b","permalink":"https://fireship.io/courses/flutter-firebase/intro-dev-tools/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/intro-dev-tools/","section":"courses","summary":"Find Flutter dev tools in the bottom left corner of VS Code OR click the link in the terminal.","tags":null,"title":"Dev Tools","type":"courses","url":"https://fireship.io/courses/flutter-firebase/intro-dev-tools/","weight":6,"wordcount":19},{"author":null,"date":1636658610,"description":"Customize and create VS Code keyboard shortcuts","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"61c0224532ff0d9b24de563b935025d1","permalink":"https://fireship.io/courses/vscode-tricks/basics-keyboard-shortcuts/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-keyboard-shortcuts/","section":"courses","summary":"Tasks Open the keyboard shortcuts page by clicking the cog icon in the activity bar. ✨ Trick - VS Code Cheat Sheet Print out the VS Code cheat sheet and hang it on your wall. It\u0026rsquo;s a great reference until you have these shortcuts permanently burned into your brain.\nWindows Cheat Sheet MacOS Cheat Sheet Linux Cheat Sheet ","tags":null,"title":"Keyboard Shortcuts","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-keyboard-shortcuts/","weight":6,"wordcount":58},{"author":null,"date":1636658610,"description":"Stateless vs Stateful","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"8fe076b0b657293cda0420e9605d7139","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-stateful-stateless/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/widgets-stateful-stateless/","section":"courses","summary":"","tags":null,"title":"Widgets","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-stateful-stateless/","weight":6,"wordcount":0},{"author":null,"date":1555434750,"description":"Everything you need to know about the JavaScript Object","dir":"courses/javascript/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"e6c6ed98183549a41b27cf90a4161484","permalink":"https://fireship.io/courses/javascript/beginner-js-objects/","publishdate":"0001-01-01T00:00:00Z","readingtime":4,"relpermalink":"/courses/javascript/beginner-js-objects/","section":"courses","summary":"The JavaScript object is a collection of key-value pairs, similar to a map, dictionary, or hash-table in other programming languages. Anything that is not a JS primitive is an Object.\nAn Object is a collection of properties. A Property is a key-value pair that contains a name and a value. A Property Name is a unique value that can be coerced to a string that points to a value. A Property Value can be any value, including other objects or functions, that associated with the name/key.","tags":null,"title":"Objects","type":"courses","url":"https://fireship.io/courses/javascript/beginner-js-objects/","weight":6,"wordcount":726},{"author":null,"date":1555434750,"description":"How to read individual documents.","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"4a7193e509d7d945b0023b3753fac979","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-read-documents/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/basics-read-documents/","section":"courses","summary":"Use the helper function below to query an array of document IDs. This is especially useful when you have a many-to-many data model that references IDs from a separate collection.\nfile_type_js firestore.js // Helper: Reads an array of IDs from a collection concurrently const readIds = async (collection, ids) =\u0026gt; { const reads = ids.map(id =\u0026gt; collection.doc(id).get() ); const result = await Promise.all(reads); return result.map(v =\u0026gt; v.data()); } ","tags":null,"title":"Read","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-read-documents/","weight":6,"wordcount":68},{"author":null,"date":1551285150,"description":"Basic Concepts with HTTP Functions","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"6064016298d9ef016e62a12934aefe89","permalink":"https://fireship.io/courses/cloud-functions/http-intro/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/http-intro/","section":"courses","summary":"","tags":null,"title":"Intro to HTTP Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/http-intro/","weight":6,"wordcount":0},{"author":null,"date":1645560690,"description":"How to handle events in JSX","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"5f6beaae30beb0fcc308fdc7c7eeaf2e","permalink":"https://fireship.io/courses/react/basics-events/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-events/","section":"courses","summary":"Events in Vanilla JS file_type_js app.js const button = document.querySelector(\u0026#39;button\u0026#39;); button.addEventListener(\u0026#39;click\u0026#39;, (event) =\u0026gt; { console.log(event); }) Events in React App.js function Events() { return \u0026lt;button onClick={(event =\u0026gt; console.log(event))}\u0026gt;Click\u0026lt;/button\u0026gt; } Challenge Implement a text input that updates the input value and logs the event target.","tags":null,"title":"Events","type":"courses","url":"https://fireship.io/courses/react/basics-events/","weight":7,"wordcount":44},{"author":null,"date":1636658610,"description":"Optimize your Angular code for developer happiness","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"0c70e5f2c0f4611595e0b71e24946ee2","permalink":"https://fireship.io/courses/ionic/basics-code-organization/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-code-organization/","section":"courses","summary":"","tags":null,"title":"Code Organization","type":"courses","url":"https://fireship.io/courses/ionic/basics-code-organization/","weight":7,"wordcount":0},{"author":null,"date":1636658610,"description":"Understanding how fancy autocompletion works","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"7b081284f29518ed86bfd11529a7a3ab","permalink":"https://fireship.io/courses/vscode-tricks/basics-intellisense/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/basics-intellisense/","section":"courses","summary":"Tasks Make sure you have the VS Code extension installed for your preferred language. TypeScript and JavaScript work out of the box. ✨ Trick - Dig into Intellisense Right click on any symbol in the editor and select Go to Definition or Peek Definition. The type definition file is used by VS Code to perform autocompletion.\n✨ Trick - Force Intellisense Use the ctrl + space key combination to force Intellisense to show up.","tags":null,"title":"Intellisense","type":"courses","url":"https://fireship.io/courses/vscode-tricks/basics-intellisense/","weight":7,"wordcount":74},{"author":null,"date":1636658610,"description":"Material vs Cupertino Widgets","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5f83e3ed6f04e404d72378c5764e6184","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-platform-checking/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-platform-checking/","section":"courses","summary":"Example Code file_type_dartlang main.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:flutter/cupertino.dart\u0026#39;; import \u0026#39;dart:io\u0026#39; show Platform; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: Center( child: Platform.isAndroid ? Switch(value: true, onChanged: (v) =\u0026gt; null) : CupertinoSwitch(value: true, onChanged: (v) =\u0026gt; null), ), ), ); } } ","tags":null,"title":"Platform Checking","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-platform-checking/","weight":7,"wordcount":53},{"author":null,"date":1555434750,"description":"How to query collections of documents.","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"e9c7f0a639b554713790d7e7f987eb56","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-query-collections/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/basics-query-collections/","section":"courses","summary":"Examples of how to make queries in Firestore that resemble SQL.\nfile_type_js firestore.js // Basic Where const rangeQuery = db.collection(\u0026#39;users\u0026#39;).where(\u0026#39;age\u0026#39;, \u0026#39;\u0026gt;=\u0026#39;, 21); // AND const andQuery = db.collection(\u0026#39;users\u0026#39;) .where(\u0026#39;age\u0026#39;, \u0026#39;==\u0026#39;, 21) .where(\u0026#39;sex\u0026#39;, \u0026#39;==\u0026#39;, \u0026#39;M\u0026#39;) // OR const q1 = db.collection(\u0026#39;users\u0026#39;).where(\u0026#39;age\u0026#39;, \u0026#39;==\u0026#39;, 21); const q2 = db.collection(\u0026#39;users\u0026#39;).where(\u0026#39;age\u0026#39;, \u0026#39;==\u0026#39;, 25); // NOT const not1 = db.collection(\u0026#39;users\u0026#39;).where(\u0026#39;age\u0026#39;, \u0026#39;\u0026gt;\u0026#39;, 21); const not2 = db.collection(\u0026#39;users\u0026#39;).where(\u0026#39;age\u0026#39;, \u0026#39;\u0026lt;\u0026#39;, 21); ","tags":null,"title":"Query","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-query-collections/","weight":7,"wordcount":62},{"author":null,"date":1551285150,"description":"Write your First HTTP Endpoint","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"71129034acaeb2f85c9a7706ea4ef00b","permalink":"https://fireship.io/courses/cloud-functions/http-basic/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":1,"relpermalink":"/courses/cloud-functions/http-basic/","section":"courses","summary":" file_type_typescript http.ts export const basicHTTP = functions.https.onRequest((request, response) =\u0026gt; { const name = request.query.name; if (!name) { response.status(400).send(\u0026#39;ERROR you must supply a name :(\u0026#39;); } response.send(`hello ${name}`); }); ","tags":null,"title":"HTTP Functions Basics","type":"courses","url":"https://fireship.io/courses/cloud-functions/http-basic/","weight":7,"wordcount":28},{"author":null,"date":1645560690,"description":"Working with the useState hook","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"de5265c5b8f8e375378ca200f9330e29","permalink":"https://fireship.io/courses/react/basics-state/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-state/","section":"courses","summary":"Basic Usage App.js function Stateful() { const [count, setCount] = useState(0); const [prevCount, setPrevCount] = useState(0); const handleClick = () =\u0026gt; { setCount((prev) =\u0026gt; { setPrevCount(prev); setCount(count + 1); }); }; return ( \u0026lt;\u0026gt; \u0026lt;h3\u0026gt;Current count: {count}\u0026lt;/h3\u0026gt; \u0026lt;h3\u0026gt;Previous count: {prevCount}\u0026lt;/h3\u0026gt; \u0026lt;button onClick={handleClick}\u0026gt;Increment\u0026lt;/button\u0026gt; \u0026lt;/\u0026gt; ); } Updating Objects with useState App.js function Stateful() { const [state, setState] = useState({ count: 0, user: \u0026#39;Bob\u0026#39; }); const handleClick = () =\u0026gt; { setState({ .","tags":null,"title":"State","type":"courses","url":"https://fireship.io/courses/react/basics-state/","weight":8,"wordcount":99},{"author":null,"date":1636658610,"description":"A gentle introduction to Ionic components with ion-menu","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5d057ee0e3d7b3a977b6be20bd00dcfd","permalink":"https://fireship.io/courses/ionic/basics-components/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-components/","section":"courses","summary":"","tags":null,"title":"Components","type":"courses","url":"https://fireship.io/courses/ionic/basics-components/","weight":8,"wordcount":0},{"author":null,"date":1636658610,"description":"High-level UI widgets","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"90f6a0bb59ae57eec2b40a35afdbc0d5","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-scaffold/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-scaffold/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( appBar: AppBar(title: Text(\u0026#39;My Cool App\u0026#39;),), body: Center(child: Icon(Icons.cake),), floatingActionButton: FloatingActionButton(onPressed: () {}), drawer: Drawer(), bottomNavigationBar: BottomNavigationBar(items: [ BottomNavigationBarItem(label: \u0026#39;foo\u0026#39;, icon: Icon(Icons.call)), BottomNavigationBarItem(label: \u0026#39;bar\u0026#39;, icon: Icon(Icons.cached)) ]), ), ); } } ","tags":null,"title":"Material App \u0026 Scaffold","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-scaffold/","weight":8,"wordcount":48},{"author":null,"date":1582045950,"description":"Go beyond console.log() like and debug like a pro","dir":"courses/javascript/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1582045950,"objectID":"cf1602992ad146973f7a8167c0ca69bf","permalink":"https://fireship.io/courses/javascript/concepts-console/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/javascript/concepts-console/","section":"courses","summary":"At this point in your JS career, you likely know what console.log does - but the Console API can do so much more! It can be an effective debugging tool, but it can also be nightmare when abused. Let\u0026rsquo;s take a look at some tricks that will keep your console output concise and beautiful. Open the console on your browser by running Ctrl + Shift + J to get started with this section.","tags":null,"title":"The Console","type":"courses","url":"https://fireship.io/courses/javascript/concepts-console/","weight":8,"wordcount":437},{"author":null,"date":1555434750,"description":"When to create indexes and how do manage them.","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"4490854207958d78e4519612d463daf0","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-indexes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firestore-data-modeling/basics-indexes/","section":"courses","summary":"","tags":null,"title":"Indexes","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-indexes/","weight":8,"wordcount":0},{"author":null,"date":1551285150,"description":"Complex Routing with ExpressJS","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"c1c4e24dfa92d536ccc1398ae61428f9","permalink":"https://fireship.io/courses/cloud-functions/http-expressjs/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":1,"relpermalink":"/courses/cloud-functions/http-expressjs/","section":"courses","summary":" file_type_typescript http.ts // Multi Route ExpressJS HTTP Function const app = express(); app.get(\u0026#39;/cat\u0026#39;, (request, response) =\u0026gt; { response.send(\u0026#39;CAT\u0026#39;); }); app.get(\u0026#39;/dog\u0026#39;, (request, response) =\u0026gt; { response.send(\u0026#39;DOG\u0026#39;); }); export const api = functions.https.onRequest(app); ","tags":null,"title":"ExpressJS","type":"courses","url":"https://fireship.io/courses/cloud-functions/http-expressjs/","weight":8,"wordcount":31},{"author":null,"date":1645560690,"description":"Working with the useEffect hook","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"89ebb3b73b1ef48fff32f1ab02fb1065","permalink":"https://fireship.io/courses/react/basics-lifecycle/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-lifecycle/","section":"courses","summary":"Lifecycle with Class Components App.js class Lifecycle extends React.Component { componentDidMount() { // Initialize } componentDidUpdate() { // Updated } componentWillUnmount() { // Removed } } Lifecycle with useEffect App.js function Lifecycle() { const [count] = useState(0); useEffect(() =\u0026gt; { console.log(\u0026#39;count updated!\u0026#39;) return () =\u0026gt; console.log(\u0026#39;destroyed!\u0026#39;) }, [count]); } Challenge Implement a CountdownTimer component that implements useState() and useEffect() in conjunction with setInterval to handle the timer. Make sure you use the useEffect() hook to call clearTimeout() when the component is destroyed.","tags":null,"title":"Lifecycle and Effects","type":"courses","url":"https://fireship.io/courses/react/basics-lifecycle/","weight":9,"wordcount":82},{"author":null,"date":1636658610,"description":"How to use component APIs","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"227ed6d89bf91b9c64f9b1af0f6744a4","permalink":"https://fireship.io/courses/ionic/basics-component-apis/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-component-apis/","section":"courses","summary":"","tags":null,"title":"Component APIs","type":"courses","url":"https://fireship.io/courses/ionic/basics-component-apis/","weight":9,"wordcount":0},{"author":null,"date":1636658610,"description":"Align and position individual widgets","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ff87a9a0c18799ed7fde935c0544ff36","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-single-layout/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/widgets-single-layout/","section":"courses","summary":"","tags":null,"title":"Single Widget Layout","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-single-layout/","weight":9,"wordcount":0},{"author":null,"date":1630869810,"description":"What is git and why is it essential to software engineers?","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"efcff97c8eed1789a9e975c0b6a1b86a","permalink":"https://fireship.io/courses/git/basics-what-is-git/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-what-is-git/","section":"courses","summary":" Who invent Git? ","tags":null,"title":"What is git?","type":"courses","url":"https://fireship.io/courses/git/basics-what-is-git/","weight":9,"wordcount":3},{"author":null,"date":1582045950,"description":"Learn how to import and export JS code as a module or package.","dir":"courses/javascript/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1582045950,"objectID":"dd8236b4d149ca91e268c80840031f9f","permalink":"https://fireship.io/courses/javascript/concepts-modules/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/javascript/concepts-modules/","section":"courses","summary":"A module is just a file that exports some JavaScript code.\nFirst, a file exports (package) something useful\u0026hellip;\nfile_type_js awesome-pacakge.js export default \u0026#39;🧁\u0026#39;; Second, a different file uses this code by importing it.\nfile_type_js my-app.js import cupcake from \u0026#39;../path/to/awesome-package.js\u0026#39;; Pretty simple! But there more you should know.\nDefault Exports A module can specify at most 1 default export.\nexport default \u0026#39;🧁\u0026#39;; This allows the consumer to name the module whatever it prefers when importing.","tags":null,"title":"Modules","type":"courses","url":"https://fireship.io/courses/javascript/concepts-modules/","weight":9,"wordcount":240},{"author":null,"date":1555434750,"description":"Security considerations with data modeling","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"3a34c36aa8f023d2d792aefe57148999","permalink":"https://fireship.io/courses/firestore-data-modeling/basics-security/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/basics-security/","section":"courses","summary":" file_type_firebase rules.json service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if false; } match /accounts/{id} { allow read, write: if false; } match /users/{id} { allow read, write: if id == request.auth.uid; } match /profiles/{id} { allow read; allow write: if id == request.auth.uid; } } } ","tags":null,"title":"Security","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/basics-security/","weight":9,"wordcount":51},{"author":null,"date":1551285150,"description":"Using middleware to apply logic to multiple endpoints","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"5ff2fb66eb927198bef922d0492fe6ca","permalink":"https://fireship.io/courses/cloud-functions/http-middleware/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":1,"relpermalink":"/courses/cloud-functions/http-middleware/","section":"courses","summary":" file_type_typescript http.ts // Custom Middleware const auth = (request, response, next) =\u0026gt; { if (!request.headers.authorization) { response.status(400).send(\u0026#39;unauthorized\u0026#39;); } next(); }; // Multi Route ExpressJS HTTP Function const app = express(); app.use(cors({ origin: true })); app.use(auth); ","tags":null,"title":"ExpressJS Middleware","type":"courses","url":"https://fireship.io/courses/cloud-functions/http-middleware/","weight":9,"wordcount":35},{"author":null,"date":1668972210,"description":"Setup the clientside app with Vite and React","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"39cd3073199280be7e7b3e46bb9483d1","permalink":"https://fireship.io/courses/supabase/setup-repo/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/setup-repo/","section":"courses","summary":"Vite getting started guide: https://vitejs.dev/guide/","tags":null,"title":"Frontend Setup","type":"courses","url":"https://fireship.io/courses/supabase/setup-repo/","weight":10,"wordcount":5},{"author":null,"date":1645560690,"description":"Working with the React Context API","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"ca9a2d56e64cafc6bf48c1ecbcbe3281","permalink":"https://fireship.io/courses/react/basics-context/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-context/","section":"courses","summary":"Example of Prop Drilling App.js function PropDrilling() { const [count] = useState(0); return \u0026lt;Child count={count} /\u0026gt; } function Child({ count }) { return \u0026lt;GrandChild count={count} /\u0026gt; } function GrandChild({ count }) { return \u0026lt;div\u0026gt;{count}\u0026lt;/div\u0026gt; } Sharing Data with Context App.js function PropDrilling() { const [count] = useState(0); return ( \u0026lt;CountContext.Provider value={count}\u0026gt; \u0026lt;Child /\u0026gt; \u0026lt;/CountContext.Provider\u0026gt; ) } function Child() { return \u0026lt;GrandChild /\u0026gt; } function GrandChild() { const count = useContext(CountContext); return \u0026lt;div\u0026gt;{count}\u0026lt;/div\u0026gt; } Challenge Create CountContext and CountProvider that uses { count, setCount } as its values.","tags":null,"title":"Context","type":"courses","url":"https://fireship.io/courses/react/basics-context/","weight":10,"wordcount":127},{"author":null,"date":1636658610,"description":"Make containers look awesome","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ac8aa77c433260c856215387b7a94050","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-box-decoration/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-box-decoration/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: Center( child: Container( alignment: Alignment.center, decoration: BoxDecoration( color: Colors.blue, border: Border.all(width: 5), boxShadow: [ BoxShadow(offset: Offset(40, 40), color: Colors.pink), BoxShadow(offset: Offset(20, 20), color: Colors.yellow), ], gradient: RadialGradient(colors: [Colors.yellow, Colors.pink]) ), ) ), ), ); } } ","tags":null,"title":"Box Decoration","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-box-decoration/","weight":10,"wordcount":55},{"author":null,"date":1636658610,"description":"The ultimate beginner's guide to learning Flutter","dir":"courses/flutter-firebase/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"015b65bbc56e798f19a843475f703f86","permalink":"https://fireship.io/courses/flutter-firebase/basic-training/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/flutter-firebase/basic-training/","section":"courses","summary":"Before we build our first app, let\u0026rsquo;s get familiar with the core UI building blocks of Flutter. This tutorial is a quick introduction to the basic building blocks of Flutter that we\u0026rsquo;ll be using throughout the rest of the course. Play around with these code samples to get a feel for how UI design in Flutter works.\nMain Function Flutter will inflate the widget passed to runApp into the root widget of the application.","tags":null,"title":"Flutter Basics Tutorial","type":"courses","url":"https://fireship.io/courses/flutter-firebase/basic-training/","weight":10,"wordcount":617},{"author":null,"date":1636658610,"description":"Trigger parameter hints inside a method","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"83da5ca9a54ccad495cf574975802047","permalink":"https://fireship.io/courses/vscode-tricks/tip-hints/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-hints/","section":"courses","summary":"✨ Trick - Parameter Hints When inside a method paranthesis, press ctrl+shift+space to trigger parameter hints.","tags":null,"title":"Param Hints","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-hints/","weight":10,"wordcount":16},{"author":null,"date":1636658610,"description":"Using the Angular Router to navigate between screens","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"24b5f89062e0adc4651dd6ff5f727513","permalink":"https://fireship.io/courses/ionic/basics-routing-navigation/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-routing-navigation/","section":"courses","summary":"","tags":null,"title":"Routing and Navigation","type":"courses","url":"https://fireship.io/courses/ionic/basics-routing-navigation/","weight":10,"wordcount":0},{"author":null,"date":1633723890,"description":"Learn the fundamentals of Dart in 100 Seconds","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"7a069dc5ba0ee9884e7c9adff1e3d4cd","permalink":"https://fireship.io/courses/dart/basics-dart-100-seconds/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/dart/basics-dart-100-seconds/","section":"courses","summary":"","tags":null,"title":"Dart in 100 Seconds","type":"courses","url":"https://fireship.io/courses/dart/basics-dart-100-seconds/","weight":10,"wordcount":0},{"author":null,"date":1630869810,"description":"How to install git on Windows, Mac, or Linux","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"68d2cdf6568b4f4962e758388e6f013a","permalink":"https://fireship.io/courses/git/basics-install/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-install/","section":"courses","summary":"Check your machine\u0026rsquo;s current git version:\ncommand line git config --global user.name \u0026#34;Jeff Delaney\u0026#34; git config --global user.email \u0026#34;hello@fireship.io\u0026#34; Set a Username \u0026amp; Email command line git config --list Windows Installation On Windows, I recommend downloading Git for Windows. In addition, you may want to use git-bash as your terminal (like me), but that is optional - and check out bash in 100 seconds.\nMac Installation On MacOS, I recommend installing git with Homebrew.","tags":null,"title":"Install","type":"courses","url":"https://fireship.io/courses/git/basics-install/","weight":10,"wordcount":86},{"author":null,"date":1612207410,"description":"Blueprint and technical decisions behind the app","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"e4ca9ca1dea139501e4eac1d5d1ec3ef","permalink":"https://fireship.io/courses/react-next-firebase/app-technical-overview/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-technical-overview/","section":"courses","summary":" Which page must be BOTH server and client rendered? ","tags":null,"title":"Technical Overview","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-technical-overview/","weight":10,"wordcount":9},{"author":null,"date":1588101810,"description":"Source code and resources","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1588101810,"objectID":"e96898274b54eee05b355cb8873c8090","permalink":"https://fireship.io/courses/stripe-js/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/intro-resources/","section":"courses","summary":"Course Resources Project Source Code Stripe Docs Stripe API Reference Social Slack Chat YouTube \u0026amp; Twitter ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-resources/","weight":10,"wordcount":16},{"author":null,"date":1585769010,"description":"Project source code and Vue Firebase resources","dir":"courses/vue/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"aa5b1434477c89f56fd6745f75a260fa","permalink":"https://fireship.io/courses/vue/intro-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/vue/intro-resources/","section":"courses","summary":"Course Resources VueFire Walkie-Talkie Source Code Vue Docs VueFire Docs Firebase Web Docs Social Slack Chat YouTube Twitter To start things off, I first want to talk about how to be successful in this course. You can find the full source code for the project on GitHub. I recommend cloning this remote to your local system and you\u0026rsquo;ll find instructions in the read me on how to run it. But to really get the most out of this course, I recommend starting a brand new Vue project from scratch and following along with the videos by writing every single line of code that I do or better yet modify and experiment with my code to make it do something unique for you now in the videos, you\u0026rsquo;ll see me working through the code and Bs code and if you\u0026rsquo;re doing the same Recommend installing the Vue extension for vs code.","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/vue/intro-resources/","weight":10,"wordcount":420},{"author":null,"date":1563305010,"description":"Source code and course resources","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"e838a507fd47def681b6acd219043742","permalink":"https://fireship.io/courses/angular/basics-resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/basics-resources/","section":"courses","summary":"Course Resources Firestarter Source Code Angular Docs AngularFire Docs Highly Recommended Supplementary Videos While not required, I highly recommend watching the following YouTube videos to get familiar with RxJS and TypeScript.\nTypeScript - The Basics RxJS Top Ten Concepts Social Slack Chat YouTube \u0026amp; Twitter ","tags":null,"title":"Resources","type":"courses","url":"https://fireship.io/courses/angular/basics-resources/","weight":10,"wordcount":45},{"author":null,"date":1555434750,"description":"How to model data based on the size of a set","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"0b7d94e0f3e2adbb4a13bc5f50285f46","permalink":"https://fireship.io/courses/firestore-data-modeling/relational-cardinality/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/relational-cardinality/","section":"courses","summary":"Consider the cardinality or maximum size of a set. A loose rule to follow is\u0026hellip;\nOne-to-Few. Embed. One-to-Hundreds. Bucket. One-to-Billions. Collection. ","tags":null,"title":"Cardinality","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/relational-cardinality/","weight":10,"wordcount":21},{"author":null,"date":1551285150,"description":"How Background Functions Work in Firebase","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"3a8847c27a9916ae1bbaf36829c448a9","permalink":"https://fireship.io/courses/cloud-functions/auth-intro/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/auth-intro/","section":"courses","summary":"","tags":null,"title":"Intro to Auth Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/auth-intro/","weight":10,"wordcount":0},{"author":null,"date":1668972210,"description":"Create and configure a new Supabase project with the CLI","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"0cf35528bae506f1f1da7d16e98fa08b","permalink":"https://fireship.io/courses/supabase/setup-supabase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/setup-supabase/","section":"courses","summary":" What does DDL stand for? Resources Supabase Architecture: https://supabase.com/docs/architecture Supabase CLI Docs: https://supabase.com/docs/reference/cli Create your Prod Supabase instance by creating an account on supabase: https://app.supabase.com Commands To install supbase cli:\nyarn add supabase To initialize a local supabase project:\nnpx supabase init To start your local supabase instance:\nnpx supabase start To create a new migration file:\nnpx supabase migration new \u0026lt;migration name\u0026gt; ","tags":null,"title":"Supabase CLI","type":"courses","url":"https://fireship.io/courses/supabase/setup-supabase/","weight":11,"wordcount":63},{"author":null,"date":1645560690,"description":"How do Error Boundaries work in React?","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"c9696c918a8bfa77863bf8a573fa695b","permalink":"https://fireship.io/courses/react/basics-error-boundry/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-error-boundry/","section":"courses","summary":"App.js class ErrorBoundary extends React.Component { constructor(props) { super(props); this.state = { hasError: false }; } static getDerivedStateFromError(error) { return { hasError: true }; } componentDidCatch(error, errorInfo) { console.log(\u0026#39;something went horribly wrong\u0026#39;, error, errorInfo); } render() { if (this.state.hasError) { return \u0026lt;h1\u0026gt;Fallback UI\u0026lt;/h1\u0026gt;; } return this.props.children; } } // Example Usage function Main() { return ( \u0026lt;Dashboard\u0026gt; \u0026lt;ErrorBoundary\u0026gt; \u0026lt;Orders /\u0026gt; \u0026lt;/ErrorBoundary\u0026gt; \u0026lt;/Dashboard\u0026gt; ); } Challenge Create an ErrorBoundary class component that provides a fallback UI in the event an error occurs.","tags":null,"title":"Error Boundries","type":"courses","url":"https://fireship.io/courses/react/basics-error-boundry/","weight":11,"wordcount":81},{"author":null,"date":1636658610,"description":"Use StreamBuilder \u0026 FutureBuilder to handle async data","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"eceee8676dd15b1043c368ef59b61a96","permalink":"https://fireship.io/courses/flutter-firebase/basic-async/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/basic-async/","section":"courses","summary":"Example of StreamBuilder file_type_flutter main.dart class DemoApp extends StatelessWidget { const DemoApp({ Key? key }) : super(key: key); @override Widget build(BuildContext context) { return StreamBuilder\u0026lt;int\u0026gt;( stream: Stream.fromIterable([1,2,3,4]), builder: (context, snapshot) { var count = snapshot.data; // Add UI here return Text(\u0026#39;$count\u0026#39;); }, ); } } ","tags":null,"title":"Async Widgets","type":"courses","url":"https://fireship.io/courses/flutter-firebase/basic-async/","weight":11,"wordcount":45},{"author":null,"date":1636658610,"description":"Create new directories automatically","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"0577770eaae74b754d14fae231e6240d","permalink":"https://fireship.io/courses/vscode-tricks/tip-auto-dir/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-auto-dir/","section":"courses","summary":"✨ Trick - Auto-create Multiple Directories Create a new file using the File Explorer. When typing the path, also include directories that do not exist and they will be created automatically, i.e somewhere/cool/myfile.txt.","tags":null,"title":"Auto-Directory","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-auto-dir/","weight":11,"wordcount":33},{"author":null,"date":1636658610,"description":"Manage app state between sessions with Ionic Storage","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"3074376532a6d4010d1c5e9919125952","permalink":"https://fireship.io/courses/ionic/basics-storage/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-storage/","section":"courses","summary":"","tags":null,"title":"Ionic Storage","type":"courses","url":"https://fireship.io/courses/ionic/basics-storage/","weight":11,"wordcount":0},{"author":null,"date":1636658610,"description":"Working with the Text widget","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"baa1b30cc9b12e6064c46a1301e11050","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-text/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-text/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: Center( child: Row( children: \u0026lt;Widget\u0026gt;[ Expanded( child: Container( height: 100, child: Text( \u0026#39;Hello World this is too long\u0026#39;, overflow: TextOverflow.ellipsis, style: TextStyle( fontSize: 50, fontWeight: FontWeight.bold, ), ), ), ), ], ), ), ), ); } } ","tags":null,"title":"Text","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-text/","weight":11,"wordcount":56},{"author":null,"date":1633723890,"description":"How to install Dart on Windows, Mac, or Linux","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"ff8c4cf4d833d21436ae93bec2c1c066","permalink":"https://fireship.io/courses/dart/basics-install/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/basics-install/","section":"courses","summary":"How to Follow Along I\u0026rsquo;d recommend that you code along with each video in your own editor. You can find the full source code for each video on GitHub.\nOption 1 - Install Flutter If you plan on using Flutter, follow the Flutter installation instructions.\nOption 2 - Install Dart If you don\u0026rsquo;t care about Flutter, checkout the Dart SDK Install guide\nOption 3 - Use Dart Pad If you want to use the browser, try DartPad","tags":null,"title":"Getting Started with Dart","type":"courses","url":"https://fireship.io/courses/dart/basics-install/","weight":11,"wordcount":77},{"author":null,"date":1630869810,"description":"Initialize a git repository","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"e9c153c49ee0b504bd31807edc86bf21","permalink":"https://fireship.io/courses/git/basics-init/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-init/","section":"courses","summary":"Crate a new git repository:\ncommand line git init How do you un-initialize a git repo? git provides a tools like init to start a repo, but how do you remove git from a project? ","tags":null,"title":"git init","type":"courses","url":"https://fireship.io/courses/git/basics-init/","weight":11,"wordcount":35},{"author":null,"date":1612207410,"description":"Setup a Next.js app and explore the file system","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"08bf3f6e5f7ddcb7c0ba3077298f54d1","permalink":"https://fireship.io/courses/react-next-firebase/app-next-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-next-setup/","section":"courses","summary":"Create a Next.js App command line npx create-next-app nextfire File Structure components reusable UI components lib reusable JavaScript libraries and/or helper functions pages main routes for site Global CSS https://raw.githubusercontent.com/fireship-io/next-firebase-course/main/styles/globals.css","tags":null,"title":"Next.js Setup","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-next-setup/","weight":11,"wordcount":30},{"author":null,"date":1587410610,"description":"Understand how payment flows work in Stripe as a developer","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"49ba0ab3ad27b30ba1b6cceb0c0a723e","permalink":"https://fireship.io/courses/stripe-js/intro-what-is-stripe/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/intro-what-is-stripe/","section":"courses","summary":"","tags":null,"title":"How does Stripe Work?","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-what-is-stripe/","weight":11,"wordcount":0},{"author":null,"date":1555434750,"description":"Model and query a one-to-one relationship","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"3cdb3ffa63bc3a61b60eea39b8b2b123","permalink":"https://fireship.io/courses/firestore-data-modeling/relational-one-to-one/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/relational-one-to-one/","section":"courses","summary":" file_type_js firestore.js const userId = \u0026#39;ayn-rand\u0026#39;; // 1. Embedded, all data contained on single document, One-to-few const authorWithAccount = db.collection(\u0026#39;authors\u0026#39;).doc(userId) // 2. Shared Document ID const author = db.collection(\u0026#39;authors\u0026#39;).doc(userId) const account = db.collection(\u0026#39;account\u0026#39;).doc(userId); // 3. Join related documents with different IDs, const getAccount = async (userId) =\u0026gt; { const snapshot = await db.collection(\u0026#39;authors\u0026#39;).doc(userId).get(); const user = snapshot.data(); return db.collection(\u0026#39;accounts\u0026#39;).doc(user.accountId) } ","tags":null,"title":"One-to-One","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/relational-one-to-one/","weight":11,"wordcount":60},{"author":null,"date":1551285150,"description":"Using Async/Await in Cloud Functions","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"953f9453c936d2e895c1d35f946d9bcf","permalink":"https://fireship.io/courses/cloud-functions/auth-async-await/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/auth-async-await/","section":"courses","summary":"","tags":null,"title":"Async/Await Primer","type":"courses","url":"https://fireship.io/courses/cloud-functions/auth-async-await/","weight":11,"wordcount":0},{"author":null,"date":1668972210,"description":"Configure Playwright for end-to-end testing","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"23e5fc71e9d86b19f4bd35189af72d5f","permalink":"https://fireship.io/courses/supabase/setup-playwright/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/setup-playwright/","section":"courses","summary":"What is the main way End-to-End testing differs from unit testing? Playwright docs: https://playwright.dev/docs/intro\nTo initialize playwrigh in your repo:\nyarn create playwright Updates to the playwright.config.ts file:\nconst config = { // only change the following properties webServer: { command: \u0026#34;yarn dev\u0026#34;, port: 1337, // should match the port you gave in our vite.config file reuseExisitingServer: true, }, fullyParallel: false, projects: [ { name: \u0026#34;Google Chrome\u0026#34;, use: { channel: \u0026#34;chrome\u0026#34;, }, }, { name: \u0026#34;Mobile Chrome\u0026#34;, use: { .","tags":null,"title":"Playwright E2E Testing","type":"courses","url":"https://fireship.io/courses/supabase/setup-playwright/","weight":12,"wordcount":184},{"author":null,"date":1645560690,"description":"Loading async data with Suspense and Concurrent Mode","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"ab773a182ee30670b0dd1745c7c82c25","permalink":"https://fireship.io/courses/react/basics-suspense/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-suspense/","section":"courses","summary":"WIP This section is unfinished. Check back for updates soon.","tags":null,"title":"Suspense","type":"courses","url":"https://fireship.io/courses/react/basics-suspense/","weight":12,"wordcount":10},{"author":null,"date":1636658610,"description":"Detect user interaction within your app","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e727bce51a2bea1924559ad5d41ab415","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-gestures/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-gestures/","section":"courses","summary":"Example Code file_type_dartlang main.dart //... child: GestureDetector( onTapDown: (details) =\u0026gt; print(details.globalPosition.dx), child: Container( width: 100, height: 100, color: Colors.red ), ), //... ","tags":null,"title":"Gestures","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-gestures/","weight":12,"wordcount":22},{"author":null,"date":1636658610,"description":"Ways to move around code faster","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a4c14cfee38f837dbe97086501f7fd12","permalink":"https://fireship.io/courses/vscode-tricks/tip-move-fast/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-move-fast/","section":"courses","summary":"Task - Don\u0026rsquo;t Touch the Mouse Invest some time practicing editing your code without using the mouse. This is one of the great secrets to coding faster.\n✨ Trick - Symbol Search Open the command palette with ctrl+p, then type an @ symbol to move around the code quickly.\n✨ Trick - Highlight Lines of Code Use the ctrl+l key to select lines of code quickly. For more precise selections, use shift + ← ↑ → ↓ to highlight individual characters.","tags":null,"title":"Move Quickly","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-move-fast/","weight":12,"wordcount":81},{"author":null,"date":1636658610,"description":"Using Provider for state management","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"81a334f0f3209d27a6cde5df51f63fce","permalink":"https://fireship.io/courses/flutter-firebase/basic-provider/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/basic-provider/","section":"courses","summary":"Provider is one of the most popular state management libraries in Flutter. It wraps InheritedWidget and provides an easy way to share data between widgets.\n1. Define State file_type_flutter main.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; class CounterState extends ChangeNotifier { int count = 0; updateCount() { count++; notifyListeners(); } } 2. Provide State file_type_flutter main.dart class CounterApp extends StatelessWidget { const CounterApp({ Key? key }) : super(key: key); @override Widget build(BuildContext context) { return ChangeNotifierProvider( create: (context) =\u0026gt; CounterState(), child: const CountText(), ); } } 3.","tags":null,"title":"Provider","type":"courses","url":"https://fireship.io/courses/flutter-firebase/basic-provider/","weight":12,"wordcount":119},{"author":null,"date":1636658610,"description":"Manage themes in Ionic with CSS","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"70234e1040b0d8580de51874049af1c7","permalink":"https://fireship.io/courses/ionic/basics-css-themes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-css-themes/","section":"courses","summary":"","tags":null,"title":"Themes","type":"courses","url":"https://fireship.io/courses/ionic/basics-css-themes/","weight":12,"wordcount":0},{"author":null,"date":1633723890,"description":"Run and compile Dart programs from the command line","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"d4501727c8c5f4107c4eb95a35f1deb8","permalink":"https://fireship.io/courses/dart/basics-cli/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/basics-cli/","section":"courses","summary":"Create a New Dart Project Learn about the available commands and how to use them.\ncommand line dart --help Create a new project.\ncommand line dart create -t console-simple my_app # OR use the current directory (if it\u0026#39;s empty) dart create -t console-simple . --force Run the application.\ncommand line dart run Compile Dart Code Compile dart code to an executable.\ncommand line dart compile exe bin/dart.dart bin/dart.exe Compile your code to JavaScript and run it with Node.","tags":null,"title":"Dart CLI","type":"courses","url":"https://fireship.io/courses/dart/basics-cli/","weight":12,"wordcount":86},{"author":null,"date":1630869810,"description":"Check the status of a repository","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"94f84af2efc450dfc2a9c3ccdd067909","permalink":"https://fireship.io/courses/git/basics-status/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-status/","section":"courses","summary":"View the current status of a repository.\ncommand line git commit status git status provides a detailed commit history of your repo ","tags":null,"title":"git status","type":"courses","url":"https://fireship.io/courses/git/basics-status/","weight":12,"wordcount":22},{"author":null,"date":1612207410,"description":"Setup Next.js with TypeScript (optional)","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"edb0d0441f9bf376ac50851521e2d249","permalink":"https://fireship.io/courses/react-next-firebase/app-next-typescript/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-next-typescript/","section":"courses","summary":"Next TypeScript Docs","tags":null,"title":"TypeScript","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-next-typescript/","weight":12,"wordcount":3},{"author":null,"date":1587410610,"description":"How to safely work with Stripe API keys","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"f1cb491389158f7717b03130526e51d1","permalink":"https://fireship.io/courses/stripe-js/intro-stripe-api-keys/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/intro-stripe-api-keys/","section":"courses","summary":"","tags":null,"title":"API Keys","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-stripe-api-keys/","weight":12,"wordcount":0},{"author":null,"date":1585769010,"description":"Get started with the Vue CLI","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"6c0ec82accc1b78612b2f228d80b6433","permalink":"https://fireship.io/courses/vue/intro-vue/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/intro-vue/","section":"courses","summary":"Install the Vue CLI Globally CLI Docs\ncommand line npm install -g @vue/cli Run the Vue UI App command line vue ui Add Bulma for Better Styling file_type_html public/index.html \u0026lt;head\u0026gt; \u0026lt;!-- add this line --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/bulma@0.8.0/css/bulma.min.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; ","tags":null,"title":"Vue Setup","type":"courses","url":"https://fireship.io/courses/vue/intro-vue/","weight":12,"wordcount":39},{"author":null,"date":1555434750,"description":"Model and query a one-to-many relationship","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"4c8b490c3278c0e5fecdb5a7cacb21d2","permalink":"https://fireship.io/courses/firestore-data-modeling/relational-one-to-many/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/relational-one-to-many/","section":"courses","summary":" file_type_js firestore.js const authorId = \u0026#39;dr-seuss\u0026#39;; // 4. Embedded One-to-Many const authorWithBooks = db.collection(\u0026#39;authors\u0026#39;).doc(authorId) // 5. Subcollection const books = db.collection(\u0026#39;authors\u0026#39;).doc(authorId).collection(\u0026#39;books\u0026#39;); // 6. Root Collection, requires index const booksFrom1971 = db.collection(\u0026#39;books\u0026#39;) .where(\u0026#39;author\u0026#39;, \u0026#39;==\u0026#39;, authorId) .where(\u0026#39;published\u0026#39;, \u0026#39;\u0026gt;\u0026#39;, 1971); ","tags":null,"title":"One-to-Many","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/relational-one-to-many/","weight":12,"wordcount":37},{"author":null,"date":1551285150,"description":"Trigger a Cloud Function when a User Signs Up","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"5b97938f85cd81d5726b5deae868b8d3","permalink":"https://fireship.io/courses/cloud-functions/auth-function/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/auth-function/","section":"courses","summary":"","tags":null,"title":"Basic Auth Function","type":"courses","url":"https://fireship.io/courses/cloud-functions/auth-function/","weight":12,"wordcount":0},{"author":null,"date":1668972210,"description":"How to implement Tailwind or add your own Styles","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"60aa62ac5d829db2541fb9c35e28736d","permalink":"https://fireship.io/courses/supabase/setup-styling/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/setup-styling/","section":"courses","summary":" Tailwind Docs: https://tailwindcss.com/ Tailwind installation docs: https://tailwindcss.com/docs/installation output.css file (if you want to just use my pre-built styles): https://github.com/fireship-io/supaship.io/blob/course-end-point/output.css Command to watch source code to update tailwind styles:\nnpx tailwindcss -i ./src/index.css -o ./dist/output.css --watch ","tags":null,"title":"Styling","type":"courses","url":"https://fireship.io/courses/supabase/setup-styling/","weight":13,"wordcount":35},{"author":null,"date":1645560690,"description":"Framer Motion explained in 100 Seconds","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"f11624d429ff622e4dc0ed135e6152d1","permalink":"https://fireship.io/courses/react/basics-animation/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-animation/","section":"courses","summary":"WIP This section is unfinished. Check back for updates soon.","tags":null,"title":"Animation","type":"courses","url":"https://fireship.io/courses/react/basics-animation/","weight":13,"wordcount":10},{"author":null,"date":1636658610,"description":"Align widgets in rows and columns","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f82ae58e821556a6b978853743e208ea","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-flex-layout/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-flex-layout/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: Container( color: Colors.blue, padding: EdgeInsets.all(16), child: Column( mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.stretch, children: \u0026lt;Widget\u0026gt;[ Icon(Icons.cake, color: Colors.white, size: 50,), Icon(Icons.cake, color: Colors.white, size: 100,), Icon(Icons.cake, color: Colors.white, size: 200,), ], ) ) ), ); } } ","tags":null,"title":"Flex Layout","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-flex-layout/","weight":13,"wordcount":54},{"author":null,"date":1633723890,"description":"Fundamentals of variables and common data types in Dart","dir":"courses/dart/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"937fc222cdad82c76ae6e8ecabd8faf6","permalink":"https://fireship.io/courses/dart/basics-variables/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/basics-variables/","section":"courses","summary":"Basic data types Declare a variable by putting the data type in front of the variable name.\nfile_type_dartlang main.dart int num1 = 2; double num2 = 3.0; bool isTrue = true; String str = \u0026#39;Hello\u0026#39;; Runtime Type Checking You can check the runtime type of a variable using the is keyword, or via its runtimeType property.\nfile_type_dartlang main.dart (num1 + num2) is int (num1 + num2).runtimeType Var Keyword The var keyword is like saying I don\u0026rsquo;t care to annotate the variable with a type.","tags":null,"title":"Variables","type":"courses","url":"https://fireship.io/courses/dart/basics-variables/","weight":13,"wordcount":203},{"author":null,"date":1630869810,"description":"Staging changes to be committed","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"5e648fd9ab6f7c48e6875f06401c9d72","permalink":"https://fireship.io/courses/git/basics-add/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-add/","section":"courses","summary":" What do we call the area for files that will be part of the next commit? Add an entire working directory to the staging area:\ncommand line git add . Add a single file:\ncommand line git add somefile.txt Remove a file from the staging area:\ncommand line git reset . ","tags":null,"title":"git add","type":"courses","url":"https://fireship.io/courses/git/basics-add/","weight":13,"wordcount":51},{"author":null,"date":1612207410,"description":"Install and configure Firebase in a Next.js project","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"319c90d37d34af34451fe2114b393113","permalink":"https://fireship.io/courses/react-next-firebase/app-next-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-next-firebase/","section":"courses","summary":"Firebase Setup command line npm install firebase react-firebase-hooks Firebase JS works in both the browser and Node.js react-firebase-hooks abstracts realtime Firebase streams to React hooks Firebase Lib Export common Firebase SDKs and utilities.\nfile_type_js lib/firebase.js import firebase from \u0026#39;firebase/app\u0026#39; import \u0026#39;firebase/auth\u0026#39;; import \u0026#39;firebase/firestore\u0026#39;; import \u0026#39;firebase/storage\u0026#39;; const firebaseConfig = { // your config }; if (!firebase.apps.length) { firebase.initializeApp(firebaseConfig) } export const auth = firebase.auth(); export const firestore = firebase.firestore(); export const storage = firebase.","tags":null,"title":"Firebase Setup","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-next-firebase/","weight":13,"wordcount":191},{"author":null,"date":1585769010,"description":"Install Firebase and the Vuefire package","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"35881625254136883f4b1fcc3e35aa82","permalink":"https://fireship.io/courses/vue/intro-vuefirebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/intro-vuefirebase/","section":"courses","summary":"Install the Vuefire \u0026amp; Firebase command line npm i vuefire firebase Install the Vuefire \u0026amp; Firebase file_type_js main.js import { firestorePlugin } from \u0026#39;vuefire\u0026#39; Vue.use(firestorePlugin) Initialize Firebase file_type_js firebase.js import firebase from \u0026#39;firebase/app\u0026#39;; import \u0026#39;firebase/firestore\u0026#39;; import \u0026#39;firebase/auth\u0026#39;; import \u0026#39;firebase/storage\u0026#39;; const firebaseConfig = { // Add your config here }; firebase.initializeApp(firebaseConfig); export const db = firebase.firestore(); export const auth = firebase.auth(); export const storage = firebase.storage(); ","tags":null,"title":"Firebase Setup","type":"courses","url":"https://fireship.io/courses/vue/intro-vuefirebase/","weight":13,"wordcount":65},{"author":null,"date":1585769010,"description":"Build a basic home page component with routing","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"df1364b6e7b5013b83e1073949561b00","permalink":"https://fireship.io/courses/vue/intro-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/intro-routing/","section":"courses","summary":"Install the Vue Router Routing Docs\ncommand line npm install vue-router Configure a Basic Route file_type_js main.js import VueRouter from \u0026#39;vue-router\u0026#39; Vue.use(VueRouter) import Home from \u0026#39;./components/Home\u0026#39; const router = new VueRouter({ routes: [ { path: \u0026#39;/\u0026#39;, component: Home }, ] }) new Vue({ router, render: h =\u0026gt; h(App), }).$mount(\u0026#39;#app\u0026#39;) Create the Home Page App.vue \u0026lt;template\u0026gt; \u0026lt;div class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Home.vue\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; ","tags":null,"title":"Your First Component","type":"courses","url":"https://fireship.io/courses/vue/intro-routing/","weight":13,"wordcount":60},{"author":null,"date":1563045810,"description":"Protect screens with Angular Router Guards","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563045810,"objectID":"3e1abc23d046ab118e8d5d6268204128","permalink":"https://fireship.io/courses/ionic/basics-router-guards/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/basics-router-guards/","section":"courses","summary":"","tags":null,"title":"Router Guards","type":"courses","url":"https://fireship.io/courses/ionic/basics-router-guards/","weight":13,"wordcount":0},{"author":null,"date":1555434750,"description":"Model and query a many-to-many relationship","dir":"courses/firestore-data-modeling/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"96a0036a0fdee22b434e09a3200427dc","permalink":"https://fireship.io/courses/firestore-data-modeling/relational-many-to-many/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/relational-many-to-many/","section":"courses","summary":"file_type_js firestore.js const authorId = \u0026#39;dr-seuss\u0026#39;; const bookId = \u0026#39;lorax\u0026#39;; // 7. Middle Man Collection const userReviews = db.collection(\u0026#39;reviews\u0026#39;).where(\u0026#39;author\u0026#39;, \u0026#39;==\u0026#39;, authorId); const bookReviews = db.collection(\u0026#39;reviews\u0026#39;).where(\u0026#39;book\u0026#39;, \u0026#39;==\u0026#39;, bookId); // Single read with composite key const specificReview = db.collection(\u0026#39;reviews\u0026#39;).doc(`${bookId}_${authorId}`); // 8. Map // Reviews embadded on books const bookWithReviews = db.collection(\u0026#39;books\u0026#39;).doc(bookId); const userReviews = db.collection(\u0026#39;books\u0026#39;).orderBy(\u0026#39;reviews.jeff-delaney\u0026#39;); // 9. Array const books = db.collection(\u0026#39;books\u0026#39;).where(\u0026#39;categories\u0026#39;, \u0026#39;array-contains\u0026#39;, \u0026#39;fiction\u0026#39;); // 10. Bucket // Get a collection of documents with an array of IDs const getLikedBooks = async() =\u0026gt; { // Get books through user likes const userLikes = await db.","tags":null,"title":"Many-to-Many","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/relational-many-to-many/","weight":13,"wordcount":112},{"author":null,"date":1551285150,"description":"How to Test Background Functions via Shell","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"fca0f92c9981331a1280d17bc3f55a0c","permalink":"https://fireship.io/courses/cloud-functions/auth-testing/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/auth-testing/","section":"courses","summary":"","tags":null,"title":"Testing Background Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/auth-testing/","weight":13,"wordcount":0},{"author":null,"date":1645560690,"description":"React Router explained in 100 Seconds","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"96c904f2e29a8b696722378f61e1834c","permalink":"https://fireship.io/courses/react/basics-router/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-router/","section":"courses","summary":"WIP This section is unfinished. Check back for updates soon.","tags":null,"title":"React Router","type":"courses","url":"https://fireship.io/courses/react/basics-router/","weight":14,"wordcount":10},{"author":null,"date":1636658610,"description":"Move lines up or down without copy/paste","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"069f80665d6b2b7c1d58e3d684d3e3a7","permalink":"https://fireship.io/courses/vscode-tricks/tip-move-lines/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-move-lines/","section":"courses","summary":"✨ Trick - Fast Cut or Copy Copy the line of code that you\u0026rsquo;re currently on by hitting ctrl+c or ctrl+x. It will copy the entire line, no need to highlight it with the mouse.\n✨ Trick - Line Movement Do move a line somewhere nearby, simply use alt + ← ↑ to move the line.\nTo copy the same line of code over and over again, use shift + alt + ← ↑","tags":null,"title":"Move Lines","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-move-lines/","weight":14,"wordcount":74},{"author":null,"date":1636658610,"description":"An introduction to User Authentication","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"9b7c1a860db03b11facf9853b9918487","permalink":"https://fireship.io/courses/ionic/users-primer/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/users-primer/","section":"courses","summary":"","tags":null,"title":"Primer","type":"courses","url":"https://fireship.io/courses/ionic/users-primer/","weight":14,"wordcount":0},{"author":null,"date":1636658610,"description":"Position widgets on a Stack","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"dce96ac4399ce19faa6fb845d16e1d5e","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-stack/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-stack/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: SizedBox.expand( child: Stack( children: \u0026lt;Widget\u0026gt;[ Icon( Icons.camera, size: 100, color: Colors.red, ), Align( alignment: Alignment.center, child: Icon( Icons.camera, size: 100, color: Colors.blue, )), Positioned( bottom: 20, left: 100, child: Icon( Icons.camera, size: 100, color: Colors.green, )) ], ), ), ), ); } } ","tags":null,"title":"Stack","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-stack/","weight":14,"wordcount":62},{"author":null,"date":1633723890,"description":"A practical guide to null safety in Dart","dir":"courses/dart/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"9e9fe9664cc3866ef3e1f356ed289ae7","permalink":"https://fireship.io/courses/dart/basics-null-safety/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/dart/basics-null-safety/","section":"courses","summary":"Sound null safety is a feature added to Dart 2.0. It means variables can no longer be assigned null by default. This reduces the risk of runtime bugs and general makes our code more concise because \u0026ldquo;null checking\u0026rdquo; is no longer necessary.\nNon-Nullable by Default Variables cannot be null by default. Attempting to assign a null value will result in a compile-time error.\nfile_type_dartlang main.dart int age = 75; // non-nullable int age = null; // error Allow Null In some cases, it is useful to allow a variable to be null, which is achieved by adding question mark to the end of the variable\u0026rsquo;s type.","tags":null,"title":"Null Safety Explained","type":"courses","url":"https://fireship.io/courses/dart/basics-null-safety/","weight":14,"wordcount":252},{"author":null,"date":1630869810,"description":"Commit files to a repository","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"7278a3f81ce8db5fd392df661767e102","permalink":"https://fireship.io/courses/git/basics-commit/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-commit/","section":"courses","summary":" How might you preview or try a commit before making it official? Commit staged files to a repository\ncommand line git commit -m \u0026#34;initial commit 🚀\u0026#34; Tip: Add files and commit in a single command\ncommand line git commit -a -m \u0026#34;additional commit\u0026#34; # or git commit -am \u0026#34;additional commit\u0026#34; Use git log to see the history of commits:\ngit log ","tags":null,"title":"git commit","type":"courses","url":"https://fireship.io/courses/git/basics-commit/","weight":14,"wordcount":61},{"author":null,"date":1612207410,"description":"Manage dynamic routing and links in Next.js","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"19c37d706644e3a816eb12e325b49651","permalink":"https://fireship.io/courses/react-next-firebase/app-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-routing/","section":"courses","summary":" What is the syntax for creating a dynamic route? Routes Create the following routes.\n/enter /[username] /[username]/[slug] /admin /admin/[slug] VS Code Component Snippet Add your own VS Code snippets\nfile_type_config user-snippets.json { \u0026#34;component\u0026#34;: { \u0026#34;scope\u0026#34;: \u0026#34;javascript,typescript\u0026#34;, \u0026#34;prefix\u0026#34;: \u0026#34;next-page\u0026#34;, \u0026#34;body\u0026#34;: [ \u0026#34;export default function Page({ }) {\u0026#34;, \u0026#34; return (\u0026#34;, \u0026#34; \u0026lt;main\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/main\u0026gt;\u0026#34;, \u0026#34; )\u0026#34;, \u0026#34;}\u0026#34;, ], \u0026#34;description\u0026#34;: \u0026#34;React component\u0026#34; } } ","tags":null,"title":"Routing","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-routing/","weight":14,"wordcount":62},{"author":null,"date":1587410610,"description":"How RESTful APIs work and tools that will increase your productivity","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"04405454f075bc5ec00a5f26124630c7","permalink":"https://fireship.io/courses/stripe-js/intro-rest/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/intro-rest/","section":"courses","summary":"","tags":null,"title":"Intro to HTTP and REST","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-rest/","weight":14,"wordcount":0},{"author":null,"date":1563305010,"description":"Introduction to the Angular CLI","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"b5268e1c539e523bfd77db4047b8b9a0","permalink":"https://fireship.io/courses/angular/basics-cli/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/basics-cli/","section":"courses","summary":"The Angular CLI provides a powerful set of tools that can bundle your app with webpack, generate boilerplate code, and configure third-party extensions.\nGetting Started command line npm install -g @angular/cli ng --version ng help ng generate component --help ng new my-app code my-app ","tags":null,"title":"CLI","type":"courses","url":"https://fireship.io/courses/angular/basics-cli/","weight":14,"wordcount":44},{"author":null,"date":1555434750,"description":"How to eliminate reads with data duplication","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"2484f74d46dc828082060343bfec4a07","permalink":"https://fireship.io/courses/firestore-data-modeling/advanced-duplication/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firestore-data-modeling/advanced-duplication/","section":"courses","summary":"","tags":null,"title":"Duplication","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/advanced-duplication/","weight":14,"wordcount":0},{"author":null,"date":1551285150,"description":"How Firestore Functions Work in Firebase","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"f943a94b97fd3df71718170ab95c506b","permalink":"https://fireship.io/courses/cloud-functions/firestore-intro/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/firestore-intro/","section":"courses","summary":"","tags":null,"title":"Intro to Firestore Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/firestore-intro/","weight":14,"wordcount":0},{"author":null,"date":1645560690,"description":"SSR with Next.js explained in 100 Seconds","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"0cd7a65d5798398638d8215ee196d474","permalink":"https://fireship.io/courses/react/basics-nextjs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-nextjs/","section":"courses","summary":"","tags":null,"title":"Next.js","type":"courses","url":"https://fireship.io/courses/react/basics-nextjs/","weight":15,"wordcount":0},{"author":null,"date":1636658610,"description":"Simple guest login with Firebase Anonymous Auth","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"2983f2b9ac429cb71c6ebbcdfa939cac","permalink":"https://fireship.io/courses/ionic/users-anonymous/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/users-anonymous/","section":"courses","summary":"","tags":null,"title":"Anonymous Auth","type":"courses","url":"https://fireship.io/courses/ionic/users-anonymous/","weight":15,"wordcount":0},{"author":null,"date":1636658610,"description":"Hide code from your view by folding it","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"b40a9b15c45bfa25af07245a40104fe5","permalink":"https://fireship.io/courses/vscode-tricks/tip-folding/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-folding/","section":"courses","summary":"✨ Trick - Fold All Use the command palette for find the Fold All command. It will fold all the code in the document, then you can use ctrl+shift+] to unfold the parts you\u0026rsquo;re working on.","tags":null,"title":"Folding","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-folding/","weight":15,"wordcount":36},{"author":null,"date":1636658610,"description":"ListView and GridView for scrollable widgets","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"7b60796c4670bd67c9dc50fd037f28cb","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-scroll-list/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-scroll-list/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: ListView( scrollDirection: Axis.horizontal, children: _cards(), ) ), ); } List\u0026lt;Widget\u0026gt; _cards() { return [1,2,3,4,5,6,7,8,9].map((v) =\u0026gt; Container( color: Colors.blue, margin: EdgeInsets.all(20), height: 100, child: Text(\u0026#39;$v\u0026#39;), ) ).toList(); } ","tags":null,"title":"Scroll","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-scroll-list/","weight":15,"wordcount":46},{"author":null,"date":1630869810,"description":"Tips for working with git in VS Code","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"ed81ace73f8ee31a79f4fdd0df2bfc21","permalink":"https://fireship.io/courses/git/basics-vscode/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/basics-vscode/","section":"courses","summary":"Which term describes the changes between the working tree and previously comitted files? VS Code is a powerful tool for working with git. You can use it to run commands without the CLI, sync it up to GitHub, and to manage your git repositories. Learn more in the official docs.","tags":null,"title":"VS Code Tips","type":"courses","url":"https://fireship.io/courses/git/basics-vscode/","weight":15,"wordcount":50},{"author":null,"date":1612207410,"description":"Create a loading spinner to manage loading states across the app","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"7119a4479f7715269fd5f85db997802f","permalink":"https://fireship.io/courses/react-next-firebase/app-loader/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-loader/","section":"courses","summary":" Which CSS animation property will cause the spinner to rotate forever? Build a Loading Spinner file_type_js components/Loader.js // Loading Spinner export default function Loader({ show }) { return show ? \u0026lt;div className=\u0026#34;loader\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; : null; } file_type_css globals.css .loader { border: 10px solid var(--color-bg); border-top: 10px solid var(--color-blue); border-radius: 50%; width: 50px; height: 50px; animation: spin 2s linear infinite; } @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } ","tags":null,"title":"Loader","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-loader/","weight":15,"wordcount":73},{"author":null,"date":1587410610,"description":"Configure Node.js for hot reloading with TypeScript","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"f39d61344158d6739611cb8d99150a40","permalink":"https://fireship.io/courses/stripe-js/intro-node-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/intro-node-setup/","section":"courses","summary":"Create a Node Project Start with an empty Node project.\ncommand line npm init -y Dependencies Add the following dependencies and scripts.\nfile_type_npm package.json { \u0026#34;name\u0026#34;: \u0026#34;stripe-server\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;build\u0026#34;: \u0026#34;tsc\u0026#34;, \u0026#34;start\u0026#34;: \u0026#34;node lib/index.js\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;concurrently \\\u0026#34;tsc -w\\\u0026#34; \\\u0026#34;nodemon lib/index.js\\\u0026#34;\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;cors\u0026#34;: \u0026#34;^2.8.5\u0026#34;, \u0026#34;dotenv\u0026#34;: \u0026#34;^8.2.0\u0026#34;, \u0026#34;express\u0026#34;: \u0026#34;^4.17.1\u0026#34;, \u0026#34;firebase-admin\u0026#34;: \u0026#34;^8.6.0\u0026#34;, \u0026#34;stripe\u0026#34;: \u0026#34;^8.43.0\u0026#34; }, \u0026#34;devDependencies\u0026#34;: { \u0026#34;@types/express\u0026#34;: \u0026#34;^4.17.6\u0026#34;, \u0026#34;@types/cors\u0026#34;: \u0026#34;^2.","tags":null,"title":"Node Setup","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-node-setup/","weight":15,"wordcount":140},{"author":null,"date":1563305010,"description":"The purpose of every file in Angular","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"f127d309063bbc562be3717f9e557fe3","permalink":"https://fireship.io/courses/angular/basics-anatomy-of-angular/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/angular/basics-anatomy-of-angular/","section":"courses","summary":"","tags":null,"title":"Anatomy","type":"courses","url":"https://fireship.io/courses/angular/basics-anatomy-of-angular/","weight":15,"wordcount":0},{"author":null,"date":1555434750,"description":"Use Cloud Functions to maintain computed values","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"3053b9a245a26aae554ff31b5e48769a","permalink":"https://fireship.io/courses/firestore-data-modeling/advanced-aggregation/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/advanced-aggregation/","section":"courses","summary":"Cloud Functions Master Course - Firestore Section","tags":null,"title":"Aggregation","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/advanced-aggregation/","weight":15,"wordcount":7},{"author":null,"date":1645560690,"description":"Manage a relational database with Prisma","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"8e4ba94d870488f7822542dcb750535d","permalink":"https://fireship.io/courses/react/basics-prisma/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-prisma/","section":"courses","summary":"","tags":null,"title":"Prisma","type":"courses","url":"https://fireship.io/courses/react/basics-prisma/","weight":16,"wordcount":0},{"author":null,"date":1645560690,"description":"Vite.js explained in 100 Seconds","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"e33a64f0b0d57c800419e0c6ffc3d0f0","permalink":"https://fireship.io/courses/react/basics-vite/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/basics-vite/","section":"courses","summary":"Vite.js is a build tool that can be used to build React projects. It is exceptionally fast and easy to use.\nChallenge Create a react project with Vite\ncommand line npm init vite my-app ","tags":null,"title":"Vite","type":"courses","url":"https://fireship.io/courses/react/basics-vite/","weight":16,"wordcount":34},{"author":null,"date":1636658610,"description":"Use AnimatedContainer for automatic motion","dir":"courses/flutter-firebase-v1/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"637659af4e4ff60c5e2cbd1f31a39ce1","permalink":"https://fireship.io/courses/flutter-firebase-v1/widgets-animated/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/widgets-animated/","section":"courses","summary":"Example Code file_type_dartlang main.dart import \u0026#39;dart:math\u0026#39;; class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: Scaffold( body: Center( child: CoolBox(), ) ), ); } } class CoolBox extends StatefulWidget { const CoolBox({ Key key, }) : super(key: key); @override _CoolBoxState createState() =\u0026gt; _CoolBoxState(); } class _CoolBoxState extends State\u0026lt;CoolBox\u0026gt; { double width = 100; double height = 100; Color color = Colors.green; @override Widget build(BuildContext context) { return AnimatedContainer( duration: Duration(seconds: 2), curve: Curves.","tags":null,"title":"Animated Widgets","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/widgets-animated/","weight":16,"wordcount":126},{"author":null,"date":1636658610,"description":"Colorize the brackets in your code","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"00ec4d50809d91cec6e48c8bedb96574","permalink":"https://fireship.io/courses/vscode-tricks/tip-colorizer/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-colorizer/","section":"courses","summary":"✨ Trick - Bracket Colorizer Open VS Code settings with ctrl+,, then enable Bracket Pair Colorization. It\u0026rsquo;s especially useful when using a curly brace langauge like JavaScript, C, Dart, etc.","tags":null,"title":"Bracket Colorizer","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-colorizer/","weight":16,"wordcount":30},{"author":null,"date":1636658610,"description":"Build a reactive user profile in Ionic","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"791f6d5e6feaa7130a76b9a612802199","permalink":"https://fireship.io/courses/ionic/users-user-profile/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/users-user-profile/","section":"courses","summary":"","tags":null,"title":"User Profile","type":"courses","url":"https://fireship.io/courses/ionic/users-user-profile/","weight":16,"wordcount":0},{"author":null,"date":1612207410,"description":"Create a dynamic navigation bar with React","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"be5587f3a925567190c1d447ad0cb815","permalink":"https://fireship.io/courses/react-next-firebase/app-navbar/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-navbar/","section":"courses","summary":"Which element or component is used to create links in Next.js Navbar Component file_type_js components/Navbar.js import Link from \u0026#39;next/link\u0026#39;; // Top navbar export default function Navbar() { const user = null; const username = null; return ( \u0026lt;nav className=\u0026#34;navbar\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; \u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;button className=\u0026#34;btn-logo\u0026#34;\u0026gt;FEED\u0026lt;/button\u0026gt; \u0026lt;/Link\u0026gt; \u0026lt;/li\u0026gt; {/* user is signed-in and has username */} {username \u0026amp;\u0026amp; ( \u0026lt;\u0026gt; \u0026lt;li className=\u0026#34;push-left\u0026#34;\u0026gt; \u0026lt;Link href=\u0026#34;/admin\u0026#34;\u0026gt; \u0026lt;button className=\u0026#34;btn-blue\u0026#34;\u0026gt;Write Posts\u0026lt;/button\u0026gt; \u0026lt;/Link\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;Link href={`/${username}`}\u0026gt; \u0026lt;img src={user?","tags":null,"title":"Navbar","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-navbar/","weight":16,"wordcount":133},{"author":null,"date":1587410610,"description":"Build your first API endpoint with Express","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"1cb27af0d370166a8faa0c5249d59b92","permalink":"https://fireship.io/courses/stripe-js/intro-express-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/intro-express-setup/","section":"courses","summary":"Create an Express App file_type_typescript api.ts import express, { Request, Response } from \u0026#39;express\u0026#39;; export const app = express(); // Allows cross origin requests import cors from \u0026#39;cors\u0026#39;; app.use(cors({ origin: true })); app.use(express.json()); app.post(\u0026#39;/test\u0026#39;, (req: Request, res: Response) =\u0026gt; { const amount = req.body.amount; res.status(200).send({ with_tax: amount * 7 }); }); Listen to Incoming Requests file_type_typescript index.ts // Start the API with Express import { app } from \u0026#39;./api\u0026#39;; const port = process.","tags":null,"title":"Express","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-express-setup/","weight":16,"wordcount":82},{"author":null,"date":1563305010,"description":"An introduction to Components, Directives, and Pipes","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"e8809c8d0fd651d9ac6f00eb6a6ecde3","permalink":"https://fireship.io/courses/angular/basics-components/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/basics-components/","section":"courses","summary":"Components, Directive, and Pipes This video below originally appeared at Angular Components - Ten Basic Concepts. It was originally produced for Angular v6, but the core concepts are identical.\nComponent Composition Cross-component communication is one of the most useful concepts to master when working component-based UIs. This video below originally appeared as Sharing Data between Components and provides a reference when sharing data between components.\nBonus Video ","tags":null,"title":"Components","type":"courses","url":"https://fireship.io/courses/angular/basics-components/","weight":16,"wordcount":67},{"author":null,"date":1555434750,"description":"Model reddit-style votes in Firestore","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"bc19b2fe13c66896f026f5eb862462aa","permalink":"https://fireship.io/courses/firestore-data-modeling/models-votes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/models-votes/","section":"courses","summary":"A data model suitable for Votes, Hearts, Likes, etc","tags":null,"title":"Votes","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/models-votes/","weight":16,"wordcount":9},{"author":null,"date":1551285150,"description":"Using the OnCreate Trigger in Firestore","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"5a4854f2d65793cfc19628ce4534ada0","permalink":"https://fireship.io/courses/cloud-functions/firestore-oncreate/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/firestore-oncreate/","section":"courses","summary":"","tags":null,"title":"OnCreate","type":"courses","url":"https://fireship.io/courses/cloud-functions/firestore-oncreate/","weight":16,"wordcount":0},{"author":null,"date":1645560690,"description":"React Query explained in 100 Seconds","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"df1a7195ca4da3b71004babe4ea6366a","permalink":"https://fireship.io/courses/react/basics-query/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-query/","section":"courses","summary":"","tags":null,"title":"React Query","type":"courses","url":"https://fireship.io/courses/react/basics-query/","weight":17,"wordcount":0},{"author":null,"date":1636658610,"description":"Set multiple cursors at the same time","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"840249d88bf5b297771e38bad52e74c3","permalink":"https://fireship.io/courses/vscode-tricks/tip-multi-cursor/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-multi-cursor/","section":"courses","summary":"✨ Trick - Set Multiple Cursors Use alt + click to set multiple cursors at the same time. This can be much faster than copy/paste when the value the same in every location.","tags":null,"title":"Multi Cursor","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-multi-cursor/","weight":17,"wordcount":33},{"author":null,"date":1636658610,"description":"Google Sign-In for progressive web apps","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"942dcc4fc1463837bae8c69ac8618799","permalink":"https://fireship.io/courses/ionic/users-oauth-web/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/users-oauth-web/","section":"courses","summary":"","tags":null,"title":"OAuth Web","type":"courses","url":"https://fireship.io/courses/ionic/users-oauth-web/","weight":17,"wordcount":0},{"author":null,"date":1636658610,"description":"Styles, Themes, and InheritedWidget","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"9aa28954867234362488f31d1884e983","permalink":"https://fireship.io/courses/flutter-firebase-v1/concepts-themes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/concepts-themes/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( theme: ThemeData( brightness: Brightness.light, primaryColor: Colors.lightGreen, textTheme: TextTheme( body1: TextStyle(color: Colors.red, fontSize: 30), headline: TextStyle(color: Colors.blue, fontSize: 70) ) ), home: HomeScreen(), ); } } class HomeScreen extends StatelessWidget { @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(), body: Center( child: Text(\u0026#39;Hello World\u0026#39;, style: Theme.of(context).textTheme.headline,), ) ); } } ","tags":null,"title":"Themes","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/concepts-themes/","weight":17,"wordcount":66},{"author":null,"date":1612207410,"description":"Use react-hot-toast to trigger animated toast messages","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"d8258e344c2ecae2263eba5d9762f197","permalink":"https://fireship.io/courses/react-next-firebase/app-toast/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/app-toast/","section":"courses","summary":"Install Hot Toast command line npm i react-hot-toast Check out the official docs.\nDeclare the Toaster file_type_js pages/_app.js import Navbar from \u0026#39;../components/Navbar\u0026#39;; import { Toaster } from \u0026#39;react-hot-toast\u0026#39;; function MyApp({ Component, pageProps }) { return ( \u0026lt;\u0026gt; \u0026lt;Navbar /\u0026gt; \u0026lt;Component {...pageProps} /\u0026gt; \u0026lt;Toaster /\u0026gt; \u0026lt;/\u0026gt; ); } Trigger a Toast Message file_type_js pages/index.js import toast from \u0026#39;react-hot-toast\u0026#39;; export default function Home() { return ( \u0026lt;div\u0026gt; \u0026lt;button onClick={() =\u0026gt; toast.success(\u0026#39;hello toast!\u0026#39;)}\u0026gt; Toast Me \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; ); } ","tags":null,"title":"Toast","type":"courses","url":"https://fireship.io/courses/react-next-firebase/app-toast/","weight":17,"wordcount":76},{"author":null,"date":1563305010,"description":"Use dependency injection (DI) to create services","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"48a82020fac0094d71790a749e04349d","permalink":"https://fireship.io/courses/angular/basics-services/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/basics-services/","section":"courses","summary":"Generate a Service command line ng g service clock Use-Cases for Services Services can inject shared data and methods into your components. They are also useful for writing code that maintains a DRY separation of concerns.\nShared state. Services can connect data between components and are especially useful when components are not in a child/parent relationship. Shared logic. Stateless services that define common methods used in multiple components. ","tags":null,"title":"Dependency Injection","type":"courses","url":"https://fireship.io/courses/angular/basics-services/","weight":17,"wordcount":68},{"author":null,"date":1563305010,"description":"How NgModules help manage code and complexity","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"cbeb1b13cd7b95ca45368b1bc542b0d5","permalink":"https://fireship.io/courses/angular/basics-modules/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/basics-modules/","section":"courses","summary":" command line ng generate module cool Get comfortable with declarations, imports, and exports.\nfile_type_ng_component_ts some.module.ts @NgModule({ // Components defined in this module declarations: [ FooComponent ], // Components used in this module imports: [ CommonModule ], // Components that can be imported by other modules exports: [ FooComponent ], }) ","tags":null,"title":"Modules","type":"courses","url":"https://fireship.io/courses/angular/basics-modules/","weight":17,"wordcount":50},{"author":null,"date":1555434750,"description":"Role-based access control and security rules","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"c77ebbf2e60be0786065e6d2a7ee8022","permalink":"https://fireship.io/courses/firestore-data-modeling/models-roles/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/models-roles/","section":"courses","summary":"Sample Firestore rules for Role-based Authorization where the user document determines the access level.\nfile_type_firebase rules.json match /posts/{document} { function getRoles() { return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles; } allow read; allow update: if getRoles().hasAny([\u0026#39;admin\u0026#39;, \u0026#39;editor\u0026#39;]) == true; allow write: if getRoles().hasAny([\u0026#39;admin\u0026#39;]) == true; } ","tags":null,"title":"Role-Based Authorization","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/models-roles/","weight":17,"wordcount":41},{"author":null,"date":1551285150,"description":"Using the OnUpdate Trigger in Firestore","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"dec5eec1e1ec3a2949cbc94f2758244d","permalink":"https://fireship.io/courses/cloud-functions/firestore-onupdate/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/firestore-onupdate/","section":"courses","summary":"","tags":null,"title":"OnUpdate","type":"courses","url":"https://fireship.io/courses/cloud-functions/firestore-onupdate/","weight":17,"wordcount":0},{"author":null,"date":1636658610,"description":"Change opening and closing tags at the same time","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"1e4af1cf88d6e9bfb3c945efa2f487e9","permalink":"https://fireship.io/courses/vscode-tricks/tip-linked-editing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-linked-editing/","section":"courses","summary":"✨ Trick - Enable Linked Editing From the settings, enable the Linked Editing option. VS code will now automatically match any opening and closing tags for simultaneous edits.","tags":null,"title":"Linked Editing","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-linked-editing/","weight":18,"wordcount":28},{"author":null,"date":1636658610,"description":"Screen routing with a navigation stack","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"b9d18a6e280b7d34641240a091ce1323","permalink":"https://fireship.io/courses/flutter-firebase-v1/concepts-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/concepts-routing/","section":"courses","summary":"Example Code file_type_dartlang main.dart class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( routes: { \u0026#39;/home\u0026#39;: (context) =\u0026gt; HomeScreen(), \u0026#39;/slideshow\u0026#39;: (context) =\u0026gt; SlideshowScreen() }, home: HomeScreen(), ); } } class HomeScreen extends StatelessWidget { @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(title: Text(\u0026#39;Home\u0026#39;), backgroundColor: Colors.red,), body: Center( child: Row( mainAxisAlignment: MainAxisAlignment.center, children: \u0026lt;Widget\u0026gt;[ FlatButton(child: Text(\u0026#39;push\u0026#39;), color: Colors.green, onPressed: () { // Navigator.push( // context, // MaterialPageRoute(builder: (context) =\u0026gt; SlideshowScreen(name: \u0026#39;Jeff\u0026#39;)) // ); // Navigator.","tags":null,"title":"Navigation","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/concepts-routing/","weight":18,"wordcount":95},{"author":null,"date":1636658610,"description":"Google Sign-In for native iOS \u0026 Android apps","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"617c1dbda197364b730c5e0ce2f7c920","permalink":"https://fireship.io/courses/ionic/users-oauth-native/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/users-oauth-native/","section":"courses","summary":"Note: If you run into bugs at this point building your app for Android, you may need to follow the steps outlined in this video:","tags":null,"title":"OAuth Native","type":"courses","url":"https://fireship.io/courses/ionic/users-oauth-native/","weight":18,"wordcount":25},{"author":null,"date":1587410610,"description":"Configure a React project for Stripe Payments","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"300a23dc88a00fb7921147cd4a4f9999","permalink":"https://fireship.io/courses/stripe-js/intro-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/intro-react/","section":"courses","summary":"Create a React App command line npx create-react-app myapp Setup Stripe file_type_js command line npm install @stripe/react-stripe-js @stripe/stripe-js index.js import { Elements } from \u0026#39;@stripe/react-stripe-js\u0026#39;; import { loadStripe } from \u0026#39;@stripe/stripe-js\u0026#39;; export const stripePromise = loadStripe( \u0026#39;pk_test_...\u0026#39; ); ReactDOM.render( \u0026lt;React.StrictMode\u0026gt; \u0026lt;Elements stripe={stripePromise}\u0026gt; \u0026lt;App /\u0026gt; \u0026lt;/Elements\u0026gt; \u0026lt;/React.StrictMode\u0026gt;, document.getElementById(\u0026#39;root\u0026#39;) ); React Router command line npm install react-router-dom Create empty files for the components referenced in the router below, like Checkout.js, Payments.js, etc.","tags":null,"title":"React Setup","type":"courses","url":"https://fireship.io/courses/stripe-js/intro-react/","weight":18,"wordcount":229},{"author":null,"date":1555434750,"description":"Use an ACL for fine-grained user authorization","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"f3bcda57cb30d4ee7dca87c554253f7e","permalink":"https://fireship.io/courses/firestore-data-modeling/models-access-control-list/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/models-access-control-list/","section":"courses","summary":"Sample Firestore security rules for an Access Control List (ACL), where the content determines which users have authorization.\nfile_type_firebase rules.json match /posts/{document} { allow read; allow write: if resource.data.members.hasAny(request.auth.uid); } example of an Access Control List in Firestore","tags":null,"title":"Access Control List","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/models-access-control-list/","weight":18,"wordcount":38},{"author":null,"date":1551285150,"description":"How Storage Functions Work in Firebase","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"39aab930505f451f07644e2e9c24dd7d","permalink":"https://fireship.io/courses/cloud-functions/storage-intro/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/storage-intro/","section":"courses","summary":"","tags":null,"title":"Intro to Storage Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/storage-intro/","weight":18,"wordcount":0},{"author":null,"date":1645560690,"description":"What is a Progressive Web App?","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"e7e3e5ed6934e4d7d936fc160919afc7","permalink":"https://fireship.io/courses/react/basics-pwa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-pwa/","section":"courses","summary":"","tags":null,"title":"PWAs","type":"courses","url":"https://fireship.io/courses/react/basics-pwa/","weight":19,"wordcount":0},{"author":null,"date":1645560690,"description":"Redux Pattern for State Management","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"bd260f8d6e70497baced7c7e6d02177a","permalink":"https://fireship.io/courses/react/basics-redux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/react/basics-redux/","section":"courses","summary":"","tags":null,"title":"Redux","type":"courses","url":"https://fireship.io/courses/react/basics-redux/","weight":19,"wordcount":0},{"author":null,"date":1636658610,"description":"Handle Streams and Futures","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"54b86f5712dbccdc88fe81648b87924a","permalink":"https://fireship.io/courses/flutter-firebase-v1/concepts-async/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/concepts-async/","section":"courses","summary":"Example Code file_type_dartlang main.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:cloud_firestore/cloud_firestore.dart\u0026#39;; import \u0026#39;dart:async\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( home: HomeScreen(), ); } } class HomeScreen extends StatelessWidget { final Firestore db = Firestore.instance; @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(title: Text(\u0026#39;Home\u0026#39;)), body: Center( child: StreamBuilder\u0026lt;DocumentSnapshot\u0026gt;( stream: db.collection(\u0026#39;users\u0026#39;).document(\u0026#39;mB6sGaFBczfIW50DJyvGDcQWOvW2\u0026#39;).snapshots(), builder: (context, snapshot) { if (snapshot.hasData) { var data = snapshot.data.data; return Column( crossAxisAlignment: CrossAxisAlignment.","tags":null,"title":"Async Widgets","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/concepts-async/","weight":19,"wordcount":94},{"author":null,"date":1636658610,"description":"Quickly edit matching text on multiple lines","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f27fd8341dcfe4e9e88072a723f3be1a","permalink":"https://fireship.io/courses/vscode-tricks/tip-multiline/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-multiline/","section":"courses","summary":"✨ Trick - Multiline Editing Find a symbol in your code that\u0026rsquo;s used multiple times, like a variable name. Put your cursor on the symbol and press ctrl+d. It will find the next match and place an extra cursor on it, making name changes much faster.","tags":null,"title":"Multiline Editing","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-multiline/","weight":19,"wordcount":46},{"author":null,"date":1636658610,"description":"Prevent unauthorized user access to specific screens","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"1a6a4d953e8dc990686c0ff011af577d","permalink":"https://fireship.io/courses/ionic/users-router-guard/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/users-router-guard/","section":"courses","summary":"","tags":null,"title":"User Router Guard","type":"courses","url":"https://fireship.io/courses/ionic/users-router-guard/","weight":19,"wordcount":0},{"author":null,"date":1555434750,"description":"Model a tree or hierarchy for threaded comments","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"f6e359aa70837f30272bddc1bed45a3a","permalink":"https://fireship.io/courses/firestore-data-modeling/models-tree/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/models-tree/","section":"courses","summary":" file_type_js firestore.js const topLevel = db.collection(\u0026#39;comments\u0026#39;).where(\u0026#39;parent\u0026#39;, \u0026#39;==\u0026#39;, false); const level = db.collection(\u0026#39;comments\u0026#39;).where(\u0026#39;parent\u0026#39;, \u0026#39;==\u0026#39;, id) const traverseAll = (id) =\u0026gt; { const tree = db.collection(\u0026#39;comments\u0026#39;) .where(\u0026#39;parent\u0026#39;, \u0026#39;\u0026gt;=\u0026#39;, id) .where(\u0026#39;parent\u0026#39;, \u0026#39;\u0026lt;=\u0026#39;, `${id}~`) } ","tags":null,"title":"Hierarchy","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/models-tree/","weight":19,"wordcount":31},{"author":null,"date":1551285150,"description":"How to use GCP Services in Functions","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"e29edb125887767567e896803f5929e0","permalink":"https://fireship.io/courses/cloud-functions/storage-gcp/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/storage-gcp/","section":"courses","summary":"","tags":null,"title":"Use GCP Services","type":"courses","url":"https://fireship.io/courses/cloud-functions/storage-gcp/","weight":19,"wordcount":0},{"author":null,"date":1668972210,"description":"Design the layout and routing structure with React Router","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"d91ee21b8b7b515e5b1862c736e8de53","permalink":"https://fireship.io/courses/supabase/app-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-routing/","section":"courses","summary":"In React Router, all routes must be nested inside which component? React Router docs: https://reactrouter.com/en/main\nCommand to install react router:\nyarn add react-router-dom Initial routing in the App.tsx file:\nconst router = createBrowserRouter([ { path: \u0026#34;/\u0026#34;, element: \u0026lt;Layout /\u0026gt;, children: [ { path: \u0026#34;\u0026#34;, element: \u0026lt;MessageBoard /\u0026gt;, children: [ { path: \u0026#34;:pageNumber\u0026#34;, element: \u0026lt;AllPosts /\u0026gt;, }, { path: \u0026#34;post/:postId\u0026#34;, element: \u0026lt;PostView /\u0026gt;, }, ], }, { path: \u0026#34;welcome\u0026#34;, element: \u0026lt;Welcome /\u0026gt;, loader: welcomeLoader, }, ], }, ]); function App() { return \u0026lt;RouterProvider router={router} /\u0026gt;; } export default App; function Layout() { \u0026lt;\u0026gt; \u0026lt;NavBar /\u0026gt; \u0026lt;Outlet /\u0026gt; \u0026lt;/\u0026gt;; } Our starting NavBar component:","tags":null,"title":"Routing and Layout","type":"courses","url":"https://fireship.io/courses/supabase/app-routing/","weight":20,"wordcount":174},{"author":null,"date":1668194610,"description":"How does Prototypal Inheritance work?","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"504d639b6478b879fafbd10b935a82b6","permalink":"https://fireship.io/courses/js/102-prototype-chain/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-prototype-chain/","section":"courses","summary":"Which class does an Array inherit from? Prototype Chain The prototype chain is a mechanism that allows objects to inherit properties and methods from other objects. Every object can have exactly one prototype object. That prototype object can also have a prototype object, and so on, creating a chain of inheritied properties and methods. The end of this chain is called the null prototype.\nIn general, you don\u0026rsquo;t need to think about the prototype chain when doing everyday JavaScript development.","tags":null,"title":"Prototype Chain","type":"courses","url":"https://fireship.io/courses/js/102-prototype-chain/","weight":20,"wordcount":162},{"author":null,"date":1645560690,"description":"Build a fullstack instant search feature","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"1019178f85f2ff398a5a6ab427f0d56d","permalink":"https://fireship.io/courses/react/1-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/1-intro/","section":"courses","summary":"Source Code React Instant Search Demo\nReact Setup command line npm init vite animalfarm cd animalfarm npm install npm run dev Node.js Setup command line cd server npm init -y npm install express cors chance ","tags":null,"title":"Setup","type":"courses","url":"https://fireship.io/courses/react/1-intro/","weight":20,"wordcount":35},{"author":null,"date":1636658610,"description":"Take a closer look at the quiz app that we're building","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f5dc07f3af3df00f9501620449980c21","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-demo-app-tour/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/project-demo-app-tour/","section":"courses","summary":"","tags":null,"title":"App Tour","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-demo-app-tour/","weight":20,"wordcount":0},{"author":null,"date":1636658610,"description":"Build an interactive fullstack quiz app for iOS \u0026 Android","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e37ba638125ac0030d36dd76e5cc49ea","permalink":"https://fireship.io/courses/flutter-firebase/project-demo-app-tour/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase/project-demo-app-tour/","section":"courses","summary":"","tags":null,"title":"App Tour","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-demo-app-tour/","weight":20,"wordcount":0},{"author":null,"date":1636658610,"description":"Use emmet to create HTML quickly","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e453ea3797f18971d7dc99d45151f9e3","permalink":"https://fireship.io/courses/vscode-tricks/tip-emmet/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-emmet/","section":"courses","summary":"✨ Trick - Emmet Cheat Sheet Find the emmet cheat sheet here. If you\u0026rsquo;re doing web development, print it out and use it.\n✨ Trick - Emmet Snippets for HTML Open an HTML file in VS code. Try typing characters like ul\u0026gt;li*3 followed by tab to create a list with 3 items.\nBonus Video ","tags":null,"title":"Emmet Snippets","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-emmet/","weight":20,"wordcount":54},{"author":null,"date":1636658610,"description":"An introduction to Firestore and Realtime Data","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6e1a1318a34fcba62fdc7cb53fa2ae38","permalink":"https://fireship.io/courses/ionic/app-primer/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/app-primer/","section":"courses","summary":"Not sure how to structure your database? You may also want to check out the Firestore Data Modeling Course.","tags":null,"title":"Primer","type":"courses","url":"https://fireship.io/courses/ionic/app-primer/","weight":20,"wordcount":19},{"author":null,"date":1633723890,"description":"Review conditional statements, loops, and assertions","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"6219028cc7ab95fb33cb8df2d609399e","permalink":"https://fireship.io/courses/dart/syntax-control-flow/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/syntax-control-flow/","section":"courses","summary":"Conditional Statements file_type_dartlang control-flow.dart String color = \u0026#39;blue\u0026#39;; if (color == \u0026#39;blue\u0026#39;) { // } else if (color == \u0026#39;green\u0026#39;) { // } else { // default } // One liner if (color == \u0026#39;red\u0026#39;) print(\u0026#39;hello red!\u0026#39;); Loops file_type_dartlang control-flow.dart for (var i = 0; i \u0026lt; 5; i++) { print(i); // break; // continue; } int i = 0; while (i \u0026lt; 5) { print(i); i++; } i = 0; do { print(i); } while (i \u0026lt; 5); Assertions file_type_dartlang control-flow.","tags":null,"title":"Control Flow","type":"courses","url":"https://fireship.io/courses/dart/syntax-control-flow/","weight":20,"wordcount":91},{"author":null,"date":1630869810,"description":"Connect a remote GitHub repo to your local repo","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"d8c53d079b96b5720f7183673da9eeee","permalink":"https://fireship.io/courses/git/remote-remote/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/remote-remote/","section":"courses","summary":" What is the parent company of GitHub? List Remotes List current remotes in the local repo:\ncommand line git remote Create a new remote command line git remote add origin \u0026lt;url-to-your-github-repo\u0026gt; ","tags":null,"title":"git remote","type":"courses","url":"https://fireship.io/courses/git/remote-remote/","weight":20,"wordcount":31},{"author":null,"date":1612207410,"description":"Technical overview of Firebase Auth with custom usernames","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"652941cb0df0aaa8c2fd18d10e7e7bf0","permalink":"https://fireship.io/courses/react-next-firebase/auth-primer/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/auth-primer/","section":"courses","summary":" How do we avoid fetching the user data on every page change? ","tags":null,"title":"Auth Intro","type":"courses","url":"https://fireship.io/courses/react-next-firebase/auth-primer/","weight":20,"wordcount":12},{"author":null,"date":1605874290,"description":"Path match security rules to documents \u0026 collections","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"e7729aa932994c20ad2e69e6161b6b6f","permalink":"https://fireship.io/courses/firebase-security/basics-paths/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/basics-paths/","section":"courses","summary":" file_type_firebase firestore.rules match /users/jeffd23 { // Single document } match /users/{userId} { // Single Collection } match /posts/{postId=**} { // Recursive wildcard, includes all subcollections } ","tags":null,"title":"Match","type":"courses","url":"https://fireship.io/courses/firebase-security/basics-paths/","weight":20,"wordcount":26},{"author":null,"date":1587410610,"description":"What is Stripe Checkout and should you use it?","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"71eb094dfdeed3fd387c01e51ebd5c9d","permalink":"https://fireship.io/courses/stripe-js/checkout-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/checkout-intro/","section":"courses","summary":"","tags":null,"title":"Stripe Checkout","type":"courses","url":"https://fireship.io/courses/stripe-js/checkout-intro/","weight":20,"wordcount":0},{"author":null,"date":1585769010,"description":"Basic user authentication with Firebase","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"0cbdc764bfdccb30ee313002c751469d","permalink":"https://fireship.io/courses/vue/auth-anonymous/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/auth-anonymous/","section":"courses","summary":"Login Component Login.vue \u0026lt;template\u0026gt; \u0026lt;aside class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Sign in Anonymously\u0026lt;/h3\u0026gt; \u0026lt;button class=\u0026#34;button\u0026#34; @click=\u0026#34;auth.signInAnonymously()\u0026#34;\u0026gt;Sign In\u0026lt;/button\u0026gt; \u0026lt;/aside\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { auth } from \u0026#39;../firebase\u0026#39;; export default { data() { return { auth, } }, } \u0026lt;/script\u0026gt; ","tags":null,"title":"Anonymous Auth","type":"courses","url":"https://fireship.io/courses/vue/auth-anonymous/","weight":20,"wordcount":34},{"author":null,"date":1566569610,"description":"Handle shared Firebase data with Provider","dir":"courses/flutter-firebase-v1/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1566569610,"objectID":"7606246c36b1d81de94d8f545766c760","permalink":"https://fireship.io/courses/flutter-firebase-v1/concepts-state/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/concepts-state/","section":"courses","summary":"Note: The code below is updated for Provider version 3.1. The main change is that the stream param has been renamed to value.\nExample Code file_type_dartlang main.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:cloud_firestore/cloud_firestore.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class UserModel { String name = \u0026#39;Bob\u0026#39;; } var stream = Stream.fromIterable([UserModel()]); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return StreamProvider\u0026lt;UserModel\u0026gt;.value( value: stream, child: MaterialApp( home: HomeScreen(), ), ); } } class HomeScreen extends StatelessWidget { final Firestore db = Firestore.","tags":null,"title":"State Management","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/concepts-state/","weight":20,"wordcount":100},{"author":null,"date":1563305010,"description":"Overview of the organization and architecture of the Firestarter demo app.","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"221048f2bf4416aa074b78539f574cf9","permalink":"https://fireship.io/courses/angular/app-primer/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/app-primer/","section":"courses","summary":"Recommended: Clone the source code as a reference.\nStart a New Project Start a new project and make sure to use routing and scss for styles.\ncommand line ng new firestarter ","tags":null,"title":"App Overview","type":"courses","url":"https://fireship.io/courses/angular/app-primer/","weight":20,"wordcount":31},{"author":null,"date":1555434750,"description":"User-to-user follows and follower feeds","dir":"courses/firestore-data-modeling/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"708fd3a3e35e2c728e9452365d8f4afd","permalink":"https://fireship.io/courses/firestore-data-modeling/models-social-feed/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/models-social-feed/","section":"courses","summary":"The code below uses this data model to follow/unfollow users \u0026amp; query the most recent posts from users that are being followed.\nfile_type_js firestore.js import { db } from \u0026#39;./config\u0026#39;; import firebase from \u0026#39;firebase/app; const remove = firebase.firestore.FieldValue.arrayRemove; const union = firebase.firestore.FieldValue.arrayUnion; export const follow = (followed, follower) =\u0026gt; { const followersRef = db.collection(\u0026#39;followers\u0026#39;).doc(followed); followersRef.update({ users: union(follower) }); } // 2. Unfollow User export const unfollow = (followed, follower) =\u0026gt; { const followersRef = db.","tags":null,"title":"Follower Feed","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/models-social-feed/","weight":20,"wordcount":134},{"author":null,"date":1551285150,"description":"Build a Storage Function for Resizing Images","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"1122dfafe9e5840d65af94ab274b1822","permalink":"https://fireship.io/courses/cloud-functions/storage-resizer/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/storage-resizer/","section":"courses","summary":"","tags":null,"title":"Resizing Images","type":"courses","url":"https://fireship.io/courses/cloud-functions/storage-resizer/","weight":20,"wordcount":0},{"author":null,"date":1668972210,"description":"How to connect to the Supabase client","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"460d475beb4f957c6101c04cf4aedc1f","permalink":"https://fireship.io/courses/supabase/app-client/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-client/","section":"courses","summary":"Command to install Supabase React Auth helper:\nyarn add @supabase/auth-ui-react Command to install Supabase JS Client:\nyarn add @supabase/supabase-js supa-client.ts\nimport { createClient } from \u0026#34;@supabase/supabase-js\u0026#34;; const supabaseUrl = (import.meta as any).env.VITE_SUPABASE_API_URL; const supabaseKey = (import.meta as any).env.VITE_SUPABASE_ANON_KEY; export const supaClient = createClient(supabaseUrl, supabaseKey); Supabase JS Client Reference Docs: https://supabase.com/docs/reference/javascript","tags":null,"title":"Connect to Supabase","type":"courses","url":"https://fireship.io/courses/supabase/app-client/","weight":21,"wordcount":50},{"author":null,"date":1668972210,"description":"Add a database table for usernames","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"1d177dfa9271483e1775894093678978","permalink":"https://fireship.io/courses/supabase/app-tables/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-tables/","section":"courses","summary":" Which Postgres constraint is used to match against a regular expression? Resources Command to create a migration file from your current local Supabase state:\nnpx supabase db diff --use-migra --file=\u0026lt;name of the migration\u0026gt; SQL to create our user profile table:\ncreate table user_profiles ( user_id uuid primary key references auth.users (id) not null, username text unique not null CONSTRAINT proper_username CHECK (username ~* \u0026#39;^[a-zA-Z0-9_]+$\u0026#39;) CONSTRAINT username_length CHECK (char_length(username) \u0026gt; 3 and char_length(username) \u0026lt; 15) ); ","tags":null,"title":"Database Tables","type":"courses","url":"https://fireship.io/courses/supabase/app-tables/","weight":21,"wordcount":75},{"author":null,"date":1668194610,"description":"Use destructuring to work with objects with ease.","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"196481ebfff00079f15af8b260b7aae0","permalink":"https://fireship.io/courses/js/102-destructuring/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-destructuring/","section":"courses","summary":" What is the name of the variable declared below? const { foo: bar } = { foo: 23 } Destructuring Examples // Object destructuring const person = { name: \u0026#39;John\u0026#39;, age: 32, city: \u0026#39;New York\u0026#39;, country: \u0026#39;USA\u0026#39; }; const { name, age } = person; // Object destructuring with alias const { name: firstName, age: years } = person; // Array destructuring const fruits = [\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;orange\u0026#39;]; const [first, second, third] = fruits; ","tags":null,"title":"Destructuring","type":"courses","url":"https://fireship.io/courses/js/102-destructuring/","weight":21,"wordcount":74},{"author":null,"date":1645560690,"description":"Build a simple HTTP server with Node.js","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"7919d4026fd0098a37c29aaa868ae1c2","permalink":"https://fireship.io/courses/react/1-express-server/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/1-express-server/","section":"courses","summary":"Additional Learning CORS in 100 Seconds REST in 100 Seconds Complete Server Code file_type_js index.js import express from \u0026#39;express\u0026#39;; import cors from \u0026#39;cors\u0026#39;; // Initialize the express app const app = express(); app.use(cors()); app.use(express.json()); // Make some animals import Chance from \u0026#39;chance\u0026#39;; const chance = new Chance(); const animals = [...Array(250).keys()].map(id =\u0026gt; { return { id, type: chance.animal(), age: chance.age(), name: chance.name(), } }); // Endpoint to search for animals app.","tags":null,"title":"Express Server","type":"courses","url":"https://fireship.io/courses/react/1-express-server/","weight":21,"wordcount":101},{"author":null,"date":1636658610,"description":"Create an Angular Service to simplify database business logic","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a559745e9c9cdb40dd47ee06086a8eb1","permalink":"https://fireship.io/courses/ionic/app-database-service/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-database-service/","section":"courses","summary":"","tags":null,"title":"Database Service","type":"courses","url":"https://fireship.io/courses/ionic/app-database-service/","weight":21,"wordcount":0},{"author":null,"date":1636658610,"description":"Wrap a block of HTML with a new parent tag","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"cab5175bbc2576fceead9d4482e74eaa","permalink":"https://fireship.io/courses/vscode-tricks/tip-emmet-wrap/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-emmet-wrap/","section":"courses","summary":"✨ Trick - Balance Outward Put your cursor inside some HTML, then use the command Emmet: Balance Outward to select the outermost tag.\n✨ Trick - Wrap with Abbreviation Ever wanted to wrap a block of HTML with a new parent tag? Just select the block of HTML you want to wrap, then use the command Emmet: Wrap with Abbreviation to place a new tag around it.","tags":null,"title":"Emmet Wrap Abbreviation","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-emmet-wrap/","weight":21,"wordcount":67},{"author":null,"date":1636658610,"description":"Add Firebase to Flutter for iOS \u0026 Android","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a0cba9aa2800678a0998ca16433316b0","permalink":"https://fireship.io/courses/flutter-firebase/project-firebase-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/project-firebase-setup/","section":"courses","summary":"Tasks Create a Firebase Project Add an iOS app to your project Add an Android app to your project Use the keytool to generate an SHA Certificate. See my Flutter Firebase SHA guide if you get stuck at this part. Also reference the latest Official FlutterFire Setup Docs\nHow to Get SHA-1 Certificate Get the SHA1 certificate from the Android app.\ncommand line cd android ./gradlew signingReport Copy the SHA-1 value and paste it into the Firebase Android App config.","tags":null,"title":"Firebase setup","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-firebase-setup/","weight":21,"wordcount":283},{"author":null,"date":1636658610,"description":"How to structure a complex Flutter app","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"023e9e87c8364c8ba92799a674f850c6","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-organization/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-organization/","section":"courses","summary":" screens/ contains the app\u0026rsquo;s main UI features. shared/ contains the app\u0026rsquo;s shared UI, like navigation menus and loading indicators. services/ contains the app\u0026rsquo;s shared business logic, like user auth and database code. ","tags":null,"title":"Project Organization","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-organization/","weight":21,"wordcount":32},{"author":null,"date":1633723890,"description":"Review common operators in Dart","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"6ae1a44e40d7de08eeae05ca6ff8084d","permalink":"https://fireship.io/courses/dart/syntax-operators/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/syntax-operators/","section":"courses","summary":"Let\u0026rsquo;s take a look at some of the more interesting operators in Dart.\nAssignment Use the assignment operator to assign a value to a variable, ONLY if it\u0026rsquo;s not already assigned.\nfile_type_dartlang main.dart String? name; name ??= \u0026#39;Guest\u0026#39;; var z = name ?? \u0026#39;Guest\u0026#39;; Ternary Operator Use a ternary to replace the if/else statement.\nfile_type_dartlang main.dart String color = \u0026#39;blue\u0026#39;; var isThisBlue = color == \u0026#39;blue\u0026#39; ? \u0026#39;Yep, blue it is\u0026#39; : \u0026#39;Nah, it aint blue\u0026#39;; Cascade Use the cascade operator to call methods on an object without having to create a new line of code.","tags":null,"title":"Operators","type":"courses","url":"https://fireship.io/courses/dart/syntax-operators/","weight":21,"wordcount":178},{"author":null,"date":1630869810,"description":"Upload local code to GitHub","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"f094697208ee5daf4142e95ced7303f3","permalink":"https://fireship.io/courses/git/remote-push/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/remote-push/","section":"courses","summary":"git push is kinda like saying... Use git push to upload your local code to GitHub.\ncommand line git push origin master Note: the -u flag is used to set origin as the upstream remote in your git config so git pull can be used without any arguments in the future.","tags":null,"title":"git push","type":"courses","url":"https://fireship.io/courses/git/remote-push/","weight":21,"wordcount":51},{"author":null,"date":1612207410,"description":"Authenticate via OAuth with Google SignIn","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"3b76dc00320758e989aabb637cdae126","permalink":"https://fireship.io/courses/react-next-firebase/auth-google-signin/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/auth-google-signin/","section":"courses","summary":"What mechanism does Firebase use to manage the authentication state on the server? Google Auth Provider file_type_js lib/firebase.js export const googleAuthProvider = new firebase.auth.GoogleAuthProvider(); SignIn Button file_type_js pages/enter.js import { auth, googleAuthProvider } from \u0026#39;../lib/firebase\u0026#39;; export default function Enter(props) { const user = null; const username = null; // 1. user signed out \u0026lt;SignInButton /\u0026gt; // 2. user signed in, but missing username \u0026lt;UsernameForm /\u0026gt; // 3. user signed in, has username \u0026lt;SignOutButton /\u0026gt; return ( \u0026lt;main\u0026gt; {user ?","tags":null,"title":"Google SignIn","type":"courses","url":"https://fireship.io/courses/react-next-firebase/auth-google-signin/","weight":21,"wordcount":147},{"author":null,"date":1605874290,"description":"What operations can you allow in Firestore?","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"7f03e23a39c7fd7cb5553bbaca1733ff","permalink":"https://fireship.io/courses/firebase-security/basics-allow/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/basics-allow/","section":"courses","summary":" file_type_firebase firestore.rules match /users/{docId=**} { allow read, write; allow get; allow list; allow create; allow update; allow delete; } ","tags":null,"title":"Allow - Read, Write, \u0026 Beyond","type":"courses","url":"https://fireship.io/courses/firebase-security/basics-allow/","weight":21,"wordcount":19},{"author":null,"date":1587410610,"description":"Create a checkout session on the server","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"ce99d5d94d039ee7f7c07379dfe33675","permalink":"https://fireship.io/courses/stripe-js/checkout-server/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/checkout-server/","section":"courses","summary":"Stripe Checkout on the Server file_type_typescript checkout.ts import { stripe } from \u0026#39;./\u0026#39;; import Stripe from \u0026#39;stripe\u0026#39;; /** * Creates a Stripe Checkout session with line items */ export async function createStripeCheckoutSession( line_items: Stripe.Checkout.SessionCreateParams.LineItem[] ) { const url = \u0026#39;http://localhost:3000\u0026#39;; //process.env.WEBAPP_URL; const session = await stripe.checkout.sessions.create({ payment_method_types: [\u0026#39;card\u0026#39;], line_items, success_url: `${url}/success?session_id={CHECKOUT_SESSION_ID}`, cancel_url: `${url}/failed`, }); return session; } API Endpoint file_type_typescript api.ts /** * Catch async errors when awaiting promises */ function runAsync(callback: Function) { return (req: Request, res: Response, next: NextFunction) =\u0026gt; { callback(req, res, next).","tags":null,"title":"Stripe Checkout on the Server","type":"courses","url":"https://fireship.io/courses/stripe-js/checkout-server/","weight":21,"wordcount":107},{"author":null,"date":1585769010,"description":"React to changes to the Firebase User Auth State","dir":"courses/vue/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"273cd5b9d73beacf1d56bb8b5f3b5ddf","permalink":"https://fireship.io/courses/vue/auth-state/","publishdate":"0001-01-01T00:00:00Z","readingtime":5,"relpermalink":"/courses/vue/auth-state/","section":"courses","summary":"Opt-in to the Composition API command line npm i @vue/composition-api Register it as a plugin\nfile_type_js main.js import VueCompositionApi from \u0026#39;@vue/composition-api\u0026#39; Vue.use(VueCompositionApi) User Component User.vue \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;slot name=\u0026#34;user\u0026#34; :user=\u0026#34;user\u0026#34;\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { auth } from \u0026#39;../firebase\u0026#39;; import { ref } from \u0026#39;@vue/composition-api\u0026#39;; export default { setup() { const user = ref(null); const unsubscribe = auth.onAuthStateChanged( firebaseUser =\u0026gt; user.value = firebaseUser ); return { user, unsubscribe, } }, unmounted() { this.","tags":null,"title":"Realtime Auth State","type":"courses","url":"https://fireship.io/courses/vue/auth-state/","weight":21,"wordcount":950},{"author":null,"date":1563305010,"description":"Introduction to Angular Material and design systems","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"f54d4193a359834d6424067162dfb06c","permalink":"https://fireship.io/courses/angular/app-material/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/app-material/","section":"courses","summary":"We\u0026rsquo;re ready to start building the app! It\u0026rsquo;s ideal to kick off any new project with a solid foundation for design. An app that looks good from the day one will keep you happy and motivated throughout the development process.\nSteps Step 1 - Install Angular Material Install Angular Material command line ng add @angular/material Step 2 - Customize your Theme Colors (Optional) Customize your Theme Generate a Color Pallette Example of a custom color pallette.","tags":null,"title":"Meet Angular Material","type":"courses","url":"https://fireship.io/courses/angular/app-material/","weight":21,"wordcount":144},{"author":null,"date":1555434750,"description":"Five Firestore Data Modeling Techniques from the Course","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1555434750,"objectID":"e05d48e2dd13168b7ed8e2782c56ca4e","permalink":"https://fireship.io/courses/firestore-data-modeling/bonus-top-five/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firestore-data-modeling/bonus-top-five/","section":"courses","summary":"","tags":null,"title":"Top Five","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/bonus-top-five/","weight":21,"wordcount":0},{"author":null,"date":1551285150,"description":"How Callable Functions Work in Firebase","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"5fd5b40112ec8a0cff15c1716dededac","permalink":"https://fireship.io/courses/cloud-functions/callable-intro/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/callable-intro/","section":"courses","summary":"","tags":null,"title":"Intro to Callable Functions","type":"courses","url":"https://fireship.io/courses/cloud-functions/callable-intro/","weight":21,"wordcount":0},{"author":null,"date":1668972210,"description":"What is Row Level Security in Supabase?","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"3ba9cf10eab9776c4b19051fe5384fb5","permalink":"https://fireship.io/courses/supabase/app-rls/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-rls/","section":"courses","summary":"Supabase docs on RLS: https://supabase.com/docs/guides/auth/row-level-security","tags":null,"title":"Row Level Security","type":"courses","url":"https://fireship.io/courses/supabase/app-rls/","weight":22,"wordcount":5},{"author":null,"date":1668194610,"description":"Use the spread syntax to combine objects","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"139664c4e08d704a8545e1c0e5b36342","permalink":"https://fireship.io/courses/js/102-spread/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-spread/","section":"courses","summary":"What is the value of property foo below? const obj = { foo: 1, bar: 2, baz: 3 }; const newObj = { foo: 4 ...obj, }; Spread Syntax The spread syntax ... is a relatively new operator that was introduced in ES2018. It provides a concise way to combine objects and arrays.\nconst obj = { foo: 1, bar: 2, baz: 3 }; const newObj = { foo: 4 .","tags":null,"title":"Spread","type":"courses","url":"https://fireship.io/courses/js/102-spread/","weight":22,"wordcount":105},{"author":null,"date":1645560690,"description":"Make requests to the server and show the results","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"93b01cf9b71293bb608db98a0c199a6e","permalink":"https://fireship.io/courses/react/1-react-search/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/1-react-search/","section":"courses","summary":"Additional Learning React Hooks Tutorial\nComplete Code App.js import { useEffect, useState } from \u0026#39;react\u0026#39;; function App() { const { search, animals } = useAnimalSearch(); return ( \u0026lt;main\u0026gt; \u0026lt;h1\u0026gt;Animal Farm\u0026lt;/h1\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Search\u0026#34; onChange={(e) =\u0026gt; search(e.target.value)} /\u0026gt; \u0026lt;ul\u0026gt; {animals.map((animal) =\u0026gt; ( \u0026lt;Animal key={animal.id} {...animal} /\u0026gt; ))} {animals.length === 0 \u0026amp;\u0026amp; \u0026#39;No animals found\u0026#39;} \u0026lt;/ul\u0026gt; \u0026lt;/main\u0026gt; ); } // Dumb UI component function Animal({ type, name, age }) { return ( \u0026lt;li\u0026gt; \u0026lt;strong\u0026gt;{type}\u0026lt;/strong\u0026gt; {name} ({age} years old) \u0026lt;/li\u0026gt; ); } // Custom Hook function useAnimalSearch() { const [animals, setAnimals] = useState([]); useEffect(() =\u0026gt; { const lastQuery = localStorage.","tags":null,"title":"Search Frontend","type":"courses","url":"https://fireship.io/courses/react/1-react-search/","weight":22,"wordcount":137},{"author":null,"date":1636658610,"description":"How to query the database","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f23ec41894adaca5af2dd4ad7eb4a7cf","permalink":"https://fireship.io/courses/ionic/app-query/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-query/","section":"courses","summary":"","tags":null,"title":"Firestore Queries","type":"courses","url":"https://fireship.io/courses/ionic/app-query/","weight":22,"wordcount":0},{"author":null,"date":1636658610,"description":"How to structure a complex Flutter app","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"db885483e84ea719d5d584a19a28fbc4","permalink":"https://fireship.io/courses/flutter-firebase/project-organization/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/project-organization/","section":"courses","summary":"Task Create a directory and file for each screen in the app.\nabout home login profile quiz topics Provide each file with a Stateless Widget. For example:\nfile_type_flutter home.dart import \u0026#39;package:flutter/material.dart\u0026#39;; class HomeScreen extends StatelessWidget { const HomeScreen({ Key? key }) : super(key: key); @override Widget build(BuildContext context) { return Scaffold( ); } } Project Structure login/, quiz/, etc. contains the app\u0026rsquo;s main UI features or screens. shared/ contains the app\u0026rsquo;s shared UI, like navigation menus and loading indicators.","tags":null,"title":"Project Organization","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-organization/","weight":22,"wordcount":92},{"author":null,"date":1636658610,"description":"Configure Flutter screen routing for Firebase Analytics","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"412610c617953c52f208f93bdfa58fea","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-routing-analytics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-routing-analytics/","section":"courses","summary":"Firebase Analytics and Routing Add Firebase Analytics to keep track of the user\u0026rsquo;s navigation between screens.\nfile_type_dartlang main.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:firebase_analytics/observer.dart\u0026#39;; import \u0026#39;package:firebase_analytics/firebase_analytics.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( // Firebase Analytics navigatorObservers: [ FirebaseAnalyticsObserver(analytics: FirebaseAnalytics()), ], routes: { \u0026#39;/\u0026#39;: (context) =\u0026gt; LoginScreen(), \u0026#39;/topics\u0026#39;: (context) =\u0026gt; TopicsScreen(), \u0026#39;/profile\u0026#39;: (context) =\u0026gt; ProfileScreen(), \u0026#39;/about\u0026#39;: (context) =\u0026gt; AboutScreen(), }, // Theme theme: ThemeData( // your customizations here brightness: Brightness.","tags":null,"title":"Routing \u0026 Firebase Analytics","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-routing-analytics/","weight":22,"wordcount":82},{"author":null,"date":1636658610,"description":"Create custom snippets or code templates","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"fd2abd2b1533f2301be1e7d9cadbf0cd","permalink":"https://fireship.io/courses/vscode-tricks/tip-snippets/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-snippets/","section":"courses","summary":"✨ Trick - Custom Snippets Open the command palette and create a new Global Snippets file. Inside the file, you create custom snippets with JSON that can be inserted by typing the prefix in the editor.","tags":null,"title":"Snippets","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-snippets/","weight":22,"wordcount":36},{"author":null,"date":1633723890,"description":"First-class Functions and Functional Programming in Dart","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"2d2984dacc5f498bad3f3f00ec56268d","permalink":"https://fireship.io/courses/dart/syntax-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/syntax-functions/","section":"courses","summary":"Basic Functions Function with positional parameters:\nfile_type_dartlang functions.dart // Basic Function String takeFive(int number) { return \u0026#39;$number minus five equals ${number - 5}\u0026#39;; } Function with named parameters:\nfile_type_dartlang functions.dart // Named parameters namedParams({required int a, int b = 5}) { return a - b; } namedParams(a: 23, b: 10); Arrow Functions Arrow functions are useful when passing functions as parameters to other functions.\nfile_type_dartlang functions.dart // Arrow Function String takeFive(int number) =\u0026gt; \u0026#39;$number minus five equals ${number - 5}\u0026#39;; Callback Functions Many APIs in Dart use callback functions, often to handle events or gestures in Flutter.","tags":null,"title":"Functions","type":"courses","url":"https://fireship.io/courses/dart/syntax-functions/","weight":22,"wordcount":113},{"author":null,"date":1630869810,"description":"Merge code from two different sources","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"d7c6af7d85d7309e4f69a4d8bee12270","permalink":"https://fireship.io/courses/git/remote-merge/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/remote-merge/","section":"courses","summary":" What is the most common merge strategy? Fetch and merge code from the remote repository.\ncommand line git fetch git merge origin/master ","tags":null,"title":"git merge","type":"courses","url":"https://fireship.io/courses/git/remote-merge/","weight":22,"wordcount":22},{"author":null,"date":1612207410,"description":"Manage the global auth state with the React Context API","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"9172b0c662ff297edcc4fc7a84f07e33","permalink":"https://fireship.io/courses/react-next-firebase/auth-context/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/auth-context/","section":"courses","summary":"Create Context Learn more about React Context.\nfile_type_js lib/context.js import { createContext } from \u0026#39;react\u0026#39;; export const UserContext = createContext({ user: null, username: null }); Provide Context file_type_js pages/_app.js import { UserContext } from \u0026#39;../lib/context\u0026#39;; function MyApp({ Component, pageProps }) { return ( \u0026lt;UserContext.Provider value={{ user: {}, username: \u0026#39;jeff\u0026#39; }}\u0026gt; \u0026lt;Navbar /\u0026gt; \u0026lt;Component {...pageProps} /\u0026gt; \u0026lt;Toaster /\u0026gt; \u0026lt;/UserContext.Provider\u0026gt; ); } Consume Context file_type_js components/Navbar.js import { useContext } from \u0026#39;react\u0026#39;; import { UserContext } from \u0026#39;.","tags":null,"title":"Auth Context","type":"courses","url":"https://fireship.io/courses/react-next-firebase/auth-context/","weight":22,"wordcount":119},{"author":null,"date":1605874290,"description":"Syntax for conditions found in Firebase Security rules","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"39d08ecb02a1c17867a505895e0acbd7","permalink":"https://fireship.io/courses/firebase-security/basics-conditions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/basics-conditions/","section":"courses","summary":"See the full Firestore Rules Operators List","tags":null,"title":"Conditions","type":"courses","url":"https://fireship.io/courses/firebase-security/basics-conditions/","weight":22,"wordcount":7},{"author":null,"date":1585769010,"description":"Create a user profile where the user can sign out","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"3e2ed8c3547956c0b01da5691c7751e9","permalink":"https://fireship.io/courses/vue/auth-signout/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/auth-signout/","section":"courses","summary":"User Profile Component UserProfile.vue \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; Logged in as {{ user.uid }}\u0026lt;br\u0026gt; \u0026lt;button @click=\u0026#34;auth.signOut()\u0026#34; class=\u0026#34;button\u0026#34;\u0026gt;Sign Out\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { auth } from \u0026#39;../firebase\u0026#39;; export default { data() { return { auth } }, props: [\u0026#39;user\u0026#39;] } \u0026lt;/script\u0026gt; ","tags":null,"title":"User Profile","type":"courses","url":"https://fireship.io/courses/vue/auth-signout/","weight":22,"wordcount":39},{"author":null,"date":1563305010,"description":"Using Angular Material Schematics","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"a4edd2bcff644453d1ed92234c9a8626","permalink":"https://fireship.io/courses/angular/app-schematics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/app-schematics/","section":"courses","summary":"Schematics provide sophisticated code blueprints using the Angular CLI, with many recipes included for Angular Material.\nFor example, you could replace the component command from the last video with:\ncommand line ng generate @angular/material:nav shared/shell ","tags":null,"title":"Schematics","type":"courses","url":"https://fireship.io/courses/angular/app-schematics/","weight":22,"wordcount":35},{"author":null,"date":1558026750,"description":"New feature alert! Query across multiple subcollections.","dir":"courses/firestore-data-modeling/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1558026750,"objectID":"d138930a3aee4dbda34a4ab75e8bcdca","permalink":"https://fireship.io/courses/firestore-data-modeling/bonus-collection-group/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firestore-data-modeling/bonus-collection-group/","section":"courses","summary":"","tags":null,"title":"Collection Group Queries","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/bonus-collection-group/","weight":22,"wordcount":0},{"author":null,"date":1551285150,"description":"Send an SMS Text Message from a Callable Function","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"2d536a2a46b66aa0c537de67cd868a0c","permalink":"https://fireship.io/courses/cloud-functions/callable-sms/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/callable-sms/","section":"courses","summary":"","tags":null,"title":"Send SMS Texts","type":"courses","url":"https://fireship.io/courses/cloud-functions/callable-sms/","weight":22,"wordcount":0},{"author":null,"date":1668972210,"description":"How to enable Row Level Security","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"057101bd5879dc33b414a5069d561063","permalink":"https://fireship.io/courses/supabase/app-rls-enable/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-rls-enable/","section":"courses","summary":"Turning on RLS via SQL:\nalter table \u0026lt;table name\u0026gt; enable row level security RLS Policies for the user_profile table:\nCREATE POLICY \u0026#34;all can see\u0026#34; ON \u0026#34;public\u0026#34;.\u0026#34;user_profiles\u0026#34; AS PERMISSIVE FOR SELECT TO public USING (true); CREATE POLICY \u0026#34;users can insert\u0026#34; ON \u0026#34;public\u0026#34;.\u0026#34;user_profiles\u0026#34; AS PERMISSIVE FOR INSERT TO public WITH CHECK (auth.uid() = user_id); CREATE POLICY \u0026#34;owners can update\u0026#34; ON \u0026#34;public\u0026#34;.\u0026#34;user_profiles\u0026#34; AS PERMISSIVE FOR UPDATE TO public USING (auth.uid()=user_id) WITH CHECK (auth.uid()=user_id); ","tags":null,"title":"Enable RLS","type":"courses","url":"https://fireship.io/courses/supabase/app-rls-enable/","weight":23,"wordcount":70},{"author":null,"date":1668194610,"description":"Call object properties safely","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"08e2c903b7b0dff8e872306c6fe1decc","permalink":"https://fireship.io/courses/js/102-optional-chaining/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-optional-chaining/","section":"courses","summary":"What is the return value when calling a property that does not exist with optional chaining? Optional Chaining Optional chaining ? is a relatively new operator that was introduced in ES2020. It allows you to call object properties safely, without throwing an error. When calling properties without this operator, you many crash your applcation with the error Cannot read property 'foo' of undefined.\nconst person = { }; const dude = person.","tags":null,"title":"Optional Chaining","type":"courses","url":"https://fireship.io/courses/js/102-optional-chaining/","weight":23,"wordcount":88},{"author":null,"date":1636658610,"description":"Create a shared bottom navigation bar","dir":"courses/flutter-firebase-v1/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"776e21fb438a693bc578fe1069a8fb1d","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-bottom-nav/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-bottom-nav/","section":"courses","summary":"About Screen Create a basic screen.\nfile_type_dartlang about.dart import \u0026#39;package:flutter/material.dart\u0026#39;; class AboutScreen extends StatelessWidget { @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(\u0026#39;about\u0026#39;), backgroundColor: Colors.blue, ), body: Center( child: Text(\u0026#39;About this app...\u0026#39;), ), ); } } Export the Widgets You can export all your screens together using the following pattern:\nfile_type_dartlang screens.dart export \u0026#39;login.dart\u0026#39;; export \u0026#39;topics.dart\u0026#39;; export \u0026#39;quiz.dart\u0026#39;; export \u0026#39;profile.dart\u0026#39;; export \u0026#39;about.dart\u0026#39;; You can then use them in other project files like so: import 'screens/screens.","tags":null,"title":"Bottom Navigation Bar","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-bottom-nav/","weight":23,"wordcount":175},{"author":null,"date":1636658610,"description":"Use AI to intelligently autocomplete your code","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"4628875f68da624b469e8847932aa061","permalink":"https://fireship.io/courses/vscode-tricks/tip-copilot/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-copilot/","section":"courses","summary":"✨ Trick - AI-driven Development Install the Github Copilot extension and let the magic happen!\nBonus Video ","tags":null,"title":"Github Copilot","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-copilot/","weight":23,"wordcount":17},{"author":null,"date":1636658610,"description":"Iterate over async realtime data","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"288ed1d28ff4b0256ee3a9711a46c658","permalink":"https://fireship.io/courses/ionic/app-loop/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-loop/","section":"courses","summary":"","tags":null,"title":"Observable Loop","type":"courses","url":"https://fireship.io/courses/ionic/app-loop/","weight":23,"wordcount":0},{"author":null,"date":1636658610,"description":"Configure named routes for each screen","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e1346130a1c1d116831b4fb3a3a94f97","permalink":"https://fireship.io/courses/flutter-firebase/project-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/project-routing/","section":"courses","summary":"Routing Configuration Create a file named routes.dart in the lib directory of your project.\nfile_type_dartlang routes.dart import \u0026#39;package:quizapp/about/about.dart\u0026#39;; import \u0026#39;package:quizapp/profile/profile.dart\u0026#39;; import \u0026#39;package:quizapp/login/login.dart\u0026#39;; import \u0026#39;package:quizapp/topics/topics.dart\u0026#39;; import \u0026#39;package:quizapp/home/home.dart\u0026#39;; var appRoutes = { \u0026#39;/\u0026#39;: (context) =\u0026gt; const HomeScreen(), \u0026#39;/login\u0026#39;: (context) =\u0026gt; const LoginScreen(), \u0026#39;/topics\u0026#39;: (context) =\u0026gt; const TopicsScreen(), \u0026#39;/profile\u0026#39;: (context) =\u0026gt; const ProfileScreen(), \u0026#39;/about\u0026#39;: (context) =\u0026gt; const AboutScreen(), }; Register the appRoutes with the MaterialApp in the main.dart file.\nfile_type_dartlang main.dart import \u0026#39;package:quizapp/routes.dart\u0026#39;; // .","tags":null,"title":"Routing","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-routing/","weight":23,"wordcount":161},{"author":null,"date":1633723890,"description":"Use the array-like Dart List to manage a collection of objects","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"6a371f6748a2da3a4663f21085152efe","permalink":"https://fireship.io/courses/dart/syntax-list/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/syntax-list/","section":"courses","summary":"Basic Lists file_type_dartlang lists.dart List\u0026lt;int\u0026gt; list = [1, 2, 3, 4, 5]; list[0]; // 1 list.length; // 5 list.last; // 5 list.first; // 1 Loops file_type_dartlang lists.dart for (int n in list) { print(n); } list.forEach((n) =\u0026gt; print(n)); var doubled = list.map((n) =\u0026gt; n * 2); Spread Syntax file_type_dartlang lists.dart var combined = [...list, ...doubled]; combined.forEach(print); Conditions in Lists file_type_dartlang lists.dart bool depressed = false; var cart = [ \u0026#39;milk\u0026#39;, \u0026#39;eggs\u0026#39;, if (depressed) \u0026#39;Vodka\u0026#39; ]; ","tags":null,"title":"List","type":"courses","url":"https://fireship.io/courses/dart/syntax-list/","weight":23,"wordcount":75},{"author":null,"date":1630869810,"description":"Fetch and merge changes from a remote repository","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"48f13eb8579b37e70bc372beea64e998","permalink":"https://fireship.io/courses/git/remote-pull/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/remote-pull/","section":"courses","summary":" What is a common alternative to git pull? Combine the fetch \u0026amp; merge from the previous section with the pull command.\ncommand line git pull ","tags":null,"title":"git pull","type":"courses","url":"https://fireship.io/courses/git/remote-pull/","weight":23,"wordcount":25},{"author":null,"date":1612207410,"description":"Join Firestore data to the current user with a custom react hook","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"81b9510b0538adcda8cdf6c0e8ee4c13","permalink":"https://fireship.io/courses/react-next-firebase/auth-hook/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/auth-hook/","section":"courses","summary":"Custom User Data Hook Use this hook to read the current Firebase User, then use the uid to fetch the public profile document from Firestore.\nfile_type_js lib/hooks.js import { auth, firestore } from \u0026#39;../lib/firebase\u0026#39;; import { useEffect, useState } from \u0026#39;react\u0026#39;; import { useAuthState } from \u0026#39;react-firebase-hooks/auth\u0026#39;; // Custom hook to read auth record and user profile doc export function useUserData() { const [user] = useAuthState(auth); const [username, setUsername] = useState(null); useEffect(() =\u0026gt; { // turn off realtime subscription let unsubscribe; if (user) { const ref = firestore.","tags":null,"title":"Auth Hook","type":"courses","url":"https://fireship.io/courses/react-next-firebase/auth-hook/","weight":23,"wordcount":147},{"author":null,"date":1605874290,"description":"Simple, yet useful Firestore rules examples","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"6dd7d0836ae93da9c31dccbd6db21956","permalink":"https://fireship.io/courses/firebase-security/basics-examples/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/basics-examples/","section":"courses","summary":" file_type_firebase firestore.rules match /users/{userId} { allow read: if request.auth.uid != null; allow write: if request.auth.uid == userId; } match /todos/{docId} { allow read: if resource.data.status == \u0026#39;published\u0026#39;; allow create: if request.auth.uid == request.resource.data.uid \u0026amp;\u0026amp; request.time == request.resource.data.createdAt; allow update: if request.auth.uid == resource.data.uid \u0026amp;\u0026amp; request.resource.data.keys().hasOnly([\u0026#39;text\u0026#39;, \u0026#39;status\u0026#39;]); } ","tags":null,"title":"Common Examples","type":"courses","url":"https://fireship.io/courses/firebase-security/basics-examples/","weight":23,"wordcount":47},{"author":null,"date":1587410610,"description":"Complete a checkout session and redirect to a success or fail page","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"ee2396a60fd50a57bf83a13870431572","permalink":"https://fireship.io/courses/stripe-js/checkout-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/checkout-react/","section":"courses","summary":"API Fetch Helper file_type_js helpers.js const API = \u0026#39;http://localhost:3333\u0026#39;; /** * A helper function to fetch data from your API. */ export async function fetchFromAPI(endpointURL, opts) { const { method, body } = { method: \u0026#39;POST\u0026#39;, body: null, ...opts }; const res = await fetch(`${API}/${endpointURL}`, { method, ...(body \u0026amp;\u0026amp; { body: JSON.stringify(body) }), headers: { \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;, }, }); return res.json(); } Checkout Component App.js import React, { useState } from \u0026#39;react\u0026#39;; import { fetchFromAPI } from \u0026#39;.","tags":null,"title":"Checkout with React","type":"courses","url":"https://fireship.io/courses/stripe-js/checkout-react/","weight":23,"wordcount":214},{"author":null,"date":1585769010,"description":"Bind to forms in Vue to sign up with email \u0026 password","dir":"courses/vue/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"9ac70554794f3abbc4f006fe5854d68e","permalink":"https://fireship.io/courses/vue/auth-email-password/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/auth-email-password/","section":"courses","summary":"Login Component Login.vue \u0026lt;template\u0026gt; \u0026lt;aside class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Sign in Anonymously\u0026lt;/h3\u0026gt; \u0026lt;button class=\u0026#34;button\u0026#34; @click=\u0026#34;auth.signInAnonymously()\u0026#34;\u0026gt;Sign In\u0026lt;/button\u0026gt; \u0026lt;div v-if=\u0026#34;newUser\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Sign Up for a New Account\u0026lt;/h3\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; @click=\u0026#34;newUser = false\u0026#34;\u0026gt;Returning User?\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div v-else\u0026gt; \u0026lt;h3\u0026gt;Sign In with Email\u0026lt;/h3\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; @click=\u0026#34;newUser = true\u0026#34;\u0026gt;New user?\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;label for=\u0026#34;email\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;input v-model=\u0026#34;email\u0026#34; placeholder=\u0026#34;email\u0026#34; type=\u0026#34;email\u0026#34; class=\u0026#34;input\u0026#34; /\u0026gt; \u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;input v-model=\u0026#34;password\u0026#34; type=\u0026#34;password\u0026#34; class=\u0026#34;input\u0026#34; /\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;button class=\u0026#34;button is-info\u0026#34; :class=\u0026#34;{ \u0026#39;is-loading\u0026#39;: loading }\u0026#34; @click=\u0026#34;signInOrCreateUser()\u0026#34; \u0026gt;{{ newUser ?","tags":null,"title":"Email Password Authentication","type":"courses","url":"https://fireship.io/courses/vue/auth-email-password/","weight":23,"wordcount":152},{"author":null,"date":1563305010,"description":"Share component and Material Modules efficiently throughout the app","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"0c1718a18c09c2e306c0cd08774d55a2","permalink":"https://fireship.io/courses/angular/app-shared-module/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/app-shared-module/","section":"courses","summary":"Create a shared module to avoid duplicate imports and exports of common Angular Material features.\nThe SharedModule exports all declarations and modules so they can be consumed in other feature modules.\nSteps Step 1 - Create a Module command line ng g module shared Add it to the app module. It will be imported by all features in this app.\nfile_type_ng_component_ts app.module.ts import { SharedModule } from \u0026#39;./shared/shared.module\u0026#39;; @NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, AppRoutingModule, BrowserAnimationsModule, SharedModule // \u0026lt;-- here ], providers: [], bootstrap: [AppComponent] }) export class AppModule { } Step 2 - Consolidate Imports Avoid duplication by consolidating your imports with the the spread syntax.","tags":null,"title":"Shared Module","type":"courses","url":"https://fireship.io/courses/angular/app-shared-module/","weight":23,"wordcount":274},{"author":null,"date":1551285150,"description":"How to Call a Callable Function from your Frontend Code","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"db52c733bbcbd422a11faa4655591a65","permalink":"https://fireship.io/courses/cloud-functions/callable-frontend/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":1,"relpermalink":"/courses/cloud-functions/callable-frontend/","section":"courses","summary":" file_type_js foo.js document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { let app = firebase.app(); const sendText = firebase.functions().httpsCallable(\u0026#39;sendText\u0026#39;); sendText({ message: \u0026#39;Hello World!\u0026#39; }) }); ","tags":null,"title":"Call a Callable Function","type":"courses","url":"https://fireship.io/courses/cloud-functions/callable-frontend/","weight":23,"wordcount":19},{"author":null,"date":1668972210,"description":"How to generate TypeScript types from your Supabase database","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"f7774ba51d7a961c92a167f717884de2","permalink":"https://fireship.io/courses/supabase/app-typescript/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/app-typescript/","section":"courses","summary":"Command to generate typscript types:\nnpx supabase gen types typescript --local \u0026gt; ./src/database.types.ts ","tags":null,"title":"Generate Types","type":"courses","url":"https://fireship.io/courses/supabase/app-typescript/","weight":24,"wordcount":13},{"author":null,"date":1668194610,"description":"How nullish coalescing is realted to truthy and falsy values","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"b43a827201d2578a2d4fd1a93f9ea934","permalink":"https://fireship.io/courses/js/102-nullish-coalescing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-nullish-coalescing/","section":"courses","summary":" Which one of these values is truthy? Nullish Coalescing Nullish coalescing is a relativly new operator that was introduced in ES2020. It is similar to the logical OR operator ||, but it only returns the right-hand side if the left-hand side is null or undefined.\nconst foo = null ?? \u0026#39;bar\u0026#39;; console.log(foo); // \u0026#39;bar\u0026#39; const foo = 0 ?? \u0026#39;bar\u0026#39;; console.log(foo); // 0 ","tags":null,"title":"Nullish Coalescing","type":"courses","url":"https://fireship.io/courses/js/102-nullish-coalescing/","weight":24,"wordcount":63},{"author":null,"date":1636658610,"description":"Find references \u0026 implmentations of of a symbol","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"943cfa989d12ab9e2e054bbc4e794ae1","permalink":"https://fireship.io/courses/vscode-tricks/tip-find-refs/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-find-refs/","section":"courses","summary":"✨ Trick - Find References Right click on a symbol and select Peek References. This will show all other files that reference the symbol. This is generally more efficient than doing a global find.","tags":null,"title":"Find References","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-find-refs/","weight":24,"wordcount":34},{"author":null,"date":1636658610,"description":"Customize the Theme of the app","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"c9d4bebac8743778ae1b4f2fe4015752","permalink":"https://fireship.io/courses/flutter-firebase/project-themes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/project-themes/","section":"courses","summary":"Create a file named theme.dart in the root of the project\nExample Code file_type_flutter theme.dart import \u0026#39;package:flutter/material.dart\u0026#39;; var appTheme = ThemeData( bottomAppBarTheme: const BottomAppBarTheme( color: Colors.black87, ), brightness: Brightness.dark, textTheme: const TextTheme( bodyText1: TextStyle(fontSize: 18), bodyText2: TextStyle(fontSize: 16), button: TextStyle( letterSpacing: 1.5, fontWeight: FontWeight.bold, ), headline1: TextStyle( fontWeight: FontWeight.bold, ), subtitle1: TextStyle( color: Colors.grey, ), ), buttonTheme: const ButtonThemeData(), ); Apply it to the MaterialApp in the main.dart file\nfile_type_dartlang main.","tags":null,"title":"Themes","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-themes/","weight":24,"wordcount":80},{"author":null,"date":1636658610,"description":"Write data to the database","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6fb4b8308a357cdd672417c8d48d597a","permalink":"https://fireship.io/courses/ionic/app-update/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-update/","section":"courses","summary":"","tags":null,"title":"Update Data","type":"courses","url":"https://fireship.io/courses/ionic/app-update/","weight":24,"wordcount":0},{"author":null,"date":1633723890,"description":"Use the dictionary-like Dart Map to manage key-value pairs","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"e939ebe854bca9e9fd8b473ee08e0b7a","permalink":"https://fireship.io/courses/dart/syntax-map/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/syntax-map/","section":"courses","summary":"Basic Maps file_type_dartlang maps.dart Map\u0026lt;String, dynamic\u0026gt; book = { \u0026#39;title\u0026#39;: \u0026#39;Moby Dick\u0026#39;, \u0026#39;author\u0026#39;: \u0026#39;Herman Melville\u0026#39;, \u0026#39;pages\u0026#39;: 752, }; book[\u0026#39;title\u0026#39;]; book[\u0026#39;published\u0026#39;] = 1851; Loop over a Map file_type_dartlang maps.dart book.keys; book.values; book.values.toList(); for (MapEntry b in book.entries) { print(\u0026#39;Key ${b.key}, Value ${b.value}\u0026#39;); } book.forEach((k, v) =\u0026gt; print(\u0026#34;Key : $k, Value : $v\u0026#34;)); ","tags":null,"title":"Map","type":"courses","url":"https://fireship.io/courses/dart/syntax-map/","weight":24,"wordcount":51},{"author":null,"date":1630869810,"description":"Download a remote repository to a local directory","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"09be21e1077fcdd275f23c7f4b4b34ce","permalink":"https://fireship.io/courses/git/remote-clone/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/remote-clone/","section":"courses","summary":"git clone creates remote-tracking branches in the cloned repo? Clone a remote repository to your local machine and optionally change the name of the director\ncommand line git clone \u0026lt;repo-url\u0026gt; \u0026lt;local-directory\u0026gt; Practice Just for fun, clone this repo and run it on your local machine.","tags":null,"title":"git clone","type":"courses","url":"https://fireship.io/courses/git/remote-clone/","weight":24,"wordcount":45},{"author":null,"date":1563305010,"description":"Add a responsive navigation shell to the app","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"162b9401609751dbcbf8c9241a930b27","permalink":"https://fireship.io/courses/angular/app-shell/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/app-shell/","section":"courses","summary":"Add a basic navigation shell to the app and make it responsive on mobile.\nSteps Step 1 - Update the App Component Nesting components inside each other is known as transclusion.\nfile_type_html app.component.html \u0026lt;app-shell\u0026gt; \u0026lt;router-outlet\u0026gt;\u0026lt;/router-outlet\u0026gt; \u0026lt;/app-shell\u0026gt; Shell Breakpoint Logic Make your navigation responsive by listening to breakpoints.\nfile_type_ng_component_ts shell.component.ts import { Component } from \u0026#39;@angular/core\u0026#39;; import { BreakpointObserver, Breakpoints } from \u0026#39;@angular/cdk/layout\u0026#39;; import { Observable } from \u0026#39;rxjs\u0026#39;; import { map, shareReplay } from \u0026#39;rxjs/operators\u0026#39;; @Component({ selector: \u0026#39;app-shell\u0026#39;, templateUrl: \u0026#39;.","tags":null,"title":"App Navigation Shell","type":"courses","url":"https://fireship.io/courses/angular/app-shell/","weight":24,"wordcount":236},{"author":null,"date":1551285150,"description":"Additional Pro Tips for Working with Cloud Functions","dir":"courses/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1551285150,"objectID":"6f2f046dbcf0c8de078fa83ad8b61f68","permalink":"https://fireship.io/courses/cloud-functions/outro-pro-tips/","publishdate":"2019-02-27T09:32:30-07:00","readingtime":0,"relpermalink":"/courses/cloud-functions/outro-pro-tips/","section":"courses","summary":"","tags":null,"title":"Pro Tips","type":"courses","url":"https://fireship.io/courses/cloud-functions/outro-pro-tips/","weight":24,"wordcount":0},{"author":null,"date":1668194610,"description":"What is a higer order function or HOF?","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"c1da66bdbaa8245fdd517868010c035f","permalink":"https://fireship.io/courses/js/102-higher-order-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-higher-order-functions/","section":"courses","summary":" Which one is a function declaration? Higher Order Functions A higher order function is a function that takes a function as an argument, or returns a function. They are commonly used in functional programming, and are a powerful tool for abstracting away complexity.\n// A function that takes a function as an argument function add(x, y) { return x + y; } function subtract(x, y) { return x - y; } function math(x, y, operator) { return operator(x, y); } math(5, 2, add); // 7 ","tags":null,"title":"Higher Order Functions","type":"courses","url":"https://fireship.io/courses/js/102-higher-order-functions/","weight":25,"wordcount":85},{"author":null,"date":1636658610,"description":"Listen to custom events on an ion-segment","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"52b98b1b44ddbea54b3477016ec9331f","permalink":"https://fireship.io/courses/ionic/app-ion-segment/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-ion-segment/","section":"courses","summary":"","tags":null,"title":"Custom Events","type":"courses","url":"https://fireship.io/courses/ionic/app-ion-segment/","weight":25,"wordcount":0},{"author":null,"date":1636658610,"description":"Add and hot reload any font from Google Fonts","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"c1cee96a295d67750e951bca60f8fe59","permalink":"https://fireship.io/courses/flutter-firebase/project-google-fonts/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/project-google-fonts/","section":"courses","summary":"Add the Google Fonts package to your pubspec.yaml file.\nCustomize the Global Font file_type_flutter theme.dart import \u0026#39;package:google_fonts/google_fonts.dart\u0026#39;; var appTheme = ThemeData( fontFamily: GoogleFonts.nunito().fontFamily, // ... ); ","tags":null,"title":"Google Fonts","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-google-fonts/","weight":25,"wordcount":26},{"author":null,"date":1636658610,"description":"Rename all references to a variable or function in the project","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5ce82a1d4c2faa490dbd7aafe5abf15d","permalink":"https://fireship.io/courses/vscode-tricks/tip-safe-rename/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-safe-rename/","section":"courses","summary":"✨ Trick - Rename Symbol First, find the original implementation of a function or variable.\nNext, right click on a symbol and select Rename Symbol. This will rename the symbol and all references to it.","tags":null,"title":"Safe Rename","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-safe-rename/","weight":25,"wordcount":35},{"author":null,"date":1630869810,"description":"Run your repo on any machine with a cloud-powerd VS Code instance","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"9d76fbe8d7b1b2f778c94ff30909c14f","permalink":"https://fireship.io/courses/git/remote-codespaces/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/git/remote-codespaces/","section":"courses","summary":"","tags":null,"title":"GitHub Codespaces","type":"courses","url":"https://fireship.io/courses/git/remote-codespaces/","weight":25,"wordcount":0},{"author":null,"date":1612207410,"description":"Add custom usernames to Firebase users and asynchronously validate uniqueness","dir":"courses/react-next-firebase/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"51873a748eff61c790ed392f19b2354c","permalink":"https://fireship.io/courses/react-next-firebase/auth-custom-username/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/react-next-firebase/auth-custom-username/","section":"courses","summary":"How do you perform atomic writes in Firestore? Custom Username Form The form below asynchronously validates the existance of a Firestore document. Learn more with a full breakdown of Firebase custom usernames\nfile_type_js pages/enter.js import { auth, firestore, googleAuthProvider } from \u0026#39;../lib/firebase\u0026#39;; import { UserContext } from \u0026#39;../lib/context\u0026#39;; import { useEffect, useState, useCallback, useContext } from \u0026#39;react\u0026#39;; import debounce from \u0026#39;lodash.debounce\u0026#39;; export default function Enter(props) { const { user, username } = useContext(UserContext); // 1.","tags":null,"title":"Custom Usernames","type":"courses","url":"https://fireship.io/courses/react-next-firebase/auth-custom-username/","weight":25,"wordcount":460},{"author":null,"date":1563305010,"description":"Create a home page configured with the Angular Router.","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"a5f90a15c5195830105c74f4e5feca2d","permalink":"https://fireship.io/courses/angular/app-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/app-routing/","section":"courses","summary":"Learn routing basics in Angular and the usage of the routerLink directive in templates.\nSteps Step 1 - Generate a Component Generate home page component that is loaded by the router.\ncommand line ng g component home-page Step 2 - Register it in the Router file_type_ng_component_ts app-routing.module.ts import { NgModule } from \u0026#39;@angular/core\u0026#39;; import { Routes, RouterModule } from \u0026#39;@angular/router\u0026#39;; import { HomePageComponent } from \u0026#39;./home-page/home-page.component\u0026#39;; const routes: Routes = [ { path: \u0026#39;\u0026#39;, component: HomePageComponent } ]; @NgModule({ imports: [RouterModule.","tags":null,"title":"Routing","type":"courses","url":"https://fireship.io/courses/angular/app-routing/","weight":25,"wordcount":113},{"author":null,"date":1668194610,"description":"What is a closure?","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"52c886fe3a0e1b7b5d7a17ab77d0cf0d","permalink":"https://fireship.io/courses/js/102-closures/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-closures/","section":"courses","summary":" Where in memory does the JS engine store the state of a closure? Closures A closure is a function that has access to the parent scope, even after the parent function has closed. JS will automatically store the state of a closure in the heap memory, even after the parent function has returned. This behavior makes them useful for encapsulating private variables.\nfunction encapsulatedState(x) { let state = 10; return function() { state += x; return state; } } ","tags":null,"title":"Closures","type":"courses","url":"https://fireship.io/courses/js/102-closures/","weight":26,"wordcount":79},{"author":null,"date":1636658610,"description":"Create a shared bottom navigation bar","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"10259da26eef0edc7198dba6f49a3572","permalink":"https://fireship.io/courses/flutter-firebase/project-bottom-nav/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/project-bottom-nav/","section":"courses","summary":"Bottom Navigation Use a BottomNavigationBar to move between screens in the shared folder.\nfile_type_dartlang bottom_nav.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:font_awesome_flutter/font_awesome_flutter.dart\u0026#39;; class BottomNavBar extends StatelessWidget { const BottomNavBar({super.key}); @override Widget build(BuildContext context) { return BottomNavigationBar( items: const [ BottomNavigationBarItem( icon: Icon( FontAwesomeIcons.graduationCap, size: 20, ), label: \u0026#39;Topics\u0026#39;, ), BottomNavigationBarItem( icon: Icon( FontAwesomeIcons.bolt, size: 20, ), label: \u0026#39;About\u0026#39;, ), BottomNavigationBarItem( icon: Icon( FontAwesomeIcons.circleUser, size: 20, ), label: \u0026#39;Profile\u0026#39;, ), ], fixedColor: Colors.deepPurple[200], onTap: (int idx) { switch (idx) { case 0: // do nothing break; case 1: Navigator.","tags":null,"title":"Bottom Navigation Bar","type":"courses","url":"https://fireship.io/courses/flutter-firebase/project-bottom-nav/","weight":26,"wordcount":113},{"author":null,"date":1636658610,"description":"Reafactor automatically code with code actions","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"983984a0f7bd9238c8d4746526054c15","permalink":"https://fireship.io/courses/vscode-tricks/tip-actions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/tip-actions/","section":"courses","summary":"✨ Trick - Refactor Tool When you see the 💡 in VS code, it means you can take action on it. Click it or use the ctrl + . shortcut to view the available actions.","tags":null,"title":"Code Actions","type":"courses","url":"https://fireship.io/courses/vscode-tricks/tip-actions/","weight":26,"wordcount":35},{"author":null,"date":1636658610,"description":"Filter realtime data with a BehaviorSubject","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"787507ee6d4002f8ebf027927848d355","permalink":"https://fireship.io/courses/ionic/app-filter-data/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-filter-data/","section":"courses","summary":"","tags":null,"title":"Filter Data","type":"courses","url":"https://fireship.io/courses/ionic/app-filter-data/","weight":26,"wordcount":0},{"author":null,"date":1636658610,"description":"Show a loading indicator or loading screen","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"dda885c12dd13d7361b01afdfce56026","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-loader/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-loader/","section":"courses","summary":"Use the Loader when an individual UI element is loading, or LoadingScreen when an entire screen is loading.\nfile_type_dartlang loader.dart import \u0026#39;package:flutter/material.dart\u0026#39;; class Loader extends StatelessWidget { @override Widget build(BuildContext context) { return Container( width: 250, height: 250, child: CircularProgressIndicator(), ); } } class LoadingScreen extends StatelessWidget { @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(), body: Center( child: Loader(), ), ); } } ","tags":null,"title":"Loading Indicator","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-loader/","weight":26,"wordcount":65},{"author":null,"date":1563305010,"description":"Add Firebase and @angular/fire to your app","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"95bc0e23c62d6770cc34b273f26a39e2","permalink":"https://fireship.io/courses/angular/app-firebase-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/app-firebase-setup/","section":"courses","summary":"See this snippet for guided setup instructions or reference the official docs.","tags":null,"title":"Firebase Setup","type":"courses","url":"https://fireship.io/courses/angular/app-firebase-setup/","weight":26,"wordcount":12},{"author":null,"date":1668194610,"description":"Useful techniques for working with JS arrays","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"8c51670dc5382db48d82bcbc2335977d","permalink":"https://fireship.io/courses/js/102-array-tricks/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-array-tricks/","section":"courses","summary":"Which looping method is NOT recommended in most situations? Create a Range of Numbers const range = Array(100).fill(0).map((_, i) =\u0026gt; i + 1); // OR const range = [...Array(100).keys()]; Remove Duplicates from an Array const unique = [...new Set(arr)]; Get a Random Element const random = arr[Math.floor(Math.random() * arr.length)]; Loop over a Key-Value Pair for(const [i, val] of arr.entries()) { console.log(i, val); } Homework: Array Methods to Study arr.forEach(); arr.","tags":null,"title":"Array Tricks","type":"courses","url":"https://fireship.io/courses/js/102-array-tricks/","weight":27,"wordcount":74},{"author":null,"date":1636658610,"description":"Pass data to an Ionic Modal","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"74e93ee70a102c753b7a62bb931e8303","permalink":"https://fireship.io/courses/ionic/app-modal/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-modal/","section":"courses","summary":"","tags":null,"title":"Modal","type":"courses","url":"https://fireship.io/courses/ionic/app-modal/","weight":27,"wordcount":0},{"author":null,"date":1668194610,"description":"How JavaScript evolved into the language we know today","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"6f50c6ae935b566f223fc947c83f3052","permalink":"https://fireship.io/courses/js/102-history-of-js/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/102-history-of-js/","section":"courses","summary":"What is the name of the first browser that supported JavaScript? History of JavaScript Read the full Weird History of JavaScript article.","tags":null,"title":"History of JavaScript","type":"courses","url":"https://fireship.io/courses/js/102-history-of-js/","weight":28,"wordcount":22},{"author":null,"date":1636658610,"description":"Update data via Angular Reactive Forms","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"0c8790943cf81bad71a0a3540437a185","permalink":"https://fireship.io/courses/ionic/app-reactive-form/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-reactive-form/","section":"courses","summary":"","tags":null,"title":"Reactive Forms","type":"courses","url":"https://fireship.io/courses/ionic/app-reactive-form/","weight":28,"wordcount":0},{"author":null,"date":1636658610,"description":"Navigate to a dynamic Firestore ID with Angular","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"74f6e4bb5daf375262a8724f6db2ef3a","permalink":"https://fireship.io/courses/ionic/app-dynamic-routes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-dynamic-routes/","section":"courses","summary":"","tags":null,"title":"Dynamic Routing","type":"courses","url":"https://fireship.io/courses/ionic/app-dynamic-routes/","weight":29,"wordcount":0},{"author":null,"date":1668972210,"description":"Setup end-to-end tests for the signup flow","dir":"courses/supabase/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"137ee22102a1b45aa358a5dd49fc8496","permalink":"https://fireship.io/courses/supabase/auth-signup-tests/","publishdate":"0001-01-01T00:00:00Z","readingtime":5,"relpermalink":"/courses/supabase/auth-signup-tests/","section":"courses","summary":"Experiment with the live site: https://supaship.io\nSign-up-flow e2e tests in source code: https://github.com/fireship-io/supaship.io/blob/course-end-point/e2e/sign-up-flow.spec.ts\ne2e/sign-up-flow.spec.ts:\nimport { test, expect } from \u0026#34;@playwright/test\u0026#34;; import { login, setupE2eTest, signUp } from \u0026#34;./utils\u0026#34;; test.describe(\u0026#34;User auth\u0026#34;, () =\u0026gt; { const userEmail = \u0026#34;test@test.io\u0026#34;; const userPassword = \u0026#34;test123456\u0026#34;; const userName = \u0026#34;testuser\u0026#34;; test.beforeEach(setupE2eTest); test.beforeEach(async ({ page }) =\u0026gt; { await page.goto(\u0026#34;http://localhost:1337\u0026#34;); }); test(\u0026#34;new user can signup\u0026#34;, async ({ browser, page }) =\u0026gt; { await signUp(page, userEmail, userPassword, userName); }); test(\u0026#34;after signing up, user can login from another machine\u0026#34;, async ({ browser, page, }) =\u0026gt; { await signUp(page, userEmail, userPassword, userName); const newMachine = await browser.","tags":null,"title":"Signup Flow Tests","type":"courses","url":"https://fireship.io/courses/supabase/auth-signup-tests/","weight":30,"wordcount":898},{"author":null,"date":1668194610,"description":"Solving basic algorithms with plain JavaScript","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"646240f7139f25ef93a2e261b5b8f0cc","permalink":"https://fireship.io/courses/js/algo-sum/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/algo-sum/","section":"courses","summary":"I am an odd number. Take away one letter and I become even. What number am I? Cumulative Sum Interview Question Create a function that takes an array of numbers and returns a number that is the sum of all values in the array.\nCumulative Sum Implementation // Solution 1 function cumSum(arr) { return arr.reduce((acc, cur) =\u0026gt; acc + cur, 0); } // Solution 2 export function cumSum(arr) { let total = 0; for(let i = 0; i \u0026lt; arr.","tags":null,"title":"Cumulative Sum","type":"courses","url":"https://fireship.io/courses/js/algo-sum/","weight":30,"wordcount":92},{"author":null,"date":1645560690,"description":"Build a Progressive Web App","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"6971a60e7421e5651a8ec525671035b1","permalink":"https://fireship.io/courses/react/2-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/2-intro/","section":"courses","summary":"Links Source Code Live Demo Create React App Use the CRA PWA template to create a new React app.\ncommand line npx create-react-app my-app --template cra-template-pwa Firebase Create a Firebase project and deploy the app to the cloud.\ncommand line npm install -g firebase-tools firebase init --hosting npm run build firebase deploy ","tags":null,"title":"Intro","type":"courses","url":"https://fireship.io/courses/react/2-intro/","weight":30,"wordcount":52},{"author":null,"date":1636658610,"description":"Listen to the current Firebase user","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"29b3f4ab7660a10a4d97aa1f34ff4c39","permalink":"https://fireship.io/courses/flutter-firebase/auth-stream/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/auth-stream/","section":"courses","summary":"Auth Service Create a file named auth.dart in the services directory.\nfile_type_flutter services/auth.dart import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; class AuthService { final userStream = FirebaseAuth.instance.authStateChanges(); final user = FirebaseAuth.instance.currentUser; } Listen to Current User Use the home page to render a different set of UI elements based on the user\u0026rsquo;s auth state in Firebase. If the user is signed in, show the topics screen. If the user is not signed in, show the login screen.","tags":null,"title":"Auth Stream","type":"courses","url":"https://fireship.io/courses/flutter-firebase/auth-stream/","weight":30,"wordcount":176},{"author":null,"date":1636658610,"description":"Organize the VS Code integrated terminal","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5491cc06ee308fa149d01d48ff39f586","permalink":"https://fireship.io/courses/vscode-tricks/ide-terminal/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-terminal/","section":"courses","summary":"✨ Trick - Organize the Terminal Open multiple terminal sessions, then right click it to customize its name, icon, and color.","tags":null,"title":"Integrated Terminal","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-terminal/","weight":30,"wordcount":21},{"author":null,"date":1636658610,"description":"Secure your backend data with Firestore rules","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"7889e49dc70418568c1e284121d09861","permalink":"https://fireship.io/courses/ionic/app-security/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/app-security/","section":"courses","summary":"","tags":null,"title":"Security Rules","type":"courses","url":"https://fireship.io/courses/ionic/app-security/","weight":30,"wordcount":0},{"author":null,"date":1633723890,"description":"Code your first Dart class","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"e43356306d617634e2e024030c6b4a4c","permalink":"https://fireship.io/courses/dart/classes-basic/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-basic/","section":"courses","summary":"Create a Class Classes are a way to group data and behavior together, like a blueprint for an Object.\nfile_type_dartlang classes.dart class Basic { int id; Basic(this.id); doStuff() { print(\u0026#39;Hello my ID is $id\u0026#39;); } } Create an Object Use the class to instantiate an Object. The new keyword is optional.\nfile_type_dartlang classes.dart Basic thing = new Basic(55); thing.id; thing.doStuff(); Static Methods You can call static methods on the class itself without creating a new object.","tags":null,"title":"Classes","type":"courses","url":"https://fireship.io/courses/dart/classes-basic/","weight":30,"wordcount":93},{"author":null,"date":1630869810,"description":"Create a new branch in a git repository","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"6490f9da72391d6a00d56edbef18cb3a","permalink":"https://fireship.io/courses/git/collab-branch/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/collab-branch/","section":"courses","summary":" What is a more politically correct name for the master branch? List out branches:\ncommand line git branch Create a new branch:\ncommand line git branch awesome Delete a branch\ncommand line git branch -d awesome ","tags":null,"title":"git branch","type":"courses","url":"https://fireship.io/courses/git/collab-branch/","weight":30,"wordcount":36},{"author":null,"date":1612207410,"description":"Technical overview of server-side rendering and SEO","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"e4b90579dc7010d2111599ad6ce0039d","permalink":"https://fireship.io/courses/react-next-firebase/ssr-next-seo/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-next-seo/","section":"courses","summary":"You have a page that doesn't change often, but will be shared on social media. Which strategy is ideal? In this section we will look at techniques for data fetching and server-side rendering in Next.js.\nShould I fetch data on the server? A flow chart to help you determine the right rendering strategy based on SEO and performance","tags":null,"title":"SSR \u0026 SEO in Next","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-next-seo/","weight":30,"wordcount":58},{"author":null,"date":1605874290,"description":"Extracting complex logic into reusable functions","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"df4ce9d8283509abf4e3d48c07718ca6","permalink":"https://fireship.io/courses/firebase-security/advanced-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/advanced-functions/","section":"courses","summary":" file_type_firebase firestore.rules match /users/{userId} { allow read: if isLoggedIn(); allow write: if belongsTo(userId); } match /todos/{docId} { allow read: if resource.data.status == \u0026#39;published\u0026#39;; allow create: if canCreateTodo(); allow update: if belongsTo() \u0026amp;\u0026amp; request.resource.data.keys().hasOnly([\u0026#39;text\u0026#39;, \u0026#39;status\u0026#39;]); } function isLoggedIn() { return request.auth.uid != null; } function belongsTo(userId) { return request.auth.uid == userId || request.auth.uid == resource.data.uid; } function canCreateTodo() { let uid = request.auth.uid; let hasValidTimestamp = request.time == request.resource.data.createdAt; return belongsTo(uid) \u0026amp;\u0026amp; hasValidTimestamp; } ","tags":null,"title":"Functions","type":"courses","url":"https://fireship.io/courses/firebase-security/advanced-functions/","weight":30,"wordcount":73},{"author":null,"date":1587410610,"description":"Change and save credit card details with Payment Intents API","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"d5e887baeff6c3e21aaa8cb3c6b53665","permalink":"https://fireship.io/courses/stripe-js/payments-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/payments-intro/","section":"courses","summary":"","tags":null,"title":"Payment Intents API","type":"courses","url":"https://fireship.io/courses/stripe-js/payments-intro/","weight":30,"wordcount":0},{"author":null,"date":1586700810,"description":"Sign in to the application with Google","dir":"courses/flutter-firebase-v1/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1586700810,"objectID":"60614a606d36166dec608d38be90a455","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-auth-service/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase-v1/project-auth-service/","section":"courses","summary":"Note: If you experience issues with Google Auth, revisit the Firebase Setup section to ensure the SHA fingerprint has been setup on your local machine.\nAuth Service Create an auth service to isolate the business logic for Firebase authentication methods and user management.\nfile_type_dartlang auth.dart import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; import \u0026#39;package:google_sign_in/google_sign_in.dart\u0026#39;; import \u0026#39;package:cloud_firestore/cloud_firestore.dart\u0026#39;; import \u0026#39;dart:async\u0026#39;; class AuthService { final GoogleSignIn _googleSignIn = GoogleSignIn(); final FirebaseAuth _auth = FirebaseAuth.instance; final Firestore _db = Firestore.","tags":null,"title":"User Authentication (Google)","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-auth-service/","weight":30,"wordcount":237},{"author":null,"date":1585769010,"description":"Create a chat room in Firestore linked to the current user","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"63c177270c011479ba97291ca4f7b648","permalink":"https://fireship.io/courses/vue/firestore-create-chat/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/firestore-create-chat/","section":"courses","summary":"Chat List Component ChatList.vue \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button @click=\u0026#34;createChatRoom()\u0026#34; class=\u0026#34;button\u0026#34;\u0026gt;Create New Chat Room\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { db } from \u0026#39;../firebase\u0026#39;; export default { data() { return { chats: [] } }, firestore() { return { chats: db.collection(\u0026#39;chats\u0026#39;).where(\u0026#39;owner\u0026#39;, \u0026#39;==\u0026#39;, this.uid) } }, methods: { async createChatRoom() { const newChat = await db.collection(\u0026#39;chats\u0026#39;).add({ createdAt: Date.now(), owner: this.uid, members: [this.uid] }) console.log(newChat) } }, props: [\u0026#39;uid\u0026#39;] }; \u0026lt;/script\u0026gt; ","tags":null,"title":"Create Chat Rooms","type":"courses","url":"https://fireship.io/courses/vue/firestore-create-chat/","weight":30,"wordcount":66},{"author":null,"date":1582045950,"description":"Graph Traversal with breadth-first (BFS) and depth-first Search (DFS)","dir":"courses/javascript/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1582045950,"objectID":"6b5fd7f56332661437e07079f25e69ac","permalink":"https://fireship.io/courses/javascript/interview-graphs/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/javascript/interview-graphs/","section":"courses","summary":"Graph Representation as Adjacency List A graph can be represented as an adjacency matrix or adjacency list. In most cases, it is more efficient to use the latter because it requires less memory and offers better time-complexity when performing search algorithms.\nImagine we have a dataset that contains airports and routes. We can represent the graph as a Map where each key (node) is an airport and the value (edges) is an array airports that it can connect to.","tags":null,"title":"Graph Traversal","type":"courses","url":"https://fireship.io/courses/javascript/interview-graphs/","weight":30,"wordcount":392},{"author":null,"date":1563305010,"description":"Configure the router for lazy-loaded user module, aka code splitting.","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"16ff7b23e560de058df2efc0073f5720","permalink":"https://fireship.io/courses/angular/user-feature-module/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/user-feature-module/","section":"courses","summary":"Create a lazy-loaded feature module to handle user sign-in and related tasks.\nSteps Step 1 Generate a feature module with routing and add a component to it.\ncommand line ng g module user --routing ng g component user/login-page Step 2 - Update the User Routes Add the component to the user module routes.\nfile_type_ng_component_ts user-routing.module.ts import { NgModule } from \u0026#39;@angular/core\u0026#39;; import { Routes, RouterModule } from \u0026#39;@angular/router\u0026#39;; import { LoginPageComponent } from \u0026#39;.","tags":null,"title":"Lazy Loaded Login Feature","type":"courses","url":"https://fireship.io/courses/angular/user-feature-module/","weight":30,"wordcount":153},{"author":null,"date":1668972210,"description":"Create a custom React hook for session management","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"57012af48aadb57d60633832b2c9085c","permalink":"https://fireship.io/courses/supabase/auth-hook/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/auth-hook/","section":"courses","summary":"use-session.ts:\nimport { RealtimeChannel, Session } from \u0026#34;@supabase/supabase-js\u0026#34;; import { useEffect, useState } from \u0026#34;react\u0026#34;; import { supaClient } from \u0026#34;./supa-client\u0026#34;; export interface UserProfile { username: string; avatarUrl?: string; } export interface SupashipUserInfo { session: Session | null; profile: UserProfile | null; } export function useSession(): SupashipUserInfo { const [userInfo, setUserInfo] = useState\u0026lt;SupashipUserInfo\u0026gt;({ profile: null, session: null, }); const [channel, setChannel] = useState\u0026lt;RealtimeChannel | null\u0026gt;(null); useEffect(() =\u0026gt; { supaClient.auth.getSession().then(({ data: { session } }) =\u0026gt; { setUserInfo({ .","tags":null,"title":"Session Hook","type":"courses","url":"https://fireship.io/courses/supabase/auth-hook/","weight":31,"wordcount":181},{"author":null,"date":1668194610,"description":"How to implement binary search in JavaScript","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"78c96e4741340e18dbdb973329028b5d","permalink":"https://fireship.io/courses/js/algo-binary-search/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/algo-binary-search/","section":"courses","summary":"What is the time complexity of binary search? Binary search is a faster way to find an item in a sorted array with O(log n) time complexity, compared to a regular loop with O(n) time complexity.\nBinary Search Interview Question Create a function that takes a sorted array and a target value. Return the index of the target value in the array. If the target value is not in the array, return -1.","tags":null,"title":"Binary Search","type":"courses","url":"https://fireship.io/courses/js/algo-binary-search/","weight":31,"wordcount":149},{"author":null,"date":1645560690,"description":"Matching Game UI","dir":"courses/react/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"677935bf0fc2b2966ccc19858736d355","permalink":"https://fireship.io/courses/react/2-game-ui/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/2-game-ui/","section":"courses","summary":"App App.js import { useState } from \u0026#39;react\u0026#39;; import Card from \u0026#39;./components/Card\u0026#39;; import shuffle from \u0026#39;./utilities/shuffle\u0026#39;; function App() { const [cards, setCards] = useState(shuffle); // Cards array from assets return ( \u0026lt;\u0026gt; \u0026lt;div className=\u0026#34;grid\u0026#34;\u0026gt; {cards.map((card) =\u0026gt; { const { image, id, matched } = card; return ( \u0026lt;Card key={id} image={image} selected={false} onClick={() =\u0026gt; {}} /\u0026gt; ); })} \u0026lt;/div\u0026gt; \u0026lt;/\u0026gt; ); } export default App; Card Card.js const Card = ({ image, selected, onClick }) =\u0026gt; { return ( \u0026lt;div className=\u0026#34;card\u0026#34;\u0026gt; \u0026lt;div className={selected \u0026amp;\u0026amp; \u0026#39;selected\u0026#39;}\u0026gt; \u0026lt;img alt=\u0026#34;\u0026#34; src={image} className=\u0026#34;card-face\u0026#34; /\u0026gt; \u0026lt;img alt=\u0026#34;\u0026#34; className=\u0026#34;card-back\u0026#34; src={\u0026#39;/assets/fireship.","tags":null,"title":"Game UI","type":"courses","url":"https://fireship.io/courses/react/2-game-ui/","weight":31,"wordcount":180},{"author":null,"date":1636658610,"description":"An introduction to Firebase Cloud Messaging","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"202c14b61114ee4f89ba7f0c97eec0c6","permalink":"https://fireship.io/courses/ionic/fcm-primer/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/fcm-primer/","section":"courses","summary":"","tags":null,"title":"FCM Primer","type":"courses","url":"https://fireship.io/courses/ionic/fcm-primer/","weight":31,"wordcount":0},{"author":null,"date":1636658610,"description":"Build a login screen with Anonymous sign in.","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"1dd4965e3c6a23b394f71c429fc5cabd","permalink":"https://fireship.io/courses/flutter-firebase/auth-login-screen/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/auth-login-screen/","section":"courses","summary":"Anonymous Auth Enable anonymous auth in the Firebase console, then implemment it in the auth service.\nfile_type_flutter services/auth.dart import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; class AuthService { // .. /// Anonymous Firebase login Future\u0026lt;void\u0026gt; anonLogin() async { try { await FirebaseAuth.instance.signInAnonymously(); } on FirebaseAuthException { // handle error } } Future\u0026lt;void\u0026gt; signOut() async { await FirebaseAuth.instance.signOut(); } } Login Screen Create a login screen and resuable button to support multiple login methods.\nfile_type_flutter login.dart class LoginScreen extends StatelessWidget { const LoginScreen({super.","tags":null,"title":"Login Screen","type":"courses","url":"https://fireship.io/courses/flutter-firebase/auth-login-screen/","weight":31,"wordcount":246},{"author":null,"date":1636658610,"description":"Use tasks to automatic repeitive jobs in the terminal","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"8ddf0b9c1b3c6337940ef49c7957e142","permalink":"https://fireship.io/courses/vscode-tricks/ide-tasks/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-tasks/","section":"courses","summary":"✨ Trick - Run a Task When using a tool like NPM or Docker, VS code will automatically detect tasks you can run. Find them in the file explorer and run them with the play button.","tags":null,"title":"Tasks","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-tasks/","weight":31,"wordcount":36},{"author":null,"date":1636658610,"description":"Display user data on the profile screen","dir":"courses/flutter-firebase-v1/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"7c9b6ca4a17509e5366de929f2a43793","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-user-profile/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-user-profile/","section":"courses","summary":"User Profile Screen file_type_dartlang profile.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; import \u0026#39;../services/services.dart\u0026#39;; import \u0026#39;../shared/shared.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; class ProfileScreen extends StatelessWidget { final AuthService auth = AuthService(); @override Widget build(BuildContext context) { FirebaseUser user = Provider.of\u0026lt;FirebaseUser\u0026gt;(context); if (user != null) { return Scaffold( appBar: AppBar( backgroundColor: Colors.deepOrange, title: Text(user.displayName ?? \u0026#39;Guest\u0026#39;), ), body: Center( child: Column( mainAxisAlignment: MainAxisAlignment.spaceEvenly, crossAxisAlignment: CrossAxisAlignment.center, children: [ if (user.photoUrl != null) Container( width: 100, height: 100, margin: EdgeInsets.","tags":null,"title":"User Profile","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-user-profile/","weight":31,"wordcount":120},{"author":null,"date":1633723890,"description":"How to use Dart class constructors","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"8abc79059364b4790e7331dd175708f4","permalink":"https://fireship.io/courses/dart/classes-constructors/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-constructors/","section":"courses","summary":"Constructor Basics The this keyword is used to refer to the current instance of a class and is optional unless there is a name collision.\nfile_type_dartlang constructors.dart class Rectangle { final int width; final int height; String? name; late final int area; Rectangle(this.width, this.height, [this.name]) { area = width * height; } } Named Parameters In Flutter, all widgets used named parameters.\nfile_type_dartlang constructors.dart class Circle { const Circle({required int radius, String?","tags":null,"title":"Constructors","type":"courses","url":"https://fireship.io/courses/dart/classes-constructors/","weight":31,"wordcount":158},{"author":null,"date":1630869810,"description":"Move between branches in git","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"9a003555c2511af4c543e7fec2ac8e04","permalink":"https://fireship.io/courses/git/collab-checkout/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/collab-checkout/","section":"courses","summary":" Which flag automatically creates a new branch during checkout? Move into a branch\ncommand line git checkout awesome Create a new branch and move into it:\ncommand line git checkout -b awesome ","tags":null,"title":"git checkout","type":"courses","url":"https://fireship.io/courses/git/collab-checkout/","weight":31,"wordcount":32},{"author":null,"date":1612207410,"description":"How to model data relationships between users, posts, and hearts","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"9827b8fc137bc6ef6a063f1e49ad442c","permalink":"https://fireship.io/courses/react-next-firebase/ssr-data-model/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-data-model/","section":"courses","summary":"Database Structure users/{uid} Public user profile usernames/{username} Username uniqueness tracking users/{uid}/posts/{slug} User can have many posts users/{uid}/posts/{slug}/hearts/{uid} many-to-many relationship between users and posts via hearts Data Model for Posts Example post document with all expected fields.\n// users/{uid}/posts/{slug} { title: \u0026#39;Hello World, slug: \u0026#39;hello-world\u0026#39;, uid: \u0026#39;userID\u0026#39;, username: \u0026#39;jeffd23\u0026#39;, published: false, content: \u0026#39;# hello world!\u0026#39;, createdAt: TimeStamp, updatedAt: TimeStamp, heartCount: 0, } ","tags":null,"title":"Data Model","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-data-model/","weight":31,"wordcount":61},{"author":null,"date":1605874290,"description":"Read documents with get() and exists()","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"ac2f9e223b486c4219ab8f6f96bb2c0e","permalink":"https://fireship.io/courses/firebase-security/advanced-read-db/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/advanced-read-db/","section":"courses","summary":" file_type_firebase firestore.rules get(/databases/$(database)/documents/users/$(request.auth.uid)) exists(/databases/$(database)/documents/users/$(SOME_DOC_ID)) ","tags":null,"title":"Read Other Documents","type":"courses","url":"https://fireship.io/courses/firebase-security/advanced-read-db/","weight":31,"wordcount":4},{"author":null,"date":1587410610,"description":"How to create a Payment Intent on the Server","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"f734fa777af6d2873bcf46fe06e77f83","permalink":"https://fireship.io/courses/stripe-js/payments-create/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/payments-create/","section":"courses","summary":"Create a Payment Intent file_type_typescript payments.ts import { stripe } from \u0026#39;./\u0026#39;; /** * Create a Payment Intent with a specific amount */ export async function createPaymentIntent(amount: number) { const paymentIntent = await stripe.paymentIntents.create({ amount, currency: \u0026#39;usd\u0026#39;, // receipt_email: \u0026#39;hello@fireship.io\u0026#39;, }); paymentIntent.status return paymentIntent; } Payments Endpoint file_type_typescript api.ts import { createPaymentIntent } from \u0026#39;./payments\u0026#39;; /** * Payment Intents */ app.post( \u0026#39;/payments\u0026#39;, runAsync(async ({ body }: Request, res: Response) =\u0026gt; { res.","tags":null,"title":"Create a Payment Intent","type":"courses","url":"https://fireship.io/courses/stripe-js/payments-create/","weight":31,"wordcount":77},{"author":null,"date":1585769010,"description":"Query all chat rooms owned by the current user","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"dcf688e3f84cf6385f6856e1558c0d05","permalink":"https://fireship.io/courses/vue/firestore-query-chat/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/firestore-query-chat/","section":"courses","summary":"Chat List Component ChatList.vue \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li v-for=\u0026#34;chat of chats\u0026#34; :key=\u0026#34;chat.id\u0026#34;\u0026gt; \u0026lt;router-link :to=\u0026#34;{ name: \u0026#39;chat\u0026#39;, params: { id: chat.id } }\u0026#34;\u0026gt;{{ chat.id }}\u0026lt;/router-link\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;button @click=\u0026#34;createChatRoom()\u0026#34; class=\u0026#34;button\u0026#34;\u0026gt;Create New Chat Room\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { db } from \u0026#39;../firebase\u0026#39;; export default { data() { return { chats: [] } }, firestore() { return { chats: db.collection(\u0026#39;chats\u0026#39;).where(\u0026#39;owner\u0026#39;, \u0026#39;==\u0026#39;, this.uid) } }, methods: { async createChatRoom() { const newChat = await db.","tags":null,"title":"Query Chat Rooms","type":"courses","url":"https://fireship.io/courses/vue/firestore-query-chat/","weight":31,"wordcount":86},{"author":null,"date":1563305010,"description":"Create a directive that extends Google SignIn to any button or element","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"f3da81c15545bef6a6c2f43276769496","permalink":"https://fireship.io/courses/angular/user-google-signin-directive/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/user-google-signin-directive/","section":"courses","summary":"Steps Step 1 - Generate the Google Signin Directive command line ng g directive user/google-signin The directive listens to the click event on the host element to trigger the signin process in Firebase.\nEvent Types\nfile_type_ng_component_ts google-signin.directive.ts import { Directive, HostListener } from \u0026#39;@angular/core\u0026#39;; import { AngularFireAuth } from \u0026#39;@angular/fire/auth\u0026#39;; import firebase from \u0026#39;firebase/app; @Directive({ selector: \u0026#39;[appGoogleSignin]\u0026#39; }) export class GoogleSigninDirective { constructor(private afAuth: AngularFireAuth) {} @HostListener(\u0026#39;click\u0026#39;) onclick() { this.afAuth.signInWithPopup(new firebase.","tags":null,"title":"Google SignIn","type":"courses","url":"https://fireship.io/courses/angular/user-google-signin-directive/","weight":31,"wordcount":181},{"author":null,"date":1668972210,"description":"Use React context to access user data","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"e77db4881e6213de09b1af80ae6bb6a4","permalink":"https://fireship.io/courses/supabase/auth-context/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/auth-context/","section":"courses","summary":"After this lesson, your App.tsx should look like this:\nimport { createContext } from \u0026#34;react\u0026#34;; import { createBrowserRouter, RouterProvider, Outlet } from \u0026#34;react-router-dom\u0026#34;; import MessageBoard from \u0026#34;./MessageBoard\u0026#34;; import AllPosts from \u0026#34;./AllPosts\u0026#34;; import PostView from \u0026#34;./PostView\u0026#34;; import Welcome, { welcomeLoader } from \u0026#34;./Welcome\u0026#34;; import NavBar from \u0026#34;./NavBar\u0026#34;; import { SupashipUserInfo, useSession } from \u0026#34;./use-session\u0026#34;; const router = createBrowserRouter([ /* routing hasn\u0026#39;t changed */ ]); function App() { return \u0026lt;RouterProvider router={router} /\u0026gt;; } export default App; export const UserContext = createContext\u0026lt;SupashipUserInfo\u0026gt;({ session: null, profile: null, }); function Layout() { const supashipUserInfo = useSession(); return ( \u0026lt;\u0026gt; \u0026lt;UserContext.","tags":null,"title":"User Context","type":"courses","url":"https://fireship.io/courses/supabase/auth-context/","weight":32,"wordcount":104},{"author":null,"date":1668194610,"description":"How to implement an LRU cache in JavaScript","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"c36661491bad6a5a9259bd130da9ece8","permalink":"https://fireship.io/courses/js/algo-lru/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/algo-lru/","section":"courses","summary":"Which feature makes a JS Map suitable for an LRU cache? The LRU cache is one of the most commoly asked algorithm questions on interviews.\nLRU Interview Question Create a data structure that implements the requirements of a Least Recently Used (LRU) cache with O(1) average time complexity.\nInitialize an object with a maxium capacity of elements. getItem Return the value of the key. Update cache with the most recently used key.","tags":null,"title":"Least Recently Used (LRU) Cache","type":"courses","url":"https://fireship.io/courses/js/algo-lru/","weight":32,"wordcount":193},{"author":null,"date":1668194610,"description":"How to test JavaScript code with Vitest","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"9c09d69b375708256fc94795fb43b6bf","permalink":"https://fireship.io/courses/js/algo-vitest/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/algo-vitest/","section":"courses","summary":"Use Vitest to create a few basic unit test for the algorithims in the previous lessons.\nnpm init -y npm i -D vitest Update the package.json with a test script.\nfile_type_npm package.json \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;vitest\u0026#34; }, Vitest Basic Example import { expect, test } from \u0026#39;vitest\u0026#39;; import { cumSum } from \u0026#39;./sum\u0026#39;; test(\u0026#39;cumulative sum of an array\u0026#39;, () =\u0026gt; { expect(cumSum([1, 3, 5, 7])).toBe(16); expect(cumSum([-2, -4, -8])).toBe(-14); }); ","tags":null,"title":"TDD with Vitest","type":"courses","url":"https://fireship.io/courses/js/algo-vitest/","weight":32,"wordcount":69},{"author":null,"date":1645560690,"description":"Matching game logic with useEffect","dir":"courses/react/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"a86f9aab6d7a08a156c198aa82811317","permalink":"https://fireship.io/courses/react/2-game-logic/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react/2-game-logic/","section":"courses","summary":"Game Logic App.js import { useState, useEffect } from \u0026#39;react\u0026#39;; import Card from \u0026#39;./components/Card\u0026#39;; import shuffle from \u0026#39;./utilities/shuffle\u0026#39;; function App() { const [cards, setCards] = useState(shuffle); // Cards array from assets const [pickOne, setPickOne] = useState(null); // First selection const [pickTwo, setPickTwo] = useState(null); // Second selection const [disabled, setDisabled] = useState(false); // Delay handler const [wins, setWins] = useState(0); // Win streak // Handle card selection const handleClick = (card) =\u0026gt; { if (!","tags":null,"title":"Game Logic","type":"courses","url":"https://fireship.io/courses/react/2-game-logic/","weight":32,"wordcount":294},{"author":null,"date":1636658610,"description":"Use Firebase Cloud Functions to send push notifications","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"cbb6243cbf3b3759b5df43903e6dc6b6","permalink":"https://fireship.io/courses/ionic/fcm-cloud-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/fcm-cloud-functions/","section":"courses","summary":"You might also find the Firebase Cloud Functions Master Course useful for more complex serverless integrations.","tags":null,"title":"Cloud Functions","type":"courses","url":"https://fireship.io/courses/ionic/fcm-cloud-functions/","weight":32,"wordcount":16},{"author":null,"date":1636658610,"description":"Using source control features in VS Code","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"21aa8c48838718f237aabda529da2fb4","permalink":"https://fireship.io/courses/vscode-tricks/ide-git/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-git/","section":"courses","summary":"🍴 If you\u0026rsquo;re new to Git, check out the Full Git Course.\nFirst, add a git repo to your project:\ncommand line git init ✨ Trick - Revert a Commit One the most useful git techniques is to revert a commit. Use the source control panel in to stage files, commit them, then revert the commit.","tags":null,"title":"Git","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-git/","weight":32,"wordcount":56},{"author":null,"date":1636658610,"description":"Authenticate with Google using FlutterFire","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"3a67cd55fe3ce74d100b39b2592d8944","permalink":"https://fireship.io/courses/flutter-firebase/auth-google/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/auth-google/","section":"courses","summary":"Auth Service Implement Google Login in the auth service.\nfile_type_flutter services/auth.dart import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; import \u0026#39;package:google_sign_in/google_sign_in.dart\u0026#39;; class AuthService { // ... Future\u0026lt;void\u0026gt; googleLogin() async { try { final googleUser = await GoogleSignIn().signIn(); if (googleUser == null) return; final googleAuth = await googleUser.authentication; final authCredential = GoogleAuthProvider.credential( accessToken: googleAuth.accessToken, idToken: googleAuth.idToken, ); await FirebaseAuth.instance.signInWithCredential(authCredential); } on FirebaseAuthException catch (e) { // handle error } } } Login Screen Add Google Sign In to the login screen column.","tags":null,"title":"Google Sign In","type":"courses","url":"https://fireship.io/courses/flutter-firebase/auth-google/","weight":32,"wordcount":90},{"author":null,"date":1633723890,"description":"How implicit interfaces work in Dart","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"f15b27afb379fdd4097996b9669c3481","permalink":"https://fireship.io/courses/dart/classes-interfaces/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-interfaces/","section":"courses","summary":"An interface is a contract that a class must follow. Prefixing a method or variable with _ makes it private, so it won\u0026rsquo;t be visible when imported from a different file.\nfile_type_dartlang interfaces.dart class Elephant { // Public interface final String name; // In the interface, but visible only in this library. (private) final int _id = 23; // Not in the interface, since this is a constructor. Elephant(this.name); // Public method.","tags":null,"title":"Interfaces","type":"courses","url":"https://fireship.io/courses/dart/classes-interfaces/","weight":32,"wordcount":88},{"author":null,"date":1630869810,"description":"Merge conflicts and how to resolve them","dir":"courses/git/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"8e42a736976f66edb2501866b58f7fc7","permalink":"https://fireship.io/courses/git/collab-merge-conflicts/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/collab-merge-conflicts/","section":"courses","summary":"Which flag allows you to safely quit the merge conflit process? How Merge Conflicts Happen Merge conflicts happen when two commits affect the same line of code at the same time.\nFeature branch modifies line 5 and commits. Master branch modifies line 5 and commits. Master branch tries to merge feature branch. Here\u0026rsquo;s how a merge conflict looks from the command line:\ncommand line git branch feature # make some changes git commit -am \u0026#34;awesome branch stuff\u0026#34; git checkout master # make some changes to same code git commit -am \u0026#34;master branch stuff\u0026#34; git merge feature # CONFLICT!","tags":null,"title":"Merge Conflicts","type":"courses","url":"https://fireship.io/courses/git/collab-merge-conflicts/","weight":32,"wordcount":188},{"author":null,"date":1612207410,"description":"Implement server-side rendering to fetch data on the server","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"3d20f6ab87821f39c03af298ca848a94","permalink":"https://fireship.io/courses/react-next-firebase/ssr-profile-page/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/ssr-profile-page/","section":"courses","summary":"How do you return a single result from a Firestore collection query Helpers The following helpers will be reused on in other components to simplify the code.\nfile_type_js lib/firebase.js /**` * Gets a users/{uid} document with username * @param {string} username */ export async function getUserWithUsername(username) { const usersRef = firestore.collection(\u0026#39;users\u0026#39;); const query = usersRef.where(\u0026#39;username\u0026#39;, \u0026#39;==\u0026#39;, username).limit(1); const userDoc = (await query.get()).docs[0]; return userDoc; } /**` * Converts a firestore document to JSON * @param {DocumentSnapshot} doc */ export function postToJSON(doc) { const data = doc.","tags":null,"title":"SSR User Profile Page","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-profile-page/","weight":32,"wordcount":248},{"author":null,"date":1605874290,"description":"Chat data validation example","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"897396f2ad077436b9b02a03ee0adc3a","permalink":"https://fireship.io/courses/firebase-security/advanced-chat-example/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/advanced-chat-example/","section":"courses","summary":"Firebase Rules for hypothertical chat application\nfile_type_firebase firestore.rules rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if false; } match /messages/{docId} { allow read: if request.auth.uid != null; allow create: if canCreateMessage(); } function canCreateMessage() { let isSignedIn = request.auth.uid != null; let isOwner = request.auth.uid == request.resource.data.uid; let isNotTooLong = request.resource.data.text.size() \u0026lt; 255; let isNow = request.time == request.resource.data.createdAt; let isNotBanned = exists( /databases/$(database)/documents/banned/$(request.","tags":null,"title":"Chat Example","type":"courses","url":"https://fireship.io/courses/firebase-security/advanced-chat-example/","weight":32,"wordcount":88},{"author":null,"date":1587410610,"description":"How to work with Stripe webhook events in development","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"25736d2786a09af1b8e29297cf91457e","permalink":"https://fireship.io/courses/stripe-js/payments-fulfill-webhook/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/payments-fulfill-webhook/","section":"courses","summary":"Install the Stripe CLI on your local system.\nTrigger Webhooks Locally Open a terminal to forward webhooks to the server.\ncommand line stripe listen --forward-to localhost:3333/hooks Then open another terminal to trigger a mock webhook. command line stripe trigger payment_intent.created Webhook Handler Update the express middleware to include the body buffer.\nfile_type_typescript api.ts app.use( express.json({ verify: (req, res, buffer) =\u0026gt; (req[\u0026#39;rawBody\u0026#39;] = buffer), }) ); file_type_typescript index.ts import { stripe } from \u0026#39;.","tags":null,"title":"Stripe Webhooks","type":"courses","url":"https://fireship.io/courses/stripe-js/payments-fulfill-webhook/","weight":32,"wordcount":168},{"author":null,"date":1585769010,"description":"Load a chat room based on its document ID with the Vue Router","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"d45d6108cdeed390448e272cffc335a4","permalink":"https://fireship.io/courses/vue/firestore-dynamic-routing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/firestore-dynamic-routing/","section":"courses","summary":"Router Config file_type_js main.js import ChatRoom from \u0026#39;./components/ChatRoom\u0026#39; const router = new VueRouter({ routes: [ { path: \u0026#39;/chats/:id\u0026#39;, component: ChatRoom, name: \u0026#39;chat\u0026#39; } ] }) Router Link \u0026lt;router-link :to=\u0026#34;{ name: \u0026#39;chat\u0026#39;, params: { id: chat.id } }\u0026#34;\u0026gt;{{ chat.id }}\u0026lt;/router-link\u0026gt; ChatRoom Component ChatRoom.vue \u0026lt;template\u0026gt; \u0026lt;main class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Welcome to ChatRoom.vue {{ chatId }}\u0026lt;/h3\u0026gt; \u0026lt;router-link to=\u0026#34;/\u0026#34;\u0026gt;Back\u0026lt;/router-link\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { computed: { chatId() { return this.$route.params.id; }, }, }; \u0026lt;/script\u0026gt; ","tags":null,"title":"Dynamic Routing","type":"courses","url":"https://fireship.io/courses/vue/firestore-dynamic-routing/","weight":32,"wordcount":69},{"author":null,"date":1563305010,"description":"SignUp, SignIn, and reset a password with Reactive Forms","dir":"courses/angular/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"e840137acb63d05ef487f700b4a5503b","permalink":"https://fireship.io/courses/angular/user-email-pass/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/angular/user-email-pass/","section":"courses","summary":"Official Reactive Forms Docs Steps Step 1 - Initial Setup command line ng g component user/email-login Your user module should look similer to this:\nfile_type_ng_component_ts user.module.ts import { ReactiveFormsModule } from \u0026#39;@angular/forms\u0026#39;; import { EmailLoginComponent } from \u0026#39;./email-login/email-login.component\u0026#39;; @NgModule({ declarations: [LoginPageComponent, GoogleSigninDirective, EmailLoginComponent], imports: [ CommonModule, UserRoutingModule, SharedModule, ReactiveFormsModule ] }) export class UserModule { } Make sure to declare the form in the login page for unauthenticated users.","tags":null,"title":"Email Password Auth","type":"courses","url":"https://fireship.io/courses/angular/user-email-pass/","weight":32,"wordcount":445},{"author":null,"date":1668972210,"description":"Build the UI for login and signup","dir":"courses/supabase/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"28425527907e75fa41f51981f62affcf","permalink":"https://fireship.io/courses/supabase/auth-login/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/supabase/auth-login/","section":"courses","summary":"Login Components Updated NavBar.tsx:\nimport { useContext } from \u0026#34;react\u0026#34;; import { Link } from \u0026#34;react-router-dom\u0026#34;; import { UserContext } from \u0026#34;./App\u0026#34;; import Login from \u0026#34;./Login\u0026#34;; import UserMenu from \u0026#34;./UserMenu\u0026#34;; export default function NavBar() { const { session } = useContext(UserContext); return ( \u0026lt;\u0026gt; \u0026lt;nav className=\u0026#34;nav-bar\u0026#34;\u0026gt; \u0026lt;Link className=\u0026#34;nav-logo-link\u0026#34; to=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;img id=\u0026#34;logo\u0026#34; className=\u0026#34;nav-logo\u0026#34; src=\u0026#34;https://supaship.io/supaship_logo_with_text.svg\u0026#34; alt=\u0026#34;logo\u0026#34; /\u0026gt; \u0026lt;/Link\u0026gt; \u0026lt;ul className=\u0026#34;nav-right-list\u0026#34;\u0026gt; \u0026lt;li className=\u0026#34;nav-message-board-list-item\u0026#34;\u0026gt; \u0026lt;Link to=\u0026#34;/1\u0026#34; className=\u0026#34;nav-message-board-link\u0026#34;\u0026gt; message board \u0026lt;/Link\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li className=\u0026#34;nav-auth-item\u0026#34;\u0026gt; {session?.user ?","tags":null,"title":"Login Screen","type":"courses","url":"https://fireship.io/courses/supabase/auth-login/","weight":33,"wordcount":466},{"author":null,"date":1645560690,"description":"Dynamic PWA App Badge and Deployment","dir":"courses/react/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1645560690,"objectID":"f5096f8abfd76e29feb1b6808d399d9b","permalink":"https://fireship.io/courses/react/2-pwa/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react/2-pwa/","section":"courses","summary":"App Badge Hook useAppBadge.jsx import { useState } from \u0026#39;react\u0026#39;; const useAppBadge = () =\u0026gt; { const [counter, setCounter] = useState(1); const setBadge = () =\u0026gt; { setCounter(counter + 1); if (navigator.setAppBadge) { navigator.setAppBadge(counter); } else if (navigator.setClientBadge) { navigator.setClientBadge(); } }; const clearBadge = () =\u0026gt; { setCounter(1); if (navigator.clearAppBadge) { navigator.clearAppBadge(); } else if (navigator.clearClientBadge) { navigator.clearClientBadge(); } }; return [setBadge, clearBadge]; }; export default useAppBadge; ","tags":null,"title":"PWA","type":"courses","url":"https://fireship.io/courses/react/2-pwa/","weight":33,"wordcount":68},{"author":null,"date":1636658610,"description":"Build a UI for multiple login methods","dir":"courses/flutter-firebase-v1/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"9e5ff7bb35f33383c121d85b3bf404c2","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-login-screen/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-login-screen/","section":"courses","summary":"Login Screen Create a login screen and a reusable button for multiple auth methods.\nfile_type_dartlang login.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:font_awesome_flutter/font_awesome_flutter.dart\u0026#39;; import \u0026#39;../services/services.dart\u0026#39;; import \u0026#39;package:apple_sign_in/apple_sign_in.dart\u0026#39;; class LoginScreen extends StatefulWidget { createState() =\u0026gt; LoginScreenState(); } class LoginScreenState extends State\u0026lt;LoginScreen\u0026gt; { AuthService auth = AuthService(); @override void initState() { super.initState(); auth.getUser.then( (user) { if (user != null) { Navigator.pushReplacementNamed(context, \u0026#39;/topics\u0026#39;); } }, ); } @override Widget build(BuildContext context) { return Scaffold( body: Container( padding: EdgeInsets.","tags":null,"title":"Login Screen","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-login-screen/","weight":33,"wordcount":207},{"author":null,"date":1636658610,"description":"Connect VS Code to a remote GitHub repository","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f29f68f72bbe8efc623321c92932e567","permalink":"https://fireship.io/courses/vscode-tricks/ide-remote/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-remote/","section":"courses","summary":"✨ Trick - Github Command Palette Visit Github in the browser and use it\u0026rsquo;s command palette by hitting ctrl+k. Or open VS Code from GitHub by hitting . from a repo.\n✨ Trick - Remote Repos You can also connect your local VS Code to a remote git repo. Click on the blue icon in the bottom left corner of VS Code to open the remote repositories panel. Authorize your account to access your repositories and edit them remotely.","tags":null,"title":"Remote","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-remote/","weight":33,"wordcount":79},{"author":null,"date":1636658610,"description":"Implement a Sign in with Apple button","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"f89a54701e1af5297e8e7a0c3f958c6d","permalink":"https://fireship.io/courses/flutter-firebase/auth-apple/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/auth-apple/","section":"courses","summary":"🚨 Video is a work in progress.\nRefer to the Official Guide.\nAs of April 2020, all native iOS apps that offer social auth methods (Google, Facebook, etc.) MUST also include Apple Sign In as an option. See the official guidance from Apple.\nSign in with Apple with Firebase file_type_flutter main.dart import \u0026#39;dart:convert\u0026#39;; import \u0026#39;dart:math\u0026#39;; import \u0026#39;package:crypto/crypto.dart\u0026#39;; import \u0026#39;package:sign_in_with_apple/sign_in_with_apple.dart\u0026#39;; class AuthService { // ... String generateNonce([int length = 32]) { const charset = \u0026#39;0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz-.","tags":null,"title":"Sign in with Apple","type":"courses","url":"https://fireship.io/courses/flutter-firebase/auth-apple/","weight":33,"wordcount":298},{"author":null,"date":1636658610,"description":"Ionic push notifications on the web","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6247f7b99714cada1275d0f4e032b3e8","permalink":"https://fireship.io/courses/ionic/fcm-web/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/fcm-web/","section":"courses","summary":"Bonus Video ","tags":null,"title":"Web Notifications","type":"courses","url":"https://fireship.io/courses/ionic/fcm-web/","weight":33,"wordcount":2},{"author":null,"date":1633723890,"description":"How inheritance works in in Dart","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"2276c329ece964b62179a8f0f9c5bc9c","permalink":"https://fireship.io/courses/dart/classes-extend/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-extend/","section":"courses","summary":"Superclass The superclass or parent class contains the behaviors that is shared by all subclasses. The abstract keyword is used to indicate that the class is not meant to be instantiated, but rather to be inherited from.\nfile_type_dartlang extend.dart abstract class Dog { void walk() { print(\u0026#39;walking...\u0026#39;); } } Subclass The subclass can @override the behavior of the superclass.\nfile_type_dartlang extend.dart class Pug extends Dog { String breed = \u0026#39;pug\u0026#39;; @override void walk() { super.","tags":null,"title":"Extend","type":"courses","url":"https://fireship.io/courses/dart/classes-extend/","weight":33,"wordcount":82},{"author":null,"date":1630869810,"description":"What the hell is a fork on GitHub?","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"517385a4e875a188f78f97d68bf91e37","permalink":"https://fireship.io/courses/git/collab-fork/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/git/collab-fork/","section":"courses","summary":"","tags":null,"title":"Fork","type":"courses","url":"https://fireship.io/courses/git/collab-fork/","weight":33,"wordcount":0},{"author":null,"date":1612207410,"description":"Render a feed of the latest posts with a collectionGroup query","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"48ee38ec8e5af13bba66c276a142c61f","permalink":"https://fireship.io/courses/react-next-firebase/ssr-home-page/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-home-page/","section":"courses","summary":"Firebase Lib Use this function to convert a Firestore timestamp to a number.\nfile_type_js lib/firebase.js export const fromMillis = firebase.firestore.Timestamp.fromMillis; Home Page Post Feed The first batch is rendered on the server, while all subsequent queries are executed clientside.\nfile_type_js pages/index.js import PostFeed from \u0026#39;../components/PostFeed\u0026#39;; import Loader from \u0026#39;../components/Loader\u0026#39;; import { firestore, fromMillis, postToJSON } from \u0026#39;../lib/firebase\u0026#39;; import { useState } from \u0026#39;react\u0026#39;; // Max post to query per page const LIMIT = 1; export async function getServerSideProps(context) { const postsQuery = firestore .","tags":null,"title":"SSR + Paginated Home Page Feed","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-home-page/","weight":33,"wordcount":213},{"author":null,"date":1605874290,"description":"Role-based access control example","dir":"courses/firebase-security/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"1ae729cb7d8d468884b7097edc8b4b49","permalink":"https://fireship.io/courses/firebase-security/advanced-roles-example/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/advanced-roles-example/","section":"courses","summary":"file_type_firebase firestore.rules rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /users/{userId} { allow read: if isSignedIn(); allow update, delete: if hasAnyRole([\u0026#39;admin\u0026#39;]); } match /posts/{postId} { allow read: if ( isSignedIn() \u0026amp;\u0026amp; resource.data.published ) || hasAnyRole([\u0026#39;admin\u0026#39;]); allow create: if isValidNewPost() \u0026amp;\u0026amp; hasAnyRole([\u0026#39;author\u0026#39;]); allow update: if isValidUpdatedPost() \u0026amp;\u0026amp; hasAnyRole([\u0026#39;author\u0026#39;, \u0026#39;editor\u0026#39;, \u0026#39;admin\u0026#39;]); allow delete: if hasAnyRole([\u0026#39;admin\u0026#39;]); } function isSignedIn() { return request.auth != null; } function hasAnyRole(roles) { return isSignedIn() \u0026amp;\u0026amp; get(/databases/$(database)/documents/users/$(request.","tags":null,"title":"Role-based Auth Example","type":"courses","url":"https://fireship.io/courses/firebase-security/advanced-roles-example/","weight":33,"wordcount":135},{"author":null,"date":1585769010,"description":"Query most recent messages in a subcollection of the chat room","dir":"courses/vue/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"3e9350b462737654ab01ec2e6cdf8538","permalink":"https://fireship.io/courses/vue/firestore-messages-query/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/firestore-messages-query/","section":"courses","summary":"ChatRoom Component ChatRoom.vue \u0026lt;template\u0026gt; \u0026lt;main class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Welcome to ChatRoom.vue {{ chatId }}\u0026lt;/h3\u0026gt; \u0026lt;User #user=\u0026#34;{ user }\u0026#34;\u0026gt; \u0026lt;div v-if=\u0026#34;user\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li v-for=\u0026#34;message of messages\u0026#34; :key=\u0026#34;message.id\u0026#34;\u0026gt; {{ message.text }} \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;input v-model=\u0026#34;newMessageText\u0026#34; class=\u0026#34;input\u0026#34; /\u0026gt; \u0026lt;button :disabled=\u0026#34;!newMessageText || loading\u0026#34; class=\u0026#34;button is-success\u0026#34; type=\u0026#34;text\u0026#34; @click=\u0026#34;addMessage(user.uid)\u0026#34; \u0026gt;Send\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;Login v-else /\u0026gt; \u0026lt;/User\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import User from \u0026#39;./User.vue\u0026#39;; import Login from \u0026#39;./Login.vue\u0026#39;; import { db, storage } from \u0026#39;../firebase\u0026#39;; export default { components: { User, Login }, data() { return { newMessageText: \u0026#39;\u0026#39;, loading: false, messages: [], } }, computed: { chatId() { return this.","tags":null,"title":"Query Messages","type":"courses","url":"https://fireship.io/courses/vue/firestore-messages-query/","weight":33,"wordcount":134},{"author":null,"date":1563305010,"description":"Protect routes with guards.","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"55fb1fb867c2f0160b115ff5704921a7","permalink":"https://fireship.io/courses/angular/user-auth-guard/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/user-auth-guard/","section":"courses","summary":"Use a router guard to protect routes from unauthorized users and show a snackbar error message.\nSteps Step 1 - Generate the Guard command line ng g guard user/auth file_type_ng_component_ts auth.guard.ts import { Injectable } from \u0026#39;@angular/core\u0026#39;; import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \u0026#39;@angular/router\u0026#39;; import { AngularFireAuth } from \u0026#39;@angular/fire/auth\u0026#39;; import { SnackService } from \u0026#39;../services/snack.service\u0026#39;; @Injectable({ providedIn: \u0026#39;root\u0026#39; }) export class AuthGuard implements CanActivate { constructor( private afAuth: AngularFireAuth, private snack: SnackService ) {} async canActivate( next: ActivatedRouteSnapshot, state: RouterStateSnapshot ): Promise\u0026lt;boolean\u0026gt; { const user = await this.","tags":null,"title":"Auth Guard","type":"courses","url":"https://fireship.io/courses/angular/user-auth-guard/","weight":33,"wordcount":196},{"author":null,"date":1668972210,"description":"Allows users to select custom usernames","dir":"courses/supabase/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"2ebf7cc55b5de3b7f488b7801558ba3b","permalink":"https://fireship.io/courses/supabase/auth-usernames/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/supabase/auth-usernames/","section":"courses","summary":"Updated listenToUserProfileChanges() function in use-session.ts:\nsync function listenToUserProfileChanges(userId: string) { const { data } = await supaClient .from(\u0026#34;user_profiles\u0026#34;) .select(\u0026#34;*\u0026#34;) .filter(\u0026#34;user_id\u0026#34;, \u0026#34;eq\u0026#34;, userId); if (data?.[0]) { setUserInfo({ ...userInfo, profile: data?.[0] }); } else { // this else clause is all you need to add! setReturnPath(); navigate(\u0026#34;/welcome\u0026#34;); } return supaClient .channel(`public:user_profiles`) .on( \u0026#34;postgres_changes\u0026#34;, { event: \u0026#34;*\u0026#34;, schema: \u0026#34;public\u0026#34;, table: \u0026#34;user_profiles\u0026#34;, filter: `user_id=eq.${userId}`, }, (payload) =\u0026gt; { setUserInfo({ ...userInfo, profile: payload.new as UserProfile }); } ) .","tags":null,"title":"Custom Usernames","type":"courses","url":"https://fireship.io/courses/supabase/auth-usernames/","weight":34,"wordcount":503},{"author":null,"date":1636658610,"description":"Use the debugger to inspect your code at runtime","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"177aec2bfdbc33af68637cc4cfb1c866","permalink":"https://fireship.io/courses/vscode-tricks/ide-debugger/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-debugger/","section":"courses","summary":"✨ Trick - Breakpoints \u0026amp; Logpoints Run your code with the debugger. Between the line numbers, click the red circles to create breakpoints to pause execution OR use logpoints to replace your typical console logs.\nBonus Video ","tags":null,"title":"Debugger","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-debugger/","weight":34,"wordcount":37},{"author":null,"date":1636658610,"description":"Ionic push notifications on iOS \u0026 Android","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"9862eb13df8e3e22073078b3228b4fc2","permalink":"https://fireship.io/courses/ionic/fcm-native/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/fcm-native/","section":"courses","summary":"","tags":null,"title":"Native Notifications","type":"courses","url":"https://fireship.io/courses/ionic/fcm-native/","weight":34,"wordcount":0},{"author":null,"date":1633723890,"description":"Use mixins to extend specific behaviors to classes","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"50c348bb274f9f3f7b3d57df0afefc4c","permalink":"https://fireship.io/courses/dart/classes-mixin/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-mixin/","section":"courses","summary":"What are mixins? A mixin is just like a class, it can have methods and properties, but it can\u0026rsquo;t be instantiated.\nfile_type_dartlang mixins.dart mixin Strong { bool doesLift = true; void benchPress() { print(\u0026#39;doing bench press...\u0026#39;); } } mixin Fast { bool doesRun = true; void sprint() { print(\u0026#39;running fast...\u0026#39;); } } What are mixins used for? Mixins are used to extend specific behaviors to classes with the with keyword. Certain Flutter libaries use mixins to extend shared behaviors to classes.","tags":null,"title":"Mixin","type":"courses","url":"https://fireship.io/courses/dart/classes-mixin/","weight":34,"wordcount":94},{"author":null,"date":1630869810,"description":"Submit a pull request (PR) on GitHub","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"bf492411acb6d88dc4ab4aa112f4ae30","permalink":"https://fireship.io/courses/git/collab-pull-request/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/collab-pull-request/","section":"courses","summary":"The stickers are gone, but feel free to submit a pull request on GitHub for practice.","tags":null,"title":"Pull Request","type":"courses","url":"https://fireship.io/courses/git/collab-pull-request/","weight":34,"wordcount":16},{"author":null,"date":1612207410,"description":"Use incremental static regeneration (ISR) to rebuild pages on the fly","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"ad8449312b24928fb67d18855292a905","permalink":"https://fireship.io/courses/react-next-firebase/ssr-isr/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/ssr-isr/","section":"courses","summary":"What is the advantage of ISR over SSG? Main Post Content Page This page is statically generated, BUT regenerated after new requests come in at an interval of 5000ms. If a prerendered page does not exist, will fallback to regular SSR.\nfile_type_js pages/username/slug.js import styles from \u0026#39;../../styles/Post.module.css\u0026#39;; import PostContent from \u0026#39;../../components/PostContent\u0026#39;; import { firestore, getUserWithUsername, postToJSON } from \u0026#39;../../lib/firebase\u0026#39;; import { useDocumentData } from \u0026#39;react-firebase-hooks/firestore\u0026#39;; export async function getStaticProps({ params }) { const { username, slug } = params; const userDoc = await getUserWithUsername(username); let post; let path; if (userDoc) { const postRef = userDoc.","tags":null,"title":"ISR Incremental Static Regeneration","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-isr/","weight":34,"wordcount":266},{"author":null,"date":1585769010,"description":"Build a UI component for showing the message text","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"7cef01b74523bddcd07a437f5e20d522","permalink":"https://fireship.io/courses/vue/firestore-message-ui/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/firestore-message-ui/","section":"courses","summary":"ChatRoom Component ChatMessage.vue \u0026lt;template\u0026gt; \u0026lt;div class=\u0026#34;message\u0026#34; :class=\u0026#34;{ \u0026#39;from-user\u0026#39;: owner }\u0026#34;\u0026gt; {{ message.text }} \u0026lt;br /\u0026gt; \u0026lt;audio v-if=\u0026#34;message.audioURL\u0026#34; :src=\u0026#34;message.audioURL\u0026#34; controls\u0026gt;\u0026lt;/audio\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;span class=\u0026#34;sender\u0026#34;\u0026gt;from UID {{ message.sender }}\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: [\u0026#39;message\u0026#39;, \u0026#39;owner\u0026#39;] }; \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .message { background: #dddddd; color: black; margin-left: 10px; margin-right: auto; border-radius: 5px; padding: 12px; display: inline-block; } .from-user { margin-right: 10px; margin-left: auto; background: #91bbff; } .sender { font-size: 0.5rem; } \u0026lt;/style\u0026gt; ","tags":null,"title":"Message UI","type":"courses","url":"https://fireship.io/courses/vue/firestore-message-ui/","weight":34,"wordcount":71},{"author":null,"date":1636658610,"description":"VS Code has an amazing HTTP client","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a3d31322f9db5258346b7c44a3f5faad","permalink":"https://fireship.io/courses/vscode-tricks/ide-http/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-http/","section":"courses","summary":"✨ Trick - Use VS Code as an HTTP Client Install the Thunder Client extension. You can now sent HTTP requests to your server or API and keep track of the history. This extension replaces tools like Postman.","tags":null,"title":"HTTP Client","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-http/","weight":35,"wordcount":38},{"author":null,"date":1636658610,"description":"Sign in with Apple on Flutter \u0026 Firebase to comply with the latest iOS requirements","dir":"courses/flutter-firebase-v1/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e95d44fb38f3ecf7c4550275956d943d","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-auth-apple-signin/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase-v1/project-auth-apple-signin/","section":"courses","summary":"🚨 As of April 2020, all native iOS apps that offer social auth methods (Google, Facebook, etc.) MUST also include Apple Sign In as an option. See the official guidance from Apple.\nSign in with Apple Setup Follow the steps outlined below to implement Sign In with Apple in a Flutter iOS app.\nThis section assumes that you are an Apple Developer member and have an existing team account linked to your iOS app.","tags":null,"title":"Sign In with Apple","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-auth-apple-signin/","weight":35,"wordcount":419},{"author":null,"date":1636658610,"description":"Deploy Ionic to Firebase Hosting as a PWA","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"1c121d400d2f1dd740c73022f699efa8","permalink":"https://fireship.io/courses/ionic/deploy-web/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/deploy-web/","section":"courses","summary":"","tags":null,"title":"Web Deployment","type":"courses","url":"https://fireship.io/courses/ionic/deploy-web/","weight":35,"wordcount":0},{"author":null,"date":1633723890,"description":"Use generics to parameterize types","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"85b351d3091ace20f03582a042aeb970","permalink":"https://fireship.io/courses/dart/classes-generics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/classes-generics/","section":"courses","summary":"What are Generics? Generics are a way to parameterize types. They allow a class to wrap a type, and then use that type in multiple places. For example, we can have a Box class that wraps an double or String type.\nfile_type_dartlang generics.dart Box\u0026lt;String\u0026gt; box1 = Box(\u0026#39;cool\u0026#39;); Box\u0026lt;double\u0026gt; box2 = Box(2.23); Using Generics in a Class A generic type is a type that can be used as a substitute for a type parameter.","tags":null,"title":"Generics","type":"courses","url":"https://fireship.io/courses/dart/classes-generics/","weight":35,"wordcount":88},{"author":null,"date":1612207410,"description":"Transition or hydrate server-rendered content to a realtime stream of data from Firestore","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"0d669adaeaaab6d8585dbbb2d4293809","permalink":"https://fireship.io/courses/react-next-firebase/ssr-hydration/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-hydration/","section":"courses","summary":"When does hydration need to happen? Hydrate Server Props to Realtime Data The post value will prefer the realtime value, but default to the server rendered content while it is loading.\nfile_type_js pages/username/slug.js import { useDocumentData } from \u0026#39;react-firebase-hooks/firestore\u0026#39;; export default function Post(props) { const postRef = firestore.doc(props.path); const [realtimePost] = useDocumentData(postRef); const post = realtimePost || props.post; return ( \u0026lt;main className={styles.container}\u0026gt; \u0026lt;section\u0026gt; \u0026lt;PostContent post={post} /\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;aside className=\u0026#34;card\u0026#34;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;{post.","tags":null,"title":"Realtime Data Hydration","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-hydration/","weight":35,"wordcount":79},{"author":null,"date":1587410610,"description":"React integration of Payment Intents API \u0026 Stripe Elements","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"169cc548a5dc26a79dc0ba9871255094","permalink":"https://fireship.io/courses/stripe-js/payments-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/payments-react/","section":"courses","summary":"React Payments UI Payments.js import React, { useState } from \u0026#39;react\u0026#39;; import { fetchFromAPI } from \u0026#39;./helpers\u0026#39;; import { CardElement, useStripe, useElements } from \u0026#39;@stripe/react-stripe-js\u0026#39;; function Payments() { const stripe = useStripe(); const elements = useElements(); const [amount, setAmount] = useState(0); const [paymentIntent, setPaymentIntent] = useState(); // Create a payment intent on the server const createPaymentIntent = async (event) =\u0026gt; { // Clamp amount to Stripe min/max const validAmount = Math.","tags":null,"title":"React","type":"courses","url":"https://fireship.io/courses/stripe-js/payments-react/","weight":35,"wordcount":185},{"author":null,"date":1636658610,"description":"Open VS Code to a Docker container","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ae433c1bffbe3293388b0825f5817aea","permalink":"https://fireship.io/courses/vscode-tricks/ide-docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/ide-docker/","section":"courses","summary":"✨ Trick - Dockerized Environment Click the remote button in the bottom left corner, then select Reopen in Container. This will create a Dockerfile and run the container for you. It\u0026rsquo;s a great way to test your code in environments that match your production server runtime.","tags":null,"title":"Docker","type":"courses","url":"https://fireship.io/courses/vscode-tricks/ide-docker/","weight":36,"wordcount":46},{"author":null,"date":1636658610,"description":"Deploy Ionic to the Apple App Store","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"30f8794801bad9419d6dc947325a5cd6","permalink":"https://fireship.io/courses/ionic/deploy-ios/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/deploy-ios/","section":"courses","summary":"","tags":null,"title":"iOS Deployment","type":"courses","url":"https://fireship.io/courses/ionic/deploy-ios/","weight":36,"wordcount":0},{"author":null,"date":1612207410,"description":"Render a custom 404 page for dynamic pages that do not exist.","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"d090c851009db5afb2663c404280c0a4","permalink":"https://fireship.io/courses/react-next-firebase/ssr-404/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-404/","section":"courses","summary":"Any page that is server rendered can redirect to a 404 if the data is not available.\nfile_type_js pages/username/index.js export async function getServerSideProps({ query }) { const { username } = query; const userDoc = await getUserWithUsername(username); // If no user, short circuit to 404 page if (!userDoc) { return { notFound: true, }; } } pages/404.js import Link from \u0026#39;next/link\u0026#39;; export default function Custom404() { return ( \u0026lt;main\u0026gt; \u0026lt;h1\u0026gt;404 - That page does not seem to exist.","tags":null,"title":"Custom 404 Page","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-404/","weight":36,"wordcount":94},{"author":null,"date":1636658610,"description":"Deploy Ionic to the Google Play Store","dir":"courses/ionic/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6d2241c2a9949d7668d46bc39f3d1856","permalink":"https://fireship.io/courses/ionic/deploy-android/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/ionic/deploy-android/","section":"courses","summary":"","tags":null,"title":"Android Deployment","type":"courses","url":"https://fireship.io/courses/ionic/deploy-android/","weight":37,"wordcount":0},{"author":null,"date":1612207410,"description":"Generate dynamic metatags for search engine optimization and social linkbots","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"4706df9adb274523e1dbed692f0f08f8","permalink":"https://fireship.io/courses/react-next-firebase/ssr-meta-tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/ssr-meta-tags/","section":"courses","summary":" Who created the Open Graph Protocol commonly used in metatags? Metatags Component file_type_js components/Metatags.js import Head from \u0026#39;next/head\u0026#39;; export default function Metatags({ title = \u0026#39;The Full Next.js + Firebase Course\u0026#39;, description = \u0026#39;A complete Next.js + Firebase course by Fireship.io\u0026#39;, image = \u0026#39;https://fireship.io/courses/react-next-firebase/img/featured.png\u0026#39;, }) { return ( \u0026lt;Head\u0026gt; \u0026lt;title\u0026gt;{title}\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;twitter:card\u0026#34; content=\u0026#34;summary\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;twitter:site\u0026#34; content=\u0026#34;@fireship_dev\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;twitter:title\u0026#34; content={title} /\u0026gt; \u0026lt;meta name=\u0026#34;twitter:description\u0026#34; content={description} /\u0026gt; \u0026lt;meta name=\u0026#34;twitter:image\u0026#34; content={image} /\u0026gt; \u0026lt;meta property=\u0026#34;og:title\u0026#34; content={title} /\u0026gt; \u0026lt;meta property=\u0026#34;og:description\u0026#34; content={description} /\u0026gt; \u0026lt;meta property=\u0026#34;og:image\u0026#34; content={image} /\u0026gt; \u0026lt;/Head\u0026gt; ); } ","tags":null,"title":"Metatags for SEO","type":"courses","url":"https://fireship.io/courses/react-next-firebase/ssr-meta-tags/","weight":37,"wordcount":84},{"author":null,"date":1668972210,"description":"Add end-to-end tests for the message board","dir":"courses/supabase/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"9e717e0c3a663ebd0f03c92c4b660d24","permalink":"https://fireship.io/courses/supabase/msg-board/","publishdate":"0001-01-01T00:00:00Z","readingtime":5,"relpermalink":"/courses/supabase/msg-board/","section":"courses","summary":"Look to future in the live version of the site: https://supaship.io\nLinks to e2e tests for the message board:\nhttps://github.com/fireship-io/supaship.io/blob/course-end-point/e2e/message-board.spec.ts https://github.com/fireship-io/supaship.io/blob/course-end-point/e2e/up-voting.spec.ts e2e/message-board.spec.ts\nimport test, { expect, Page } from \u0026#34;@playwright/test\u0026#34;; import { createComment, createPost, login, setupE2eTest, signUp, } from \u0026#34;./utils\u0026#34;; const testUserEmail = \u0026#34;test@test.io\u0026#34;; const testUserPassword = \u0026#34;test123567\u0026#34;; const testUserName = \u0026#34;test\u0026#34;; test.describe(\u0026#34;Message Board\u0026#34;, () =\u0026gt; { test.beforeEach(setupE2eTest); test.beforeEach(async ({ page }) =\u0026gt; { page.goto(\u0026#34;http://localhost:1337\u0026#34;); }); test.describe(\u0026#34;not logged in\u0026#34;, () =\u0026gt; { test(\u0026#34;can see message board, but cannot interact\u0026#34;, async ({ page }) =\u0026gt; { const messageBoardSignIn = page.","tags":null,"title":"Message Board Tests","type":"courses","url":"https://fireship.io/courses/supabase/msg-board/","weight":40,"wordcount":955},{"author":null,"date":1668194610,"description":"Initialize a vanilla JavaScript app with vite","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"ee309e4151febd12cd8f4c796017b2d8","permalink":"https://fireship.io/courses/js/app-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-setup/","section":"courses","summary":"Initial Setup In this lesson, we will create a vanilla JavaScript app with vite. Vite is a fast and lightweight development server that uses native ES modules to serve your code.\nThe app will also use OpenAI\u0026rsquo;s Image Generation API to create a unique image with its Dalle-2 model.\nnpm init vite@latest dream cd dream npm install npm run dev ","tags":null,"title":"Initial Setup","type":"courses","url":"https://fireship.io/courses/js/app-setup/","weight":40,"wordcount":60},{"author":null,"date":1636658610,"description":"Read and secure data with Firestore","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"eea3349acc1b8b693822c2d59430f8d5","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-firestore/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/project-firestore/","section":"courses","summary":"","tags":null,"title":"Basic Firestore","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-firestore/","weight":40,"wordcount":0},{"author":null,"date":1636658610,"description":"Model relationships between quiz entities in Firestore","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"d8b08e7e31df126fabba06059161700b","permalink":"https://fireship.io/courses/flutter-firebase/firestore-data-model/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/firestore-data-model/","section":"courses","summary":"In order to build an app identical to the live demo, you need to populate Firestore with data.\nTask: Populate your Database with Quiz Data I recommend cloning the Quiz Questions Repo. It is a node script that allows you to populate all the quiz data in your own database with a single command.\nAt the very least, create the following documents from the schema images below.\nOne document located at topics/my-topic.","tags":null,"title":"Database Model","type":"courses","url":"https://fireship.io/courses/flutter-firebase/firestore-data-model/","weight":40,"wordcount":116},{"author":null,"date":1636658610,"description":"Avoid common pitfalls when using VS Code","dir":"courses/vscode-tricks/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"c37cd66d99a8f51b72560da87fe5ace9","permalink":"https://fireship.io/courses/vscode-tricks/bonus-vscode-pitfalls/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/vscode-tricks/bonus-vscode-pitfalls/","section":"courses","summary":"","tags":null,"title":"Pitfalls","type":"courses","url":"https://fireship.io/courses/vscode-tricks/bonus-vscode-pitfalls/","weight":40,"wordcount":0},{"author":null,"date":1633723890,"description":"Deal with name conflicts when importing packages","dir":"courses/dart/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"0980b4efb401d10ac852bd3ac7e18f28","permalink":"https://fireship.io/courses/dart/advanced-packages/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/advanced-packages/","section":"courses","summary":"Namespace packages The easiest way to deal with name conflicts is to use a namespace package.\nfile_type_dartlang packages.dart import \u0026#39;somewhere.dart\u0026#39; as External; Exclude code from a package Exclude code from a package with the hide keyword.\nfile_type_dartlang packages.dart import \u0026#39;somewhere.dart\u0026#39; hide Circle; Isolate code from a package Import individual classes from a package with the show keyword.\nfile_type_dartlang packages.dart import \u0026#39;somewhere.dart\u0026#39; show Rectangle; ","tags":null,"title":"Packages","type":"courses","url":"https://fireship.io/courses/dart/advanced-packages/","weight":40,"wordcount":63},{"author":null,"date":1630869810,"description":"How to reset and deal with screw ups","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"2aab1f92f21a85ce89faa64ff5412a0a","permalink":"https://fireship.io/courses/git/advanced-reset/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-reset/","section":"courses","summary":"Unstage all staged files.\ncommand line git reset Rollback to a previous commit, BUT keep your changes in the working directory.\ncommand line git reset \u0026lt;commit-ID\u0026gt; Rollback to a previous commit AND discard all changes. Be careful with this one.\ncommand line git reset \u0026lt;commit-ID\u0026gt; --hard ","tags":null,"title":"git reset","type":"courses","url":"https://fireship.io/courses/git/advanced-reset/","weight":40,"wordcount":46},{"author":null,"date":1612207410,"description":"Create an AuthCheck component to render content for signed-in users","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"5dcc8fcf61dfcf4b30af16de520bbe8a","permalink":"https://fireship.io/courses/react-next-firebase/admin-auth-guard/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/admin-auth-guard/","section":"courses","summary":"Client-side security logic will keep your app 100% secure? Auth Check or Route Guard file_type_js components/AuthCheck.js import Link from \u0026#39;next/link\u0026#39;; import { useContext } from \u0026#39;react\u0026#39;; import { UserContext } from \u0026#39;../lib/context\u0026#39;; // Component\u0026#39;s children only shown to logged-in users export default function AuthCheck(props) { const { username } = useContext(UserContext); return username ? props.children : props.fallback || \u0026lt;Link href=\u0026#34;/enter\u0026#34;\u0026gt;You must be signed in\u0026lt;/Link\u0026gt;; } Usage in a Component file_type_js admin/index.","tags":null,"title":"Admin Pages","type":"courses","url":"https://fireship.io/courses/react-next-firebase/admin-auth-guard/","weight":40,"wordcount":88},{"author":null,"date":1605874290,"description":"Test security rules with Node.js","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"7de49d497f2e3d6f6283ecf93a7e5688","permalink":"https://fireship.io/courses/firebase-security/testing-setup/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/testing-setup/","section":"courses","summary":"Create the files test/rules.test.js and test/helpers.js.\nInstall Jest and the Firebase Testing Package.\ncommand line npm install --save-dev jest @firebase/rules-unit-testing firebase-admin Add the following script.\nfile_type_npm package.json \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;jest --env=node --forceExit\u0026#34;, }, ","tags":null,"title":"Unit Testing","type":"courses","url":"https://fireship.io/courses/firebase-security/testing-setup/","weight":40,"wordcount":34},{"author":"Jeff Delaney","date":1589975912,"description":"Learn the basics of Node.js in 7 easy steps","dir":"courses/javascript/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1589975912,"objectID":"7599ae6df742bf0b4b50a0d7f46f750f","permalink":"https://fireship.io/courses/javascript/node-basics/","publishdate":"2020-05-20T04:58:32-07:00","readingtime":2,"relpermalink":"/courses/javascript/node-basics/","section":"courses","summary":"Step 1 - What is Node? Node is a runtime that allows you to run JavaScript on the server. Learn more in the how JavaScript works section of this course.\nStep 2 - Install Node Follow these instructions to install NodeJS. This course uses Node version 12, nvm install 12.\nStep 3 - Hello world Create a JavaScript file.\nfile_type_js index.js console.log(\u0026#39;hello world\u0026#39;) Run it with node.\ncommand line node .","tags":["node"],"title":"Node.js Quickstart","type":"courses","url":"https://fireship.io/courses/javascript/node-basics/","weight":40,"wordcount":418},{"author":null,"date":1587410610,"description":"Manage Customers and Save Cards","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"34ecb718ba0ea6b39b880c0560613652","permalink":"https://fireship.io/courses/stripe-js/customers-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/customers-intro/","section":"courses","summary":"","tags":null,"title":"Customers and Saved Cards","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-intro/","weight":40,"wordcount":0},{"author":null,"date":1585769010,"description":"Record a stream from the user's microphone using the MediaRecorder API","dir":"courses/vue/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"bd05abb15a7b1a6e5c3d40d428a3e378","permalink":"https://fireship.io/courses/vue/storage-record-voice/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/storage-record-voice/","section":"courses","summary":"ChatRoom Component Add a voice recorder.\nChatRoom.vue \u0026lt;template\u0026gt; \u0026lt;main class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;!-- omitted... --\u0026gt; \u0026lt;h5\u0026gt;Record Audio\u0026lt;/h5\u0026gt; \u0026lt;button v-if=\u0026#34;!recorder\u0026#34; @click=\u0026#34;record()\u0026#34; class=\u0026#34;button is-info\u0026#34;\u0026gt;Record Voice\u0026lt;/button\u0026gt; \u0026lt;button v-else @click=\u0026#34;stop()\u0026#34; class=\u0026#34;button is-danger\u0026#34;\u0026gt;Stop\u0026lt;/button\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;audio v-if=\u0026#34;newAudio\u0026#34; :src=\u0026#34;newAudioURL\u0026#34; controls\u0026gt;\u0026lt;/audio\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;Login v-else /\u0026gt; \u0026lt;/User\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import User from \u0026#39;./User.vue\u0026#39;; import ChatMessage from \u0026#39;./ChatMessage.vue\u0026#39;; import Login from \u0026#39;./Login.vue\u0026#39;; import { db, storage } from \u0026#39;../firebase\u0026#39;; export default { components: { User, Login, ChatMessage, }, data() { return { newMessageText: \u0026#39;\u0026#39;, loading: false, messages: [], newAudio: null, recorder: null, } }, computed: { // omitted.","tags":null,"title":"Capture Audio","type":"courses","url":"https://fireship.io/courses/vue/storage-record-voice/","weight":40,"wordcount":165},{"author":null,"date":1563305010,"description":"Kanban feature module setup","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"3bcaa16bd3512eab9300209e34df7368","permalink":"https://fireship.io/courses/angular/kanban-module/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/kanban-module/","section":"courses","summary":"Setup another lazy-loaded feature module for the development of Kanban boards.\ncommand line ng g module kanban --routing ng g component kanban/board-list Add the necessary imports to the kanban module.\nfile_type_ng_component_ts kanban.module.ts import { NgModule } from \u0026#39;@angular/core\u0026#39;; import { CommonModule } from \u0026#39;@angular/common\u0026#39;; import { KanbanRoutingModule } from \u0026#39;./kanban-routing.module\u0026#39;; import { SharedModule } from \u0026#39;../shared/shared.module\u0026#39;; import { FormsModule } from \u0026#39;@angular/forms\u0026#39;; import { DragDropModule } from \u0026#39;@angular/cdk/drag-drop\u0026#39;; import { MatButtonToggleModule } from \u0026#39;@angular/material/button-toggle\u0026#39;; import { MatDialogModule } from \u0026#39;@angular/material/dialog\u0026#39;; @NgModule({ declarations: [], imports: [ CommonModule, KanbanRoutingModule, SharedModule, FormsModule, DragDropModule, MatDialogModule, MatButtonToggleModule, ] }) export class KanbanModule { } Lazy-load the kanban module.","tags":null,"title":"Kanban Module","type":"courses","url":"https://fireship.io/courses/angular/kanban-module/","weight":40,"wordcount":125},{"author":null,"date":1668972210,"description":"How to use Postgres extensions like LTREE","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"f2b892d6d65be3c9dd6be3b60697d029","permalink":"https://fireship.io/courses/supabase/msg-postgres-ext/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/msg-postgres-ext/","section":"courses","summary":"Postgres ltree documentation: https://www.postgresql.org/docs/current/ltree.html\nAdding an extension via sql:\ncreate extension \u0026lt;extension name\u0026gt; ","tags":null,"title":"Postgres Extensions","type":"courses","url":"https://fireship.io/courses/supabase/msg-postgres-ext/","weight":41,"wordcount":13},{"author":null,"date":1668194610,"description":"Learn the fundamentals of the HTTP request-response cycle","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"f11b545de3a14da1b0921702343a3079","permalink":"https://fireship.io/courses/js/app-rest/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-rest/","section":"courses","summary":" How is a POST request different from a GET request? ","tags":null,"title":"RESTful APIs","type":"courses","url":"https://fireship.io/courses/js/app-rest/","weight":41,"wordcount":10},{"author":null,"date":1636658610,"description":"Firestore document structure for quizzes.","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6aa5ebad04d529e32161adf05a01a40f","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-data-model/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-data-model/","section":"courses","summary":"In order to build an app identical to the live demo, you need to populate Firestore with data.\nPopulate your Database with Quiz Data I recommend cloning the Quiz Questions Repo. It is a node script that allows you to populate all the quiz data in your own database with a single command.\nDatabase Model You can also create your own data from scratch. Below you will find screenshots of sample quiz data for each collection.","tags":null,"title":"Database Model","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-data-model/","weight":41,"wordcount":92},{"author":null,"date":1636658610,"description":"How to use JSON Serializable with Firestore","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a29fb498b80e87e2ac122c4f9c9699ed","permalink":"https://fireship.io/courses/flutter-firebase/firestore-json-serializable/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/firestore-json-serializable/","section":"courses","summary":"JSON serializable provides a way to convert a dynamic Firestore Map to strongly typed Dart class instance.\nModels Create a file named models.dart in the services folder. Each document or object in the database will be represented by a class.\nI would recommend using null-safety for every property, then setting a default value if the property is in fact null in Firestore.\nfile_type_flutter services/models.dart import \u0026#39;package:json_annotation/json_annotation.dart\u0026#39;; part \u0026#39;models.g.dart\u0026#39;; @JsonSerializable() class Option { String value; String detail; bool correct; Option({this.","tags":null,"title":"JSON Serializable","type":"courses","url":"https://fireship.io/courses/flutter-firebase/firestore-json-serializable/","weight":41,"wordcount":266},{"author":null,"date":1633723890,"description":"Use a Future to handle a single async event","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"5aaea8780a75e935dc411531b8da416b","permalink":"https://fireship.io/courses/dart/advanced-future/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/advanced-future/","section":"courses","summary":"Create a Future Many APIs in Dart/Flutter return Futures. To simulate an async event, we can create a future that will resolve after a 5 second delay.\nfile_type_dartlang futures.dart var delay = Future.delayed(Duration(seconds: 5)); Handle a Future A future can either be a success or a error. Use then then to handle a successful resolution and catchError to handle an error.\nfile_type_dartlang futures.dart delay .then((value) =\u0026gt; print(\u0026#39;I have been waiting\u0026#39;)) .","tags":null,"title":"Future","type":"courses","url":"https://fireship.io/courses/dart/advanced-future/","weight":41,"wordcount":122},{"author":null,"date":1630869810,"description":"Undo a commit with out changing the course of history","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"ee1c6195311b55517227f82051d7cf15","permalink":"https://fireship.io/courses/git/advanced-revert/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-revert/","section":"courses","summary":"Undo a commit with a new commit\ncommand line git revert \u0026lt;commit-ID\u0026gt; -m \u0026#34;reverting last commit\u0026#34; ","tags":null,"title":"git revert","type":"courses","url":"https://fireship.io/courses/git/advanced-revert/","weight":41,"wordcount":16},{"author":null,"date":1612207410,"description":"Create a new post document in Firestore with a custom slug ID","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"0451cc56272de0cd6e5aa65d3e322e2f","permalink":"https://fireship.io/courses/react-next-firebase/admin-create-post/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/admin-create-post/","section":"courses","summary":"Install Lodash kebabCase command line npm i lodash.kebabcase Firebase Server Timestamp The server timestamp ensures data time-based data will be consistent for all users.\nfile_type_js lib/firebase.js export const serverTimestamp = firebase.firestore.FieldValue.serverTimestamp; Create a Post The post form will set default values for in Firestore. It will also generate a URI safe slug as the Firebase document ID.\nfile_type_js posts/admin/index.js import styles from \u0026#39;../../styles/Admin.module.css\u0026#39;; import AuthCheck from \u0026#39;../../components/AuthCheck\u0026#39;; import PostFeed from \u0026#39;.","tags":null,"title":"Create Data with Firestore","type":"courses","url":"https://fireship.io/courses/react-next-firebase/admin-create-post/","weight":41,"wordcount":299},{"author":null,"date":1605874290,"description":"Setup \u0026 Teardown mock Firestore data for testing","dir":"courses/firebase-security/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"b22c16a55fb101af43f875b373a79ac1","permalink":"https://fireship.io/courses/firebase-security/testing-helpers/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/testing-helpers/","section":"courses","summary":"Create a file to manage setup and teardown for tests.\nfile_type_js helpers.js const { loadFirestoreRules, initializeTestApp, clearFirestoreData, initializeAdminApp } = require(\u0026#39;@firebase/rules-unit-testing\u0026#39;); const { readFileSync } = require(\u0026#39;fs\u0026#39;); module.exports.setup = async (auth, data) =\u0026gt; { const projectId = `fireship-dev-17429`; const app = initializeTestApp({ projectId, auth }); // console.log(app.auth().currentUser) const db = app.firestore(); // Write mock documents before rules if (data) { const admin = initializeAdminApp({ projectId, }); for (const key in data) { const ref = admin.","tags":null,"title":"Setup \u0026 Teardown","type":"courses","url":"https://fireship.io/courses/firebase-security/testing-helpers/","weight":41,"wordcount":162},{"author":"Jeff Delaney","date":1589975912,"description":"A new TypeScript-first JavaScript runtime","dir":"courses/javascript/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1589975912,"objectID":"405a6b3183191302de7ac2ae4d1653ae","permalink":"https://fireship.io/courses/javascript/deno-basics/","publishdate":"2020-05-20T04:58:32-07:00","readingtime":0,"relpermalink":"/courses/javascript/deno-basics/","section":"courses","summary":"","tags":["node","deno","typescript"],"title":"Deno Quickstart","type":"courses","url":"https://fireship.io/courses/javascript/deno-basics/","weight":41,"wordcount":0},{"author":null,"date":1587410610,"description":"Add the Firebase SDKs to your server and frontend app","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"bd12233f8d3c4e3aa9609941a392f0bf","permalink":"https://fireship.io/courses/stripe-js/customers-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/customers-firebase/","section":"courses","summary":"Learn more about Firestore.\nServer Firebase Admin Setup command line npm install firebase-admin Download your service account, then add add it\u0026rsquo;s path as an environment variable.\nfile_type_config .env GOOGLE_APPLICATION_CREDENTIALS=\u0026#34;./service-account.json\u0026#34; file_type_typescript firebase.ts // Initialize Firebase Admin resources import * as firebaseAdmin from \u0026#39;firebase-admin\u0026#39;; firebaseAdmin.initializeApp(); export const db = firebaseAdmin.firestore(); export const auth = firebaseAdmin.auth(); React Firebase Setup command line npm install firebase reactfire App.js import { FirebaseAppProvider } from \u0026#39;reactfire\u0026#39;; export const firebaseConfig = { // your config }; ReactDOM.","tags":null,"title":"Firebase Setup","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-firebase/","weight":41,"wordcount":91},{"author":null,"date":1585769010,"description":"Upload the audio file to Firebase Storage and link it to a Firestore document","dir":"courses/vue/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"128b349911fe1ca721145d84c99627ee","permalink":"https://fireship.io/courses/vue/storage-upload-file/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/storage-upload-file/","section":"courses","summary":"Chat Room Component Add file uploads.\nChatRoom.vue \u0026lt;script\u0026gt; import { db, storage } from \u0026#39;../firebase\u0026#39;; export default { data() { return { newMessageText: \u0026#39;\u0026#39;, loading: false, messages: [], newAudio: null, recorder: null, } }, computed: { messagesCollection() { return db.doc(`chats/${this.chatId}`).collection(\u0026#39;messages\u0026#39;); }, newAudioURL() { return URL.createObjectURL(this.newAudio); } }, methods: { // omitted ... async addMessage(uid) { this.loading = true; let audioURL = null; const { id: messageId } = this.messagesCollection.doc(); if (this.","tags":null,"title":"Upload","type":"courses","url":"https://fireship.io/courses/vue/storage-upload-file/","weight":41,"wordcount":108},{"author":null,"date":1563305010,"description":"Firestore database model for kanban boards and backend security rules.","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"c03cfb152f30570a5247ef55e25ef1d5","permalink":"https://fireship.io/courses/angular/kanban-firestore-data/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/kanban-firestore-data/","section":"courses","summary":"Model the data in Firestore for the Kanban feature.\nLearn more about Data Modeling in Firestore.\nData Model file_type_ng_component_ts board.model.ts export interface Board { id?: string; title?: string; priority?: number; tasks?: Task[]; } export interface Task { description?: string; label?: \u0026#39;purple\u0026#39; | \u0026#39;blue\u0026#39; | \u0026#39;green\u0026#39; | \u0026#39;yellow\u0026#39; | \u0026#39;red\u0026#39; | \u0026#39;gray\u0026#39;; } Firestore Security Rules file_type_firebase firebase rules rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /boards/{document} { allow read; allow create: if requestMatchesUID(); allow update: if resourceMatchesUID() \u0026amp;\u0026amp; requestMatchesUID(); allow delete: if resourceMatchesUID(); } function requestMatchesUID() { return request.","tags":null,"title":"Firestore Data Model","type":"courses","url":"https://fireship.io/courses/angular/kanban-firestore-data/","weight":41,"wordcount":105},{"author":null,"date":1668972210,"description":"Learn how to model data in a relational database","dir":"courses/supabase/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"7ac4bc723d941747314f1b04c4cbf0c5","permalink":"https://fireship.io/courses/supabase/msg-data-model/","publishdate":"0001-01-01T00:00:00Z","readingtime":4,"relpermalink":"/courses/supabase/msg-data-model/","section":"courses","summary":"Link to final state of the original-ddl.sql: https://github.com/fireship-io/supaship.io/blob/course-end-point/supabase/migrations/20221116184131_original-ddl.sql\noriginal-ddl.sql:\ncreate extension ltree; create table user_profiles ( user_id uuid primary key references auth.users (id) not null, username text unique not null CONSTRAINT proper_username CHECK (username ~* \u0026#39;^[a-zA-Z0-9_]+$\u0026#39;) CONSTRAINT username_length CHECK (char_length(username) \u0026gt; 3 and char_length(username) \u0026lt; 15) ); create table posts ( id uuid primary key default uuid_generate_v4() not null, user_id uuid references auth.users (id) not null, created_at timestamp with time zone default now() not null, path ltree not null ); create table post_score ( post_id uuid primary key references posts (id) not null, score int not null ); create table post_contents ( id uuid primary key default uuid_generate_v4() not null, user_id uuid references auth.","tags":null,"title":"Normalized Data Modeling","type":"courses","url":"https://fireship.io/courses/supabase/msg-data-model/","weight":42,"wordcount":800},{"author":null,"date":1668194610,"description":"Use Node.js, Express, and OpenAI to create a text-to-image API","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"59df69e91b9f075ba53a1e920ad936ae","permalink":"https://fireship.io/courses/js/app-server/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-server/","section":"courses","summary":"Why do we store the API key as an env variable? Server Setup First, make sure to sign up for an OpenAI account and create an API key. Then store the API key in a file named .env. If it\u0026rsquo;s included in your .gitignore, this file will be ignored by Git so that you don\u0026rsquo;t accidentally share your API key with the world.\ntouch server.js npm i dotenv express cors openai node server.","tags":null,"title":"Text-to-Image Server","type":"courses","url":"https://fireship.io/courses/js/app-server/","weight":42,"wordcount":152},{"author":null,"date":1636658610,"description":"Data Organization and Deserialization","dir":"courses/flutter-firebase-v1/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"d7ee75caca6ae57737f4a93f58b0498b","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-firestore-advanced/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase-v1/project-firestore-advanced/","section":"courses","summary":"Data Models Model Firestore data as a Dart class.\nfile_type_dartlang models.dart class Option { String value; String detail; bool correct; Option({ this.correct, this.value, this.detail }); Option.fromMap(Map data) { value = data[\u0026#39;value\u0026#39;]; detail = data[\u0026#39;detail\u0026#39;] ?? \u0026#39;\u0026#39;; correct = data[\u0026#39;correct\u0026#39;]; } } class Question { String text; List\u0026lt;Option\u0026gt; options; Question({ this.options, this.text }); Question.fromMap(Map data) { text = data[\u0026#39;text\u0026#39;] ?? \u0026#39;\u0026#39;; options = (data[\u0026#39;options\u0026#39;] as List ?? []).map((v) =\u0026gt; Option.fromMap(v)).toList(); } } ///// Database Collections class Quiz { String id; String title; String description; String video; String topic; List\u0026lt;Question\u0026gt; questions; Quiz({ this.","tags":null,"title":"Advanced Firestore","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-firestore-advanced/","weight":42,"wordcount":419},{"author":null,"date":1636658610,"description":"Make basic queries to the Firestore database","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"c4b589cb7c217c4d27518dbe72cc5a5a","permalink":"https://fireship.io/courses/flutter-firebase/firestore-fetch/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/firestore-fetch/","section":"courses","summary":"Data Fetching Create a file named firestore.dart in the services directory of your project.\nfile_type_flutter firestore.dart import \u0026#39;dart:async\u0026#39;; import \u0026#39;package:cloud_firestore/cloud_firestore.dart\u0026#39;; import \u0026#39;package:rxdart/rxdart.dart\u0026#39;; import \u0026#39;package:quizapp/services/auth.dart\u0026#39;; import \u0026#39;package:quizapp/services/models.dart\u0026#39;; class FirestoreService { final FirebaseFirestore _db = FirebaseFirestore.instance; /// Reads all documments from the topics collection Future\u0026lt;List\u0026lt;Topic\u0026gt;\u0026gt; getTopics() async { var ref = _db.collection(\u0026#39;topics\u0026#39;); var snapshot = await ref.get(); var data = snapshot.docs.map((s) =\u0026gt; s.data()); var topics = data.map((d) =\u0026gt; Topic.fromJson(d)); return topics.toList(); } /// Retrieves a single quiz document Future\u0026lt;Quiz\u0026gt; getQuiz(String quizId) async { var ref = _db.","tags":null,"title":"Basic Data Fetching","type":"courses","url":"https://fireship.io/courses/flutter-firebase/firestore-fetch/","weight":42,"wordcount":96},{"author":null,"date":1633723890,"description":"Use a Stream to handle multiple async events","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1633723890,"objectID":"29f6d6c80d856d42e42468ecda81713b","permalink":"https://fireship.io/courses/dart/advanced-stream/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/advanced-stream/","section":"courses","summary":"Create a Stream A Stream provides a way to handle multiple async events. Simulate a stream of events by creating one from a list of numbers.\nfile_type_dartlang streams.dart var stream = Stream.fromIterable([1, 2, 3]); By default, a Stream can only have one listener. If you intend to have multiple listeners convert it to a broadcast stream.\nfile_type_dartlang streams.dart var stream = Stream.fromIterable([1, 2, 3]).asBroadcastStream(); Listen to a Stream Listen to a Stream by subscribing to it with the listen method.","tags":null,"title":"Stream","type":"courses","url":"https://fireship.io/courses/dart/advanced-stream/","weight":42,"wordcount":149},{"author":null,"date":1630869810,"description":"Update a commit message or add new files to last commit","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"a67e680f5192f500caa5b24c7fef47e2","permalink":"https://fireship.io/courses/git/advanced-amend/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-amend/","section":"courses","summary":"Update the message on your last commit:\ncommand line git commit --amend -m \u0026#34;better message\u0026#34; Include a file you forgot on your last commit.\ncommand line git add \u0026lt;your-file\u0026gt; git commit --amend --no-edit ","tags":null,"title":"git commit --amend","type":"courses","url":"https://fireship.io/courses/git/advanced-amend/","weight":42,"wordcount":33},{"author":null,"date":1612207410,"description":"Use react-hook-forms to create a form to edit posts in markdown","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"3fa10afee1916a9176cc3273038b9deb","permalink":"https://fireship.io/courses/react-next-firebase/admin-forms/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/admin-forms/","section":"courses","summary":"React Hook Form Package command line npm install react-hook-form Check out the official docs\nPost Editing Form file_type_js pages/admin/slug.js import styles from \u0026#39;../../styles/Admin.module.css\u0026#39;; import AuthCheck from \u0026#39;../../components/AuthCheck\u0026#39;; import { firestore, auth, serverTimestamp } from \u0026#39;../../lib/firebase\u0026#39;; import { useState } from \u0026#39;react\u0026#39;; import { useRouter } from \u0026#39;next/router\u0026#39;; import { useDocumentData } from \u0026#39;react-firebase-hooks/firestore\u0026#39;; import { useForm } from \u0026#39;react-hook-form\u0026#39;; import ReactMarkdown from \u0026#39;react-markdown\u0026#39;; import Link from \u0026#39;next/link\u0026#39;; import toast from \u0026#39;react-hot-toast\u0026#39;; export default function AdminPostEdit(props) { return ( \u0026lt;AuthCheck\u0026gt; \u0026lt;PostManager /\u0026gt; \u0026lt;/AuthCheck\u0026gt; ); } function PostManager() { const [preview, setPreview] = useState(false); const router = useRouter(); const { slug } = router.","tags":null,"title":"Post Editing Form","type":"courses","url":"https://fireship.io/courses/react-next-firebase/admin-forms/","weight":42,"wordcount":235},{"author":null,"date":1605874290,"description":"Write unit tests with mock data for Firestore Security Rules.","dir":"courses/firebase-security/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"aa2f964d621010cd400eeeb71d11b800","permalink":"https://fireship.io/courses/firebase-security/testing-rules/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/testing-rules/","section":"courses","summary":"command line firebase emulators:start file_type_js rules.test.js describe(\u0026#39;Database rules\u0026#39;, () =\u0026gt; { let db; // Applies only to tests in this describe block beforeAll(async () =\u0026gt; { db = await setup(mockUser, mockData); }); afterAll(async () =\u0026gt; { await teardown(); }); test(\u0026#39;deny when reading an unauthorized collection\u0026#39;, async () =\u0026gt; { const ref = db.collection(\u0026#39;secret-stuff\u0026#39;); expect( await assertFails( ref.get() ) ); }); test(\u0026#39;allow admin to read unpublished posts\u0026#39;, async () =\u0026gt; { const ref = db.","tags":null,"title":"Write Tests","type":"courses","url":"https://fireship.io/courses/firebase-security/testing-rules/","weight":42,"wordcount":108},{"author":null,"date":1587410610,"description":"How to decode the Firebase JSON web token with Express","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"db0ac308f35f72e720c9d8f7467fc630","permalink":"https://fireship.io/courses/stripe-js/customers-auth/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/customers-auth/","section":"courses","summary":"SignIn and SignOut in React App.js import firebase from \u0026#39;firebase/app\u0026#39;; import { auth, db } from \u0026#39;./firebase\u0026#39;; export function SignIn() { const signIn = async () =\u0026gt; { const credential = await auth.signInWithPopup( new firebase.auth.GoogleAuthProvider() ); const { uid, email } = credential.user; db.collection(\u0026#39;users\u0026#39;).doc(uid).set({ email }, { merge: true }); }; return ( \u0026lt;button onClick={signIn}\u0026gt; Sign In with Google \u0026lt;/button\u0026gt; ); } export function SignOut(props) { return props.user \u0026amp;\u0026amp; ( \u0026lt;button onClick={() =\u0026gt; auth.","tags":null,"title":"API Authentication","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-auth/","weight":42,"wordcount":292},{"author":null,"date":1585769010,"description":"Final thoughts and ideas to improve the quality of the app.","dir":"courses/vue/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1585769010,"objectID":"d6518775813744791c6781a010abdf45","permalink":"https://fireship.io/courses/vue/storage-final-thoughts/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/storage-final-thoughts/","section":"courses","summary":" Firestore Security Rules Cookbook ","tags":null,"title":"Wrap up","type":"courses","url":"https://fireship.io/courses/vue/storage-final-thoughts/","weight":42,"wordcount":4},{"author":null,"date":1563305010,"description":"Create a specialized Firestore database service for Kanban boards","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"d8cd2947e1b2b734a4eaa56da3ad459f","permalink":"https://fireship.io/courses/angular/kanban-database-service/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/kanban-database-service/","section":"courses","summary":"Separate all database logic into a dedicated service.\nDatabase Service file_type_ng_component_ts database.service.ts import { Injectable } from \u0026#39;@angular/core\u0026#39;; import { AngularFireAuth } from \u0026#39;@angular/fire/auth\u0026#39;; import { AngularFirestore } from \u0026#39;@angular/fire/firestore\u0026#39;; import firebase from \u0026#39;firebase/app\u0026#39;; import { switchMap, map } from \u0026#39;rxjs/operators\u0026#39;; import { Board, Task } from \u0026#39;./board.model\u0026#39;; @Injectable({ providedIn: \u0026#39;root\u0026#39; }) export class BoardService { constructor(private afAuth: AngularFireAuth, private db: AngularFirestore) {} /** * Creates a new board for the current user */ async createBoard(data: Board) { const user = await this.","tags":null,"title":"Database Service","type":"courses","url":"https://fireship.io/courses/angular/kanban-database-service/","weight":42,"wordcount":242},{"author":null,"date":1668972210,"description":"Build the UI for the feed of all posts","dir":"courses/supabase/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"7effe3f56428ff6514757751ea2317ab","permalink":"https://fireship.io/courses/supabase/msg-all-posts/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/supabase/msg-all-posts/","section":"courses","summary":"AllPosts.tsx:\nimport { useContext, useEffect, useState } from \u0026#34;react\u0026#34;; import { Link, useParams } from \u0026#34;react-router-dom\u0026#34;; import { UserContext } from \u0026#34;./App\u0026#34;; import { castVote } from \u0026#34;./cast-vote\u0026#34;; import { CreatePost } from \u0026#34;./CreatePost\u0026#34;; import { GetPostsResponse } from \u0026#34;./database.types\u0026#34;; import { supaClient } from \u0026#34;./supa-client\u0026#34;; import { timeAgo } from \u0026#34;./time-ago\u0026#34;; import { UpVote } from \u0026#34;./UpVote\u0026#34;; import { usePostScore } from \u0026#34;./use-post-score\u0026#34;; export function AllPosts() { const { session } = useContext(UserContext); const { pageNumber } = useParams(); const [bumper, setBumper] = useState(0); const [posts, setPosts] = useState\u0026lt;GetPostsResponse[]\u0026gt;([]); const [myVotes, setMyVotes] = useState\u0026lt; Record\u0026lt;string, \u0026#34;up\u0026#34; | \u0026#34;down\u0026#34; | undefined\u0026gt; \u0026gt;({}); useEffect(() =\u0026gt; { const queryPageNumber = pageNumber ?","tags":null,"title":"Post List","type":"courses","url":"https://fireship.io/courses/supabase/msg-all-posts/","weight":43,"wordcount":546},{"author":null,"date":1668194610,"description":"How to test your API with a REST client","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"c93de2817f16ff8a60692ba48e0b2607","permalink":"https://fireship.io/courses/js/app-rest-client/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-rest-client/","section":"courses","summary":"Why are REST clients useful? Rest Clients In this lesson, we will use a REST client built into VSCode called ThunderClient to test our API. It is much easier to test requests with a REST client than with a browser or command line. Other popular REST clients include Postman and Insomnia.","tags":null,"title":"Rest Client","type":"courses","url":"https://fireship.io/courses/js/app-rest-client/","weight":43,"wordcount":51},{"author":null,"date":1636658610,"description":"Connect a Firebase User to their Data in Firestore","dir":"courses/flutter-firebase-v1/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"70a8b5c1ad6efbd609cfb17b40d9e2ed","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-firestore-user/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-firestore-user/","section":"courses","summary":"User Data Service Create a generic service that can connect a user to the Firestore related to their UID.\nfile_type_dartlang db.dart class UserData\u0026lt;T\u0026gt; { final Firestore _db = Firestore.instance; final FirebaseAuth _auth = FirebaseAuth.instance; final String collection; UserData({ this.collection }); Stream\u0026lt;T\u0026gt; get documentStream { return _auth.onAuthStateChanged.switchMap((user) { if (user != null) { Document\u0026lt;T\u0026gt; doc = Document\u0026lt;T\u0026gt;(path: \u0026#39;$collection/${user.uid}\u0026#39;); return doc.streamData(); } else { return Stream\u0026lt;T\u0026gt;.value(null); } }); } Future\u0026lt;T\u0026gt; getDocument() async { FirebaseUser user = await _auth.","tags":null,"title":"Current User Data in Firestore","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-firestore-user/","weight":43,"wordcount":114},{"author":null,"date":1636658610,"description":"Fetch data associated to the current user","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"cfd3b993d2b1f7534581258ad6c3cecf","permalink":"https://fireship.io/courses/flutter-firebase/firestore-relational/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/firestore-relational/","section":"courses","summary":"Relational Data Fetching The pattern below is useful for listening to a realtime stream that depends on the current user\u0026rsquo;s UID. The switchmap extension method from RxDart is an essential tool for combining two streams.\nfile_type_flutter firestore.dart class FirestoreService { /// Listens to current user\u0026#39;s report document in Firestore Stream\u0026lt;Report\u0026gt; streamReport() { return AuthService().userStream.switchMap((user) { if (user != null) { var ref = _db.collection(\u0026#39;reports\u0026#39;).doc(user.uid); return ref.snapshots().map((doc) =\u0026gt; Report.fromJson(doc.data()!)); } else { return Stream.","tags":null,"title":"Relational Data Fetching","type":"courses","url":"https://fireship.io/courses/flutter-firebase/firestore-relational/","weight":43,"wordcount":77},{"author":null,"date":1630869810,"description":"Hold on to changes without committing them","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"1b70c8d209b1383fcc248814d6478007","permalink":"https://fireship.io/courses/git/advanced-stash/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-stash/","section":"courses","summary":"Basic way to create and apply a stash\ncommand line git stash git stash pop Manage your stashes more easily by giving them a name:\ncommand line git stash save coolstuff List out all stashes:\ncommand line git stash list Apply a stash based on its index:\ncommand line git stash apply 1 ","tags":null,"title":"git stash","type":"courses","url":"https://fireship.io/courses/git/advanced-stash/","weight":43,"wordcount":53},{"author":null,"date":1612207410,"description":"Add form validation with react-hook-forms","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"0d0b0c13a0d9f7e7c0a034c92ab6aebf","permalink":"https://fireship.io/courses/react-next-firebase/admin-form-validation/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/admin-form-validation/","section":"courses","summary":"Form Validation React Hook Form makes it easy to add reactive form validation.\nfile_type_js pages/admin/slug.js const { register, handleSubmit, reset, watch, formState, errors } = useForm({ defaultValues, mode: \u0026#39;onChange\u0026#39; }); const { isValid, isDirty } = formState; // ... \u0026lt;textarea name=\u0026#34;content\u0026#34; ref={register({ maxLength: { value: 20000, message: \u0026#39;content is too long\u0026#39; }, minLength: { value: 10, message: \u0026#39;content is too short\u0026#39; }, required: { value: true, message: \u0026#39;content is required\u0026#39;} })}\u0026gt; \u0026lt;/textarea\u0026gt; {errors.","tags":null,"title":"Form Validation","type":"courses","url":"https://fireship.io/courses/react-next-firebase/admin-form-validation/","weight":43,"wordcount":84},{"author":null,"date":1605874290,"description":"Debug rules using the Firestore code coverage report.","dir":"courses/firebase-security/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1605874290,"objectID":"a2f206e3b42342c9e2d1ec1316e93e39","permalink":"https://fireship.io/courses/firebase-security/testing-report/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/firebase-security/testing-report/","section":"courses","summary":"","tags":null,"title":"Debugging Report","type":"courses","url":"https://fireship.io/courses/firebase-security/testing-report/","weight":43,"wordcount":0},{"author":null,"date":1587410610,"description":"Create a Stripe customer record and attach it to a Firebase user.","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"1d663de54a6e439850b005d7e30afe13","permalink":"https://fireship.io/courses/stripe-js/customers-create/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/customers-create/","section":"courses","summary":"Get or Create a Stripe Customer file_type_typescript customers.ts /** * Gets the exsiting Stripe customer or creates a new record */ export async function getOrCreateCustomer(userId: string, params?: Stripe.CustomerCreateParams) { const userSnapshot = await db.collection(\u0026#39;users\u0026#39;).doc(userId).get(); const { stripeCustomerId, email } = userSnapshot.data(); // If missing customerID, create it if (!stripeCustomerId) { // CREATE new customer const customer = await stripe.customers.create({ email, metadata: { firebaseUID: userId }, ...params }); await userSnapshot.ref.update({ stripeCustomerId: customer.","tags":null,"title":"Create a Customer","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-create/","weight":43,"wordcount":84},{"author":null,"date":1563305010,"description":"Add drag and drop capabilities to a Material Card","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"0c957cc839a0964fa138125c592f3a82","permalink":"https://fireship.io/courses/angular/kanban-drag-drop/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/kanban-drag-drop/","section":"courses","summary":"Use the Angular CDK Drag and Drop Module to enable reordering of Kanban boards and tasks.\nSteps Step 1 - Initial Setup command line ng g c kanban/board-list ng g c kanban/board Point the kanban router to the board list\nfile_type_ng_component_ts kanban-routing.module.ts import { BoardListComponent } from \u0026#39;./board-list/board-list.component\u0026#39;; const routes: Routes = [ { path: \u0026#39;\u0026#39;, component: BoardListComponent } ]; Step 2 - Board List file_type_ng_component_ts board-list.component.ts import { Component, OnInit, OnDestroy } from \u0026#39;@angular/core\u0026#39;; import { CdkDragDrop, moveItemInArray } from \u0026#39;@angular/cdk/drag-drop\u0026#39;; import { Subscription } from \u0026#39;rxjs\u0026#39;; import { Board } from \u0026#39;.","tags":null,"title":"CDK Drag and Drop","type":"courses","url":"https://fireship.io/courses/angular/kanban-drag-drop/","weight":43,"wordcount":283},{"author":null,"date":1668972210,"description":"Build the UI for the post details","dir":"courses/supabase/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"c729153f635c251ebda4f5632122b135","permalink":"https://fireship.io/courses/supabase/msg-detail/","publishdate":"0001-01-01T00:00:00Z","readingtime":5,"relpermalink":"/courses/supabase/msg-detail/","section":"courses","summary":"Post.tsx:\nimport { useContext, useEffect, useMemo, useRef, useState } from \u0026#34;react\u0026#34;; import { useParams } from \u0026#34;react-router-dom\u0026#34;; import { UserContext } from \u0026#34;./App\u0026#34;; import { castVote } from \u0026#34;./cast-vote\u0026#34;; import { GetSinglePostWithCommentResponse } from \u0026#34;./database.types\u0026#34;; import { supaClient } from \u0026#34;./supa-client\u0026#34;; import { timeAgo } from \u0026#34;./time-ago\u0026#34;; import { UpVote } from \u0026#34;./UpVote\u0026#34;; import { usePostScore } from \u0026#34;./use-post-score\u0026#34;; import { SupashipUserInfo } from \u0026#34;./use-session\u0026#34;; export interface Post { id: string; author_name: string; title: string; content: string; score: number; created_at: string; path: string; } export interface Comment { id: string; author_name: string; content: string; score: number; created_at: string; path: string; comments: Comment[]; } interface PostDetailData { post: GetSinglePostWithCommentResponse | null; comments: GetSinglePostWithCommentResponse[]; myVotes?","tags":null,"title":"Post Detail","type":"courses","url":"https://fireship.io/courses/supabase/msg-detail/","weight":44,"wordcount":987},{"author":null,"date":1668194610,"description":"Build a UI for the Text-to-Image Web App","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"2925b654b0be4ac67161851f01763f6e","permalink":"https://fireship.io/courses/js/app-frontend/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-frontend/","section":"courses","summary":"The FormData object is closely related to which built-in JS class? Text-to-Image Frontend Code First, build out the HTML for the UI. It has a placeholder for the image and a simple form with a single textarea element.\nfile_type_html index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/svg+xml\u0026#34; href=\u0026#34;favicon.svg\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Vite App\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;main\u0026gt; \u0026lt;h1\u0026gt;AI Photo Generator\u0026lt;/h1\u0026gt; \u0026lt;div id=\u0026#34;result\u0026#34;\u0026gt; Image will appear here \u0026lt;/div\u0026gt; \u0026lt;form\u0026gt; \u0026lt;label for=\u0026#34;prompt\u0026#34;\u0026gt;Prompt\u0026lt;/label\u0026gt; \u0026lt;textarea name=\u0026#34;prompt\u0026#34; maxlength=\u0026#34;160\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;Dream\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;/main.","tags":null,"title":"Text-to-Image Frontend UI","type":"courses","url":"https://fireship.io/courses/js/app-frontend/","weight":44,"wordcount":179},{"author":null,"date":1636658610,"description":"Advanced techniques for writing data to Firestore","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5d3fedeaa85fc666a734b678c7870646","permalink":"https://fireship.io/courses/flutter-firebase/firestore-write/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/firestore-write/","section":"courses","summary":"Writing to Firestore file_type_flutter firestore.dart class FirestoreService { /// Updates the current user\u0026#39;s report document after completing quiz Future\u0026lt;void\u0026gt; updateUserReport(Quiz quiz) { var user = AuthService().user!; var ref = _db.collection(\u0026#39;reports\u0026#39;).doc(user.uid); var data = { \u0026#39;total\u0026#39;: FieldValue.increment(1), \u0026#39;topics\u0026#39;: { quiz.topic: FieldValue.arrayUnion([quiz.id]) } }; return ref.set(data, SetOptions(merge: true)); } } ","tags":null,"title":"Write to Firestore","type":"courses","url":"https://fireship.io/courses/flutter-firebase/firestore-write/","weight":44,"wordcount":48},{"author":null,"date":1630869810,"description":"Use git rebase to merge updates with a clean commit history","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"27bfd2f1c25eb7eb0571fe8c45054f95","permalink":"https://fireship.io/courses/git/advanced-rebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-rebase/","section":"courses","summary":"Rebase From a feature branch, rebase the latest changes from the master branch.\ncommand line git checkout feature git rebase master ","tags":null,"title":"git rebase","type":"courses","url":"https://fireship.io/courses/git/advanced-rebase/","weight":44,"wordcount":21},{"author":null,"date":1612207410,"description":"Create an image file uploader with Firebase storage","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"e2dc2a1c79822affe4700950424eb5f5","permalink":"https://fireship.io/courses/react-next-firebase/admin-image-uploads/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/admin-image-uploads/","section":"courses","summary":"How do you associate a Firebase user to a file upload? Upload State Changed Event file_type_js lib/firebase.js // Storage exports export const storage = firebase.storage(); export const STATE_CHANGED = firebase.storage.TaskEvent.STATE_CHANGED; Image Uploader Component file_type_js components/ImageUploader.js import { useState } from \u0026#39;react\u0026#39;; import { auth, storage, STATE_CHANGED } from \u0026#39;../lib/firebase\u0026#39;; import Loader from \u0026#39;./Loader\u0026#39;; // Uploads images to Firebase Storage export default function ImageUploader() { const [uploading, setUploading] = useState(false); const [progress, setProgress] = useState(0); const [downloadURL, setDownloadURL] = useState(null); // Creates a Firebase Upload Task const uploadFile = async (e) =\u0026gt; { // Get the file const file = Array.","tags":null,"title":"Image Uploads","type":"courses","url":"https://fireship.io/courses/react-next-firebase/admin-image-uploads/","weight":44,"wordcount":204},{"author":null,"date":1587410610,"description":"Save a card for future payments \u0026 list all available cards","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"e87f69cb6de9670c6bd550a77424eea4","permalink":"https://fireship.io/courses/stripe-js/customers-save-card/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/customers-save-card/","section":"courses","summary":"Save and List Credit Cards file_type_typescript customers.ts /** * Creates a SetupIntent used to save a credit card for later use */ export async function createSetupIntent(userId: string) { const customer = await getOrCreateCustomer(userId); return stripe.setupIntents.create({ customer: customer.id, }) } /** * Returns all payment sources associated to the user */ export async function listPaymentMethods(userId: string) { const customer = await getOrCreateCustomer(userId); return stripe.paymentMethods.list({ customer: customer.id, type: \u0026#39;card\u0026#39;, }); } API Endpoints file_type_typescript api.","tags":null,"title":"Save and List Card","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-save-card/","weight":44,"wordcount":141},{"author":null,"date":1563305010,"description":"Animate the CDK Drag and Drop events with CSS transitions","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"ba15bb9157c4ab7d7301c9e1958425a3","permalink":"https://fireship.io/courses/angular/kanban-animation/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/kanban-animation/","section":"courses","summary":"Animate the the CDK Drag \u0026amp; Drop elements using CSS transitions.\nFull Styles board.scss boards-list.scss Animation Styles Board List file_type_html board-list.component.scss .cdk-drag-placeholder { opacity: 0.2; width: 350px; border: 5px dashed gray; margin: 0 10px; } .cdk-drag-animating { transition: transform 300ms ease; } .cdk-drop-list-dragging .cdk-drag { transition: transform 300ms ease; } Board file_type_html board.component.scss .cdk-drag-placeholder { opacity: 0.5; } .cdk-drag-animating { transition: transform 300ms ease; } .cdk-drop-list-dragging .cdk-drag { transition: transform 300ms ease; } .","tags":null,"title":"Drag and Drop Animation","type":"courses","url":"https://fireship.io/courses/angular/kanban-animation/","weight":44,"wordcount":111},{"author":null,"date":1668972210,"description":"Implement Reddit-style upvotes on posts","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"c17704e3ebe99f4d4fb95d2dcec17b55","permalink":"https://fireship.io/courses/supabase/msg-upvotes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/msg-upvotes/","section":"courses","summary":"cast-vote.ts:\nimport { supaClient } from \u0026#34;./supa-client\u0026#34;; export async function castVote({ postId, userId, voteType, onSuccess = () =\u0026gt; {}, }: { postId: string; userId: string; voteType: \u0026#34;up\u0026#34; | \u0026#34;down\u0026#34;; onSuccess?: () =\u0026gt; void; }) { await supaClient.from(\u0026#34;post_votes\u0026#34;).upsert( { post_id: postId, user_id: userId, vote_type: voteType, }, { onConflict: \u0026#34;post_id,user_id\u0026#34; } ); onSuccess(); } use-post-score.ts\nimport { RealtimeChannel } from \u0026#34;@supabase/supabase-js\u0026#34;; import { useEffect, useState } from \u0026#34;react\u0026#34;; import { supaClient } from \u0026#34;.","tags":null,"title":"Upvotes","type":"courses","url":"https://fireship.io/courses/supabase/msg-upvotes/","weight":45,"wordcount":156},{"author":null,"date":1668194610,"description":"Show a loading indicator while the app is fetching data","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"41ebdc8db5cbad48b97c68d2d978fe56","permalink":"https://fireship.io/courses/js/app-loader/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-loader/","section":"courses","summary":" What state should a button typically be in when the app performing an async operation? Let\u0026rsquo;s add a loading indicator to our UI that replaces the text inside the submit button.\nLoading Code function showSpinner() { const button = document.querySelector(\u0026#39;button\u0026#39;); button.disabled = true; button.innerHTML = \u0026#39;Dreaming... \u0026lt;span class=\u0026#34;spinner\u0026#34;\u0026gt;🧠\u0026lt;/span\u0026gt;\u0026#39;; } function hideSpinner() { const button = document.querySelector(\u0026#39;button\u0026#39;); button.disabled = false; button.innerHTML = \u0026#39;Dream\u0026#39;; } ","tags":null,"title":"Loading Spinner","type":"courses","url":"https://fireship.io/courses/js/app-loader/","weight":45,"wordcount":63},{"author":null,"date":1630869810,"description":"How to use git rebase to squash your commits","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"a60fbc0335846c7c9b2ef0159e7d0a84","permalink":"https://fireship.io/courses/git/advanced-squash/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-squash/","section":"courses","summary":"Start an interactive rebase from a feature, then choose the squash commend to flatten your commits into a single message.\ncommand line git rebase master --interactive ","tags":null,"title":"Squash","type":"courses","url":"https://fireship.io/courses/git/advanced-squash/","weight":45,"wordcount":26},{"author":null,"date":1563305010,"description":"Create, update, delete data from a Material Dialog modal popup","dir":"courses/angular/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"55c2af1b9799aa358f6d80b30819b437","permalink":"https://fireship.io/courses/angular/kanban-dialogs/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/angular/kanban-dialogs/","section":"courses","summary":"Use Material dialogs to create and update the data associated with boards and tasks.\nSteps Generate the Dialogs command line ng g c kanban/dialogs/board-dialog --flat --entry-component -s -t ng g c kanban/dialogs/task-dialog --flat --entry-component -s -t Step 2 - Board Dialog Create the board dialog component.\nfile_type_ng_component_ts board-dialog.component.ts import { Component, Inject } from \u0026#39;@angular/core\u0026#39;; import { MatDialogRef, MAT_DIALOG_DATA } from \u0026#39;@angular/material/dialog\u0026#39;; @Component({ selector: \u0026#39;app-board-dialog\u0026#39;, template: ` \u0026lt;h1 mat-dialog-title\u0026gt;Board\u0026lt;/h1\u0026gt; \u0026lt;div mat-dialog-content\u0026gt; \u0026lt;p\u0026gt;What shall we call this board?","tags":null,"title":"Dialogs","type":"courses","url":"https://fireship.io/courses/angular/kanban-dialogs/","weight":45,"wordcount":559},{"author":null,"date":1668194610,"description":"Handle errors gracefullly on the client and server","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"659af2d797732221b67438a20f185406","permalink":"https://fireship.io/courses/js/app-error-handling/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/app-error-handling/","section":"courses","summary":"What is the usual way to handle errors in an async function? Server Error Handling Errors can happen on the server when the user submits bad data from the form. Let\u0026rsquo;s catch the errors and send a useful message back to the client.\napp.post(\u0026#39;/dream\u0026#39;, async (req, res) =\u0026gt; { try { // main code here } catch (error) { console.error(error) res.status(500).send(error?.response.data.error.message || \u0026#39;Something went wrong\u0026#39;); } }); Frontend Error Handling When the server fails, we can check the response status and display an error message to the user.","tags":null,"title":"Error Handling","type":"courses","url":"https://fireship.io/courses/js/app-error-handling/","weight":46,"wordcount":111},{"author":null,"date":1630869810,"description":"Implement continuous integration and deployment CI/CD with GitHub Actions","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"8caf7e217c59e2176c3d46e56a405202","permalink":"https://fireship.io/courses/git/advanced-actions/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-actions/","section":"courses","summary":"Also see the GitHub Actions Guide","tags":null,"title":"GitHub Actions","type":"courses","url":"https://fireship.io/courses/git/advanced-actions/","weight":46,"wordcount":6},{"author":null,"date":1563305010,"description":"Create a confirmable delete button","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"a92666bab109b318b4dd3e2b29a06c0d","permalink":"https://fireship.io/courses/angular/kanban-delete-button/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/kanban-delete-button/","section":"courses","summary":"Create a delete button that confirms the operation before sending the write to the database.\nSteps Step 1 - Generate the Component command line ng g c shared/delete-button Step 2 - Delete Button Component The delete button component is just UI (dumb component), meaning it only emits an event with the user\u0026rsquo;s delete intention. The parent component handles the actual database write.\nfile_type_ng_component_ts delete-button.component.ts import { Component, Output, EventEmitter } from \u0026#39;@angular/core\u0026#39;; @Component({ selector: \u0026#39;app-delete-button\u0026#39;, templateUrl: \u0026#39;.","tags":null,"title":"Delete Button","type":"courses","url":"https://fireship.io/courses/angular/kanban-delete-button/","weight":46,"wordcount":157},{"author":null,"date":1630869810,"description":"A list of advanced git techniques for boosting productivity","dir":"courses/git/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630869810,"objectID":"bedd04594c0d899a9ac6ee54162b0790","permalink":"https://fireship.io/courses/git/advanced-bonus-tips/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/advanced-bonus-tips/","section":"courses","summary":"Let\u0026rsquo;s wrap up the course with a fun breakdown of some advanced git techniques that will increase your producivity.","tags":null,"title":"Advanced Git Tips","type":"courses","url":"https://fireship.io/courses/git/advanced-bonus-tips/","weight":47,"wordcount":19},{"author":null,"date":1587410610,"description":"SignIn with Firebase, then save a credit card to the customer account.","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"13822905a20abb48750135c2ed7acd85","permalink":"https://fireship.io/courses/stripe-js/customers-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/customers-react/","section":"courses","summary":"App.js import React, { useState, useEffect, Suspense } from \u0026#39;react\u0026#39;; import { fetchFromAPI } from \u0026#39;./helpers\u0026#39;; import { CardElement, useStripe, useElements } from \u0026#39;@stripe/react-stripe-js\u0026#39;; import { useUser, AuthCheck } from \u0026#39;reactfire\u0026#39;; import firebase from \u0026#39;firebase/app\u0026#39;; import { auth, db } from \u0026#39;./firebase\u0026#39;; function SaveCard(props) { const stripe = useStripe(); const elements = useElements(); const user = useUser(); const [setupIntent, setSetupIntent] = useState(); const [wallet, setWallet] = useState([]); // Get the user\u0026#39;s wallet on mount useEffect(() =\u0026gt; { getWallet(); }, [user]); // Create the setup intent const createSetupIntent = async (event) =\u0026gt; { const si = await fetchFromAPI(\u0026#39;wallet\u0026#39;); setSetupIntent(si); }; // Handle the submission of card details const handleSubmit = async (event) =\u0026gt; { event.","tags":null,"title":"React","type":"courses","url":"https://fireship.io/courses/stripe-js/customers-react/","weight":47,"wordcount":256},{"author":null,"date":1668972210,"description":"Setup your database for production deployment","dir":"courses/supabase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"63d1b585dc0692ec403ade4f6021dc0e","permalink":"https://fireship.io/courses/supabase/deploy-db/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/deploy-db/","section":"courses","summary":"Command to link to your production db (requires your DB password and your access token):\nnpx supabase link --project-ref=\u0026lt;ref in your supabase url\u0026gt; --password=\u0026lt;db password\u0026gt; Link to create a new access token: https://app.supabase.com/account/tokens\nCommand to store your access token:\nnpx supabase login Command to push your local migrations to production (requires DB password):\nnpx supabase db push Command to generate new migration file on your local instance:\nnpx supabase migration new \u0026lt;migration name\u0026gt; Command to check what migrations will be pushed before you push them (requires DB password):","tags":null,"title":"Database Deployment","type":"courses","url":"https://fireship.io/courses/supabase/deploy-db/","weight":50,"wordcount":114},{"author":null,"date":1668194610,"description":"All the reasons people hate JavaScript","dir":"courses/js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668194610,"objectID":"dc407604008a51167dd143875ed1bc40","permalink":"https://fireship.io/courses/js/bonus-haters/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/bonus-haters/","section":"courses","summary":"Coming Soon\u0026hellip; JavaScript for the Haters will drop on Thanksgiving, November 24th, 2022.","tags":null,"title":"JavaScript for the Haters","type":"courses","url":"https://fireship.io/courses/js/bonus-haters/","weight":50,"wordcount":13},{"author":null,"date":1636658610,"description":"Use a GridView to display a Firestore collection query","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"49cd545fda0005dc988587c0c0aeba6b","permalink":"https://fireship.io/courses/flutter-firebase/topics-screen/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/topics-screen/","section":"courses","summary":"GridView First, use a FutureBuilder to load the collection query.\nSecond, use a Flutter GridView to display the topics from Firestore in a scrollable two-column grid.\nfile_type_flutter topics.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:font_awesome_flutter/font_awesome_flutter.dart\u0026#39;; import \u0026#39;package:quizapp/services/services.dart\u0026#39;; import \u0026#39;package:quizapp/shared/shared.dart\u0026#39;; import \u0026#39;package:quizapp/topics/topic_item.dart\u0026#39;; class TopicsScreen extends StatelessWidget { const TopicsScreen({super.key}); @override Widget build(BuildContext context) { return FutureBuilder\u0026lt;List\u0026lt;Topic\u0026gt;\u0026gt;( future: FirestoreService().getTopics(), builder: (context, snapshot) { if (snapshot.connectionState == ConnectionState.waiting) { return const LoadingScreen(); } else if (snapshot.hasError) { return Center( child: ErrorMessage(message: snapshot.","tags":null,"title":"Topics Grid","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-screen/","weight":50,"wordcount":134},{"author":null,"date":1636658610,"description":"Use GridView to list Firestore data","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"117f4770a39720ca94c5a4c1be8fd9ac","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-topic-screen/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-topic-screen/","section":"courses","summary":"Reference the Topics Screen Source on Github","tags":null,"title":"Topics Screen","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-topic-screen/","weight":50,"wordcount":7},{"author":null,"date":1612207410,"description":"Create a many-to-many relationship where users can heart many posts","dir":"courses/react-next-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"23376e00d0b77ffb24a379b37d132f40","permalink":"https://fireship.io/courses/react-next-firebase/hearts-create/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/hearts-create/","section":"courses","summary":"Heart Button file_type_js components/HeartButton.js import { firestore, auth, increment } from \u0026#39;../lib/firebase\u0026#39;; import { useDocument } from \u0026#39;react-firebase-hooks/firestore\u0026#39;; // Allows user to heart or like a post export default function Heart({ postRef }) { // Listen to heart document for currently logged in user const heartRef = postRef.collection(\u0026#39;hearts\u0026#39;).doc(auth.currentUser.uid); const [heartDoc] = useDocument(heartRef); // Create a user-to-post relationship const addHeart = async () =\u0026gt; { const uid = auth.currentUser.uid; const batch = firestore.","tags":null,"title":"Hearts, Likes, Claps","type":"courses","url":"https://fireship.io/courses/react-next-firebase/hearts-create/","weight":50,"wordcount":158},{"author":null,"date":1587410610,"description":"Use Stripe billing to manage customers and their payment history","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"04c27650701c3fa2d7baa4140ccee92f","permalink":"https://fireship.io/courses/stripe-js/billing-intro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/billing-intro/","section":"courses","summary":"","tags":null,"title":"Billing","type":"courses","url":"https://fireship.io/courses/stripe-js/billing-intro/","weight":50,"wordcount":0},{"author":null,"date":1563305010,"description":"Key concepts related to SSR and Angular Universal","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"8d710d5fa5a4051bc667856e5ff8fbe2","permalink":"https://fireship.io/courses/angular/ssr-concepts/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/ssr-concepts/","section":"courses","summary":"Determine the best rendering strategy for your use-case. You may not need SSR at all if the app does not care about search engine bots or social media link bots.\nStrategies Server-side Rendering (SSR) Renders the app on every request Requires a NodeJS server Prerendering Renders the app at build-time Can be deployed to Firebase Hosting Routes must be known in advance ","tags":null,"title":"Server-side Rendering - What? Why? How?","type":"courses","url":"https://fireship.io/courses/angular/ssr-concepts/","weight":50,"wordcount":62},{"author":null,"date":1668972210,"description":"Setup your auth providers for production deployment","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"b717b79df49f28700de93f586d7a6712","permalink":"https://fireship.io/courses/supabase/deploy-auth/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/deploy-auth/","section":"courses","summary":" Link to Supabase auth providers: https://supabase.com/docs/guides/auth Link to Supaship GCP OAuth walktrhough (with timestamp): https://www.youtube.com/watch?v=tUm1AlaMcMQ\u0026amp;t=350s Supabase Google Guide: https://supabase.com/docs/guides/auth/auth-google ","tags":null,"title":"Authentication Deployment","type":"courses","url":"https://fireship.io/courses/supabase/deploy-auth/","weight":51,"wordcount":19},{"author":null,"date":1636658610,"description":"Create beautiful transitions between screens the with the Hero widget","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"201c7c83a82b4f727ccd2cf0a7bf6353","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-hero-animation/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-hero-animation/","section":"courses","summary":"Hero Animation Example file_type_dartlang topics.dart class TopicScreen extends StatelessWidget { final Topic topic; TopicScreen({this.topic}); @override Widget build(BuildContext context) { return Scaffold( /// ... body: ListView(children: [ Hero( tag: topic.img, child: Image.asset(\u0026#39;assets/covers/${topic.img}\u0026#39;, width: MediaQuery.of(context).size.width), ), /// ... ]), ); } } ","tags":null,"title":"Hero Animation","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-hero-animation/","weight":51,"wordcount":40},{"author":null,"date":1636658610,"description":"Create beautiful transitions between screens the with the Hero widget","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"152d7367bfc39c9ace8f03a0b14cde74","permalink":"https://fireship.io/courses/flutter-firebase/topics-hero-animation/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/topics-hero-animation/","section":"courses","summary":"Task: Image Assets Grab the image assets from the full source code and copy them into the assets folder in your project. Update the pubspec.yaml file to include the image assets.\nfile_type_flutter pubspec.yaml flutter: uses-material-design: true assets: - assets/ - assets/covers/ - assets/congrats.gif Topic Card Create a file called topic_item.dart in the topics folder. Create a card to represent an individual topic.\nfile_type_dartlang topics_item.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:quizapp/services/models.dart\u0026#39;; import \u0026#39;package:quizapp/shared/progress_bar.dart\u0026#39;; class TopicItem extends StatelessWidget { final Topic topic; const TopicItem({super.","tags":null,"title":"Hero Animation","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-hero-animation/","weight":51,"wordcount":246},{"author":null,"date":1587410610,"description":"Add a customer to a paid subscription plan","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"3c5c89e465de5a488854c15e635b2217","permalink":"https://fireship.io/courses/stripe-js/billing-create-subscription/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/billing-create-subscription/","section":"courses","summary":"Webhooks NOTE. I also highly recommend listening to the customer.subscription.created to update Firestore when a new subscription is created and/or customer.subscription.deleted for cancellations. See the full source code for implementation examples.\nCreate a Subscription for Existing Customer file_type_typescript billing.ts import { stripe } from \u0026#39;./\u0026#39;; import { db } from \u0026#39;./firebase\u0026#39;; import Stripe from \u0026#39;stripe\u0026#39;; import { getOrCreateCustomer } from \u0026#39;./customers\u0026#39;; import { firestore } from \u0026#39;firebase-admin\u0026#39;; /** * Attaches a payment method to the Stripe customer, * subscribes to a Stripe plan, and saves the plan to Firestore */ export async function createSubscription( userId: string, plan: string, payment_method: string ) { const customer = await getOrCreateCustomer(userId); // Attach the payment method to the customer await stripe.","tags":null,"title":"Create a Subscription","type":"courses","url":"https://fireship.io/courses/stripe-js/billing-create-subscription/","weight":51,"wordcount":228},{"author":null,"date":1563305010,"description":"Create a service for Open Graph \u0026 Twitter meta tags.","dir":"courses/angular/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"0431c5924fe78f9aa51d1b7b2df7b807","permalink":"https://fireship.io/courses/angular/ssr-seo-service/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/ssr-seo-service/","section":"courses","summary":"Create a customers module that uses dynamic routing and generates SEO metatags based on a Firestore document query.\nSteps Generate Resources command line ng g module customers --routing ng g c customers/detail-page ng g c customers/list-page ng g s services/seo Routing file_type_ng_component_ts customers-routing.module.ts import { NgModule } from \u0026#39;@angular/core\u0026#39;; import { Routes, RouterModule } from \u0026#39;@angular/router\u0026#39;; import { ListPageComponent } from \u0026#39;./list-page/list-page.component\u0026#39;; import { DetailPageComponent } from \u0026#39;./detail-page/detail-page.component\u0026#39;; const routes: Routes = [ { path: \u0026#39;\u0026#39;, component: ListPageComponent }, { path: \u0026#39;:id\u0026#39;, component: DetailPageComponent } ]; @NgModule({ imports: [RouterModule.","tags":null,"title":"SEO Service","type":"courses","url":"https://fireship.io/courses/angular/ssr-seo-service/","weight":51,"wordcount":376},{"author":null,"date":1636658610,"description":"Build an animated progress bar from scratch","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"3c9959a0f9eeb956012dd96cadef09d3","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-animated-progressbar/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-animated-progressbar/","section":"courses","summary":"Reference the Animated Progress Bar source","tags":null,"title":"Animated Progress Bar","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-animated-progressbar/","weight":52,"wordcount":6},{"author":null,"date":1636658610,"description":"Listen to a realtime Firestore document globally with Provider","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"ca3c7b7a1e30e6fc35aaf99f1f98317d","permalink":"https://fireship.io/courses/flutter-firebase/topics-stream-provider/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/topics-stream-provider/","section":"courses","summary":"Stream Provider Update the main.dart file to wrap the MaterialApp with a StreamProvider widget. It will listen to the Firestore document and update the widget tree when the document\u0026rsquo;s data changes.\nfile_type_flutter main.dart // ... import \u0026#39;package:provider/provider.dart\u0026#39;; import \u0026#39;package:quizapp/services/services.dart\u0026#39;; // ... return StreamProvider( create: (_) =\u0026gt; FirestoreService().streamReport(), initialData: Report(), child: MaterialApp( // .. ), ); ","tags":null,"title":"Stream Provider","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-stream-provider/","weight":52,"wordcount":55},{"author":null,"date":1587410610,"description":"Cancel a subscription","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"9273f51315785b8f89cc3e58f0087e1e","permalink":"https://fireship.io/courses/stripe-js/billing-cancel-subscription/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/billing-cancel-subscription/","section":"courses","summary":"List and Cancel Subscriptions file_type_typescript index.ts /** * Cancels an active subscription, syncs the data in Firestore */ export async function cancelSubscription( userId: string, subscriptionId: string ) { const customer = await getOrCreateCustomer(userId); if (customer.metadata.firebaseUID !== userId) { throw Error(\u0026#39;Firebase UID does not match Stripe Customer\u0026#39;); } const subscription = await stripe.subscriptions.del(subscriptionId); // Cancel at end of period // const subscription = stripe.subscriptions.update(subscriptionId, { cancel_at_period_end: true }); if (subscription.status === \u0026#39;canceled\u0026#39;) { await db .","tags":null,"title":"Cancel a Subscription","type":"courses","url":"https://fireship.io/courses/stripe-js/billing-cancel-subscription/","weight":52,"wordcount":176},{"author":null,"date":1563305010,"description":"Add server-side rendering to Angular with Nest.js","dir":"courses/angular/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"300afda58c63ea0c5ffd202f995b86f9","permalink":"https://fireship.io/courses/angular/ssr-nest/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/ssr-nest/","section":"courses","summary":"Create a server module using Angular Universal with the NestJS schematic.\nNest Universal Schematic\nSteps Add Universal and Nest command line ng add @nestjs/ng-universal npm run build:ssr npm run serve:ssr file_type_ng_component_ts server/main.ts import { NestFactory } from \u0026#39;@nestjs/core\u0026#39;; import { ApplicationModule } from \u0026#39;./app.module\u0026#39;; async function bootstrap() { const app = await NestFactory.create(ApplicationModule); app.setGlobalPrefix(\u0026#39;api\u0026#39;); await app.listen(process.env.PORT || 8080); // \u0026lt;-- update this line } bootstrap(); ","tags":null,"title":"Angular Universal with NestJS","type":"courses","url":"https://fireship.io/courses/angular/ssr-nest/","weight":52,"wordcount":65},{"author":null,"date":1668972210,"description":"Deploy the React app to Netlify hosting","dir":"courses/supabase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1668972210,"objectID":"243b0aa6abb271fb89a48c4baa855963","permalink":"https://fireship.io/courses/supabase/deploy-web/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/supabase/deploy-web/","section":"courses","summary":"Netlify: https://app.netlify.com/\nYour public/netlify.toml file:\n[[redirects]] from = \u0026#34;/*\u0026#34; to = \u0026#34;/index.html\u0026#34; status = 200 ","tags":null,"title":"Web Deployment","type":"courses","url":"https://fireship.io/courses/supabase/deploy-web/","weight":53,"wordcount":15},{"author":null,"date":1636658610,"description":"Create a scrollable animated drawer to show a list of topics","dir":"courses/flutter-firebase/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"5ba457a7e7294d586c476071263f12c7","permalink":"https://fireship.io/courses/flutter-firebase/topics-drawer/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/topics-drawer/","section":"courses","summary":"Drawer Create a new file named drawer.dart in the topics directory. It will be attached to the Scaffold on the topics screen to easily navigate to any quiz in the app.\nfile_type_flutter drawer.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:font_awesome_flutter/font_awesome_flutter.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; import \u0026#39;package:quizapp/quiz/quiz.dart\u0026#39;; import \u0026#39;package:quizapp/services/models.dart\u0026#39;; class TopicDrawer extends StatelessWidget { final List\u0026lt;Topic\u0026gt; topics; const TopicDrawer({ Key? key, required this.topics}) : super(key: key); @override Widget build(BuildContext context) { return Drawer( child: ListView.separated( shrinkWrap: true, itemCount: topics.","tags":null,"title":"Dynamic Drawer","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-drawer/","weight":53,"wordcount":304},{"author":null,"date":1636658610,"description":"Advanced usage of the Provider package","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"d66c6ee9d023004601cfd218f6abc88f","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-quiz-state/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-quiz-state/","section":"courses","summary":"State Management with Provider Manage the state of the quiz with the Provider ChangeNotifier.\nfile_type_dartlang main.dart import \u0026#39;../services/services.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; // Shared Data class QuizState with ChangeNotifier { double _progress = 0; Option _selected; final PageController controller = PageController(); get progress =\u0026gt; _progress; get selected =\u0026gt; _selected; set progress(double newValue) { _progress = newValue; notifyListeners(); } set selected(Option newValue) { _selected = newValue; notifyListeners(); } void nextPage() async { await controller.","tags":null,"title":"Quiz State Management","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-quiz-state/","weight":53,"wordcount":79},{"author":null,"date":1588101810,"description":"Webhooks to handle recurring subscription payments and cancelations","dir":"courses/stripe-js/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1588101810,"objectID":"4e0cd6c7c5bb675d7cdb0ff6e22be5bc","permalink":"https://fireship.io/courses/stripe-js/billing-recurring/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/billing-recurring/","section":"courses","summary":"Subscription Billing Webhook Examples file_type_typescript billing.ts import { stripe } from \u0026#39;./\u0026#39;; import Stripe from \u0026#39;stripe\u0026#39;; import { db } from \u0026#39;./firebase\u0026#39;; import { firestore } from \u0026#39;firebase-admin\u0026#39;; /** * Business logic for specific webhook event types */ const webhookHandlers = { \u0026#39;payment_intent.succeeded\u0026#39;: async (data: Stripe.PaymentIntent) =\u0026gt; { // Add your business logic here }, \u0026#39;payment_intent.payment_failed\u0026#39;: async (data: Stripe.PaymentIntent) =\u0026gt; { // Add your business logic here }, \u0026#39;customer.subscription.deleted\u0026#39;: async (data: Stripe.","tags":null,"title":"Recurring Payments","type":"courses","url":"https://fireship.io/courses/stripe-js/billing-recurring/","weight":53,"wordcount":174},{"author":null,"date":1563305010,"description":"Prerender with Angular Universal using a vanilla JS script","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"e2aec1dbc78aa522bdca094e0cffdc54","permalink":"https://fireship.io/courses/angular/ssr-prerendering/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/ssr-prerendering/","section":"courses","summary":"Create a script that can prerender specific routes using Angular Universal.\nNote, make sure you have enabled Universal with the schematic from the previous video or with ng add @nestjs/ng-universal.\ncommand line npm install --save-dev fs-extra http-server@0.9.0 package.json Scripts Add the following scripts to your package.json.\nfile_type_npm package.json // ... \u0026#34;scripts\u0026#34;: { \u0026#34;build:prerender\u0026#34;: \u0026#34;npm run build:client-and-server-bundles \u0026amp;\u0026amp; node prerender.js\u0026#34;, \u0026#34;serve:prerender\u0026#34;: \u0026#34;http-server dist/browser -c-1\u0026#34; } Prerender Script file_type_js prerender.js require(\u0026#39;zone.js/dist/zone-node\u0026#39;); require(\u0026#39;reflect-metadata\u0026#39;); const { join } = require(\u0026#39;path\u0026#39;); const { enableProdMode } = require(\u0026#39;@angular/core\u0026#39;); // Import module map for lazy loading const { provideModuleMap } = require(\u0026#39;@nguniversal/module-map-ngfactory-loader\u0026#39;); const { renderModuleFactory } = require(\u0026#39;@angular/platform-server\u0026#39;); // leave this as require(), imported via webpack const { AppServerModuleNgFactory, LAZY_MODULE_MAP } = require(`.","tags":null,"title":"Prerendering","type":"courses","url":"https://fireship.io/courses/angular/ssr-prerendering/","weight":53,"wordcount":207},{"author":null,"date":1636658610,"description":"Create a profile page with the total quiz score","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"e804691f17fb7637e2cc589ae89a6cb9","permalink":"https://fireship.io/courses/flutter-firebase/topics-profile/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/topics-profile/","section":"courses","summary":"Profile Page Customize your profile screen with the total quiz score.\nfile_type_flutter profile.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; import \u0026#39;package:quizapp/services/services.dart\u0026#39;; class ProfileScreen extends StatelessWidget { const ProfileScreen({super.key}); @override Widget build(BuildContext context) { var report = Provider.of\u0026lt;Report\u0026gt;(context); var user = AuthService().user; if (user != null) { // add your UI here } } } ","tags":null,"title":"User Profile","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-profile/","weight":54,"wordcount":52},{"author":null,"date":1563305010,"description":"Deploy to Angular Universal to Google Cloud Run and connect it to Firebase Hosting","dir":"courses/angular/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1563305010,"objectID":"a11d300d37c8fd2930d2c1dc50cc52ac","permalink":"https://fireship.io/courses/angular/ssr-deploy-cloud-run/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/angular/ssr-deploy-cloud-run/","section":"courses","summary":"Deploy Angular Universal to Google Cloud Run and connect it to Firebase hosting. Make sure Google Cloud SDK is installed on your local machine. Cloud Run is a solid choice, because it gives you a fully-managed \u0026ldquo;serverless\u0026rdquo; runtime using a Docker container - not to mention a generous free tier.\nDockerize the App file_type_docker Dockerfile FROM node:10 WORKDIR usr/src/app COPY package*.json ./ RUN npm install # Copy local angular/nest code to the container COPY .","tags":null,"title":"Angular Universal on Google Cloud Run","type":"courses","url":"https://fireship.io/courses/angular/ssr-deploy-cloud-run/","weight":54,"wordcount":154},{"author":null,"date":1636658610,"description":"Create a custom animated progress bar","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"167793fe6a9f11aefd80e3722d812f16","permalink":"https://fireship.io/courses/flutter-firebase/topics-progress-bar/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/topics-progress-bar/","section":"courses","summary":"Animated Progress Bar Use a Stack to create a custom animated progress bar.\nfile_type_flutter shared/progress_bar.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:quizapp/services/models.dart\u0026#39;; import \u0026#39;package:provider/provider.dart\u0026#39;; class AnimatedProgressbar extends StatelessWidget { final double value; final double height; const const AnimatedProgressbar({super.key, required this.value, this.height = 12}); @override Widget build(BuildContext context) { return LayoutBuilder( builder: (BuildContext context, BoxConstraints box) { return Container( padding: const EdgeInsets.all(10), width: box.maxWidth, child: Stack( children: [ Container( height: height, decoration: BoxDecoration( color: Theme.","tags":null,"title":"Animated Progress Bar","type":"courses","url":"https://fireship.io/courses/flutter-firebase/topics-progress-bar/","weight":55,"wordcount":278},{"author":null,"date":1636658610,"description":"Advanced usage of the PageView widget","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"6ab030d50db5878cf162c1a674a64a39","permalink":"https://fireship.io/courses/flutter-firebase-v1/project-quiz-pageview/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/project-quiz-pageview/","section":"courses","summary":"Reference the Quiz.dart source","tags":null,"title":"Quiz PageView","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/project-quiz-pageview/","weight":55,"wordcount":4},{"author":null,"date":1588101810,"description":"Integrate stripe subscription billing in React","dir":"courses/stripe-js/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1588101810,"objectID":"67665c8e618fed15a2f25892869cc443","permalink":"https://fireship.io/courses/stripe-js/billing-react/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/courses/stripe-js/billing-react/","section":"courses","summary":"Subscriptions.js import React, { useState, useEffect, Suspense } from \u0026#39;react\u0026#39;; import { fetchFromAPI } from \u0026#39;./helpers\u0026#39;; import { CardElement, useStripe, useElements } from \u0026#39;@stripe/react-stripe-js\u0026#39;; import { useUser, AuthCheck } from \u0026#39;reactfire\u0026#39;; import { db } from \u0026#39;./firebase\u0026#39;; import { SignIn, SignOut } from \u0026#39;./Customers\u0026#39;; // Shows user document in Firestore function UserData(props) { const [data, setData] = useState({}); // Subscribe to the user\u0026#39;s data in Firestore useEffect( () =\u0026gt; { const unsubscribe = db.","tags":null,"title":"Billing with React","type":"courses","url":"https://fireship.io/courses/stripe-js/billing-react/","weight":56,"wordcount":443},{"author":null,"date":1636658610,"description":"Android release walkthrough","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"41075a0308d0aa8867358f5aa31d0623","permalink":"https://fireship.io/courses/flutter-firebase-v1/release-android/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/flutter-firebase-v1/release-android/","section":"courses","summary":"","tags":null,"title":"Google Play","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/release-android/","weight":60,"wordcount":0},{"author":null,"date":1636658610,"description":"Use Provider to separte state from the parent widget","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"a1d0aeafae709448199e959813f63fce","permalink":"https://fireship.io/courses/flutter-firebase/quiz-state/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/quiz-state/","section":"courses","summary":"Quiz State Define a class that contains the data required by the UI. Add getters and setters for the data, making sure to call notifyListeners() when the data changes.\nfile_type_flutter quiz/quiz_state.dart import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:quizapp/services/models.dart\u0026#39;; class QuizState with ChangeNotifier { double _progress = 0; Option? _selected; double get progress =\u0026gt; _progress; Option? get selected =\u0026gt; _selected; set progress(double newValue) { _progress = newValue; notifyListeners(); } set selected(Option? newValue) { _selected = newValue; notifyListeners(); } } Provider Now that we have our state, we need to make it available to widgets that depend on it.","tags":null,"title":"State Management with Provider","type":"courses","url":"https://fireship.io/courses/flutter-firebase/quiz-state/","weight":60,"wordcount":170},{"author":null,"date":1612207410,"description":"Use Firestore Rules to ensure features are secure across the entire stack","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"98cfa8bd1dbc4cbdd1f06df3597c65be","permalink":"https://fireship.io/courses/react-next-firebase/deploy-security/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/deploy-security/","section":"courses","summary":"Complete Firestore Rules file_type_firebase firestore.rules rules_version = \u0026#39;2\u0026#39;; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { // Required for collection group queries match /posts/{postId} { allow read; } match /users/{userId} { allow read; allow create: if isValidUser(userId); } match /usernames/{username} { allow read; allow create: if isValidUsername(username); } match /users/{userId}/posts/{postId} { allow read; allow create: if canCreatePost(userId); allow update: if canUpdatePost(userId) || canIncrementHearts(userId, postId); allow delete: if request.auth.uid == userId; } match /users/{userId}/posts/{postId}/hearts/{heartId} { allow read; allow write: if request.","tags":null,"title":"Backend Security","type":"courses","url":"https://fireship.io/courses/react-next-firebase/deploy-security/","weight":60,"wordcount":283},{"author":null,"date":1636658610,"description":"iOS release walkthrough","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"0bf3c21d68a1e7c546f0d2175864b2f6","permalink":"https://fireship.io/courses/flutter-firebase-v1/release-ios/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/release-ios/","section":"courses","summary":"Official iOS Release Docs","tags":null,"title":"Apple App Store","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/release-ios/","weight":61,"wordcount":4},{"author":null,"date":1636658610,"description":"Use a PageView to navigate through a series of questions.","dir":"courses/flutter-firebase/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"909a08cdad61d8f26ed51e834b52604a","permalink":"https://fireship.io/courses/flutter-firebase/quiz-page-view/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/quiz-page-view/","section":"courses","summary":"Page View In the quiz screen, update the Scaffold to use a PageView.\nfile_type_flutter quiz.dart return Scaffold( appBar: AppBar( title: AnimatedProgressbar(value: state.progress), leading: IconButton( icon: const Icon(FontAwesomeIcons.xmark), onPressed: () =\u0026gt; Navigator.pop(context), ), ), body: PageView.builder( physics: const NeverScrollableScrollPhysics(), scrollDirection: Axis.vertical, controller: state.controller, onPageChanged: (int idx) =\u0026gt; state.progress = (idx / (quiz.questions.length + 1)), itemBuilder: (BuildContext context, int idx) { if (idx == 0) { return StartPage(quiz: quiz); } else if (idx == quiz.","tags":null,"title":"Dynamic Screens","type":"courses","url":"https://fireship.io/courses/flutter-firebase/quiz-page-view/","weight":61,"wordcount":169},{"author":null,"date":1612207410,"description":"Deploy the app with continuous integration on Vercel","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"0e70611fb5fcbe6018c074e503fa4590","permalink":"https://fireship.io/courses/react-next-firebase/deploy-vercel/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/deploy-vercel/","section":"courses","summary":"Which cloud provider does Vercel primarily use under the hood? Vercel is the company behind Next.js and their platform is highly optimized for it. Create a free Vercel account to deploy your code.\nNote: When deploying to Vercel remember to add your vercel deployment domain to the authorized domains within your firebase app project, to ensure that your Google Sign-In works. Add the domain in the format {ProjectName}.vercel.app as an Authorized Domain under Authentication / Sign-in method / Authorized Domains","tags":null,"title":"Vercel Deployment","type":"courses","url":"https://fireship.io/courses/react-next-firebase/deploy-vercel/","weight":61,"wordcount":80},{"author":null,"date":1636658610,"description":"Display a bottom sheet modal for quiz questions","dir":"courses/flutter-firebase/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"9af43c09fb0dde9150b613b1de707659","permalink":"https://fireship.io/courses/flutter-firebase/quiz-bottom-sheet/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/quiz-bottom-sheet/","section":"courses","summary":"Quiz Bottom Sheet The QuestionPage implements a method that creates a modal bottom sheet to tell the user if their answer was correct or not.\nfile_type_flutter quiz.dart class QuestionPage extends StatelessWidget { final Question question; const QuestionPage({super.key, required this.question}); @override Widget build(BuildContext context) { var state = Provider.of\u0026lt;QuizState\u0026gt;(context); return Column( mainAxisAlignment: MainAxisAlignment.end, children: [ Expanded( child: Container( padding: const EdgeInsets.all(16), alignment: Alignment.center, child: Text(question.text), ), ), Container( padding: const EdgeInsets.all(20), child: Column( mainAxisAlignment: MainAxisAlignment.","tags":null,"title":"Bottom Sheet","type":"courses","url":"https://fireship.io/courses/flutter-firebase/quiz-bottom-sheet/","weight":62,"wordcount":246},{"author":null,"date":1612207410,"description":"Deploy the app to Firebase hosting","dir":"courses/react-next-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1612207410,"objectID":"9a971851c767a9ca8806bd8a13af0253","permalink":"https://fireship.io/courses/react-next-firebase/deploy-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/react-next-firebase/deploy-firebase/","section":"courses","summary":"Deploy as Static Site Note: This method works for static sites that use getStaticProps ONLY. Deployment with full SSR requires cloud functions or some other form of a backend server.\ncommand line firebase init hosting # select /out as your hosting directory next build next export firebase deploy --only hosting Deployment with SSR See the custom server docs for a general idea of the process.","tags":null,"title":"Firebase Deployment","type":"courses","url":"https://fireship.io/courses/react-next-firebase/deploy-firebase/","weight":62,"wordcount":65},{"author":null,"date":1636658610,"description":"Android release walkthrough","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"50a71f737f771a3da3cc92f8d4e6a2df","permalink":"https://fireship.io/courses/flutter-firebase/release-android/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/release-android/","section":"courses","summary":"Official Android Flutter Relese Guide","tags":null,"title":"Google Play","type":"courses","url":"https://fireship.io/courses/flutter-firebase/release-android/","weight":70,"wordcount":5},{"author":null,"date":1636658610,"description":"iOS release walkthrough","dir":"courses/flutter-firebase/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1636658610,"objectID":"fcd1d7c8adf05bc3af6ba393b4db57f4","permalink":"https://fireship.io/courses/flutter-firebase/release-ios/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase/release-ios/","section":"courses","summary":"Official iOS Release Docs","tags":null,"title":"Apple App Store","type":"courses","url":"https://fireship.io/courses/flutter-firebase/release-ios/","weight":71,"wordcount":4},{"author":null,"date":1587410610,"description":"Dockererize your Node.js API and deploy it to Cloud Run","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"7389a3d9d0a6dee3e5fb2d568a0da56e","permalink":"https://fireship.io/courses/stripe-js/deployment-docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/stripe-js/deployment-docker/","section":"courses","summary":"Dockerize command line docker build -t fireship/stripe-server . docker run -p 3333:3333 fireship/stripe-server Deploy to Cloud Run Push the container to Container Registry.\ncommand line gcloud config set project \u0026lt;PROJECT_ID\u0026gt; gcloud builds submit --tag gcr.io/PROJECT_ID/stripe-server Then follow the steps in the video to create a Cloud Run Service.","tags":null,"title":"Docker","type":"courses","url":"https://fireship.io/courses/stripe-js/deployment-docker/","weight":71,"wordcount":48},{"author":null,"date":1587410610,"description":"Refactor the API for Firebase Cloud Functions","dir":"courses/stripe-js/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1587410610,"objectID":"f248e9082bdd11a9e7e8bc21ca59c298","permalink":"https://fireship.io/courses/stripe-js/deployment-cloud-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/stripe-js/deployment-cloud-functions/","section":"courses","summary":"","tags":null,"title":"Firebase Cloud Functions","type":"courses","url":"https://fireship.io/courses/stripe-js/deployment-cloud-functions/","weight":72,"wordcount":0},{"author":"Henrique Castro","date":1677701338,"description":"Literature's TPC","dir":"lessons/ffmpeg-useful-techniques/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1677701338,"objectID":"c8de95b5946adb5975de17cf640823f4","permalink":"https://fireship.io/lessons/ffmpeg-useful-techniques/","publishdate":"2023-03-01T13:08:58-07:00","readingtime":2,"relpermalink":"/lessons/ffmpeg-useful-techniques/","section":"lessons","summary":"Sobre a carta de Achamento do Brasil Questões 1. Como são descritos os Ameríndios? Pardos Bons rostos, bons narizes; Bem feitos. Sem-vergonhas(literalmente) 2. Que presentes lhe são dados Galinha(s) Ramal Sombreiro 3. Como se chamava o piloto? Afonso Lopes 4. Qual a importância dos pilotos neste texto? Eram o primeiro à tomar iniciativa nas expedições. 5. ø 6.Que costumes distintos surpreendem os portugues? Nudez \u0026amp; inocência. 7. Como é descrito o capitão Bem vestido, usava joias « \u0026ldquo;(\u0026hellip;), com um colar de ouro mui grande ao pescoço(\u0026hellip;) \u0026quot; » 8.","tags":["linux"],"title":"Carta de achamento da America Portuguesa","type":"lessons","url":"https://fireship.io/lessons/ffmpeg-useful-techniques/","weight":0,"wordcount":303},{"author":null,"date":1677701338,"description":"","dir":"lessons/","fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1677701338,"objectID":"003619e9a21b31294afab9bb5acf1a60","permalink":"https://fireship.io/lessons/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/lessons/","section":"lessons","summary":"","tags":null,"title":"Lessons","type":"lessons","url":"https://fireship.io/lessons/","weight":0,"wordcount":0},{"author":null,"date":1677701338,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1677701338,"objectID":"","permalink":"https://fireship.io/tags/linux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux/","section":"tags","summary":"","tags":null,"title":"linux","type":"tags","url":"https://fireship.io/tags/linux/","weight":0,"wordcount":0},{"author":null,"date":1677701338,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1677701338,"objectID":"","permalink":"https://fireship.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"https://fireship.io/tags/","weight":0,"wordcount":0},{"author":null,"date":1671304746,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1671304746,"objectID":"","permalink":"https://fireship.io/tags/pocketbase/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pocketbase/","section":"tags","summary":"","tags":null,"title":"pocketbase","type":"tags","url":"https://fireship.io/tags/pocketbase/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1671304746,"description":"Build a chat app with Pocketbase and Svelte","dir":"lessons/pocketbase-chat-app/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1671304746,"objectID":"e50c30293ee2f66c88c7c5f58d2cc700","permalink":"https://fireship.io/lessons/pocketbase-chat-app/","publishdate":"2022-12-17T12:19:06-07:00","readingtime":4,"relpermalink":"/lessons/pocketbase-chat-app/","section":"lessons","summary":"In the following tutorial we will build a chat app with Pocketbase and Svelte. Pocketbase is a backend (inspired by Firebase) structured as a single executable file. It provides a realtime DB based on SQLite and user authentication system that allows us to quickly prototype and deploy a chat app.\nPocketbase Setup Serve it Locally First, download pocketbase then run the executable locally with ./pocketbase serve. You should have access to an admin dashboard that looks like this:","tags":["pocketbase","svelte"],"title":"Pocketbase Chat App","type":"lessons","url":"https://fireship.io/lessons/pocketbase-chat-app/","weight":0,"wordcount":752},{"author":null,"date":1671304746,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1671304746,"objectID":"","permalink":"https://fireship.io/tags/svelte/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/svelte/","section":"tags","summary":"","tags":null,"title":"svelte","type":"tags","url":"https://fireship.io/tags/svelte/","weight":0,"wordcount":0},{"author":null,"date":1669498970,"description":"Node.js is a runtime and execution environment for building JavaScript apps on the server.","dir":"tags/node/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1669498970,"objectID":"59228188ea7658dbd2951e73897bd306","permalink":"https://fireship.io/tags/node/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/node/","section":"tags","summary":"","tags":null,"title":"Node","type":"tags","url":"https://fireship.io/tags/node/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1669498970,"description":"How to configure a new Node.js project with TypeScript and ES Modules","dir":"lessons/typescript-nodejs-setup/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1669498970,"objectID":"a64348685d9323427115d4e60a3568ea","permalink":"https://fireship.io/lessons/typescript-nodejs-setup/","publishdate":"2022-11-26T14:42:50-07:00","readingtime":2,"relpermalink":"/lessons/typescript-nodejs-setup/","section":"lessons","summary":"The following lesson demonstrates how to setup a Node.js (v18)project with TypeScript when using ES Modules. TS version 4.7 introduced a new NodeNext compliler option that can translate ES Modules to CommonJS modules. It simplifies the setup process for Node.js projects, but there are important caveats to be aware of.\nMore about ES Modules in TS from the TypeScript docs.\nSetup Package.json Module Type npm init -y npm install -D typescript @types/node Update the package.","tags":["typescript","node"],"title":"Setup Node with TypeScript","type":"lessons","url":"https://fireship.io/lessons/typescript-nodejs-setup/","weight":0,"wordcount":217},{"author":null,"date":1669498970,"description":"TypeScript is a strict syntactical superset of JavaScript and adds optional static typing to the language.","dir":"tags/typescript/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1669498970,"objectID":"bf43c456cd2f16e969d8780c15902b80","permalink":"https://fireship.io/tags/typescript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/typescript/","section":"tags","summary":"","tags":null,"title":"TypeScript","type":"tags","url":"https://fireship.io/tags/typescript/","weight":0,"wordcount":0},{"author":null,"date":1668972210,"description":"","dir":"courses/","fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1668972210,"objectID":"a98a8836220067f37599a398a7c77b75","permalink":"https://fireship.io/courses/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/courses/","section":"courses","summary":"","tags":null,"title":"Courses","type":"courses","url":"https://fireship.io/courses/","weight":0,"wordcount":0},{"author":null,"date":1668194610,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1668194610,"objectID":"","permalink":"https://fireship.io/tags/javascript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/javascript/","section":"tags","summary":"","tags":null,"title":"javascript","type":"tags","url":"https://fireship.io/tags/javascript/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1668194610,"description":"Learn how to build real-world applications with JavaScript","dir":"courses/js/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1668194610,"objectID":"61816e1ebb24a1fef0fc62c3421e5c1a","permalink":"https://fireship.io/courses/js/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/js/","section":"courses","summary":"The JavaScript Course teaches you how to build modern applications with vanilla JavaScript - no React, no TypeScript, no Frameworks - just plain old JavaScript.\n🦄 What will I learn? This course is focusd on the basics of JavaScript - the world\u0026rsquo;s most commonly used programming language. Here\u0026rsquo;s what you\u0026rsquo;ll get out of it\u0026hellip;\n👶 The Basics of JavaScript 👨‍🎤 Advanced concepts broken down in a quick no-BS format 📰 Prepare for JS interviews by coding algorithms 🧪 Test Driven Development with Vitest ⚔️ Debugging and Error Handling 🎨 Build a text-to-image API with Node.","tags":["javascript","node","pro"],"title":"Modern JavaScript Full Course","type":"courses","url":"https://fireship.io/courses/js/","weight":0,"wordcount":166},{"author":null,"date":1668194610,"description":"Pro lessons cover advanced app development topics and are available exclusively to current members.","dir":"tags/pro/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1668194610,"objectID":"0815e1cde3536ba7396f6d0186a6f34f","permalink":"https://fireship.io/tags/pro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pro/","section":"tags","summary":"","tags":null,"title":"Pro","type":"tags","url":"https://fireship.io/tags/pro/","weight":0,"wordcount":0},{"author":null,"date":1668194610,"description":"React.js is a JavaScript library for building user interfaces","dir":"tags/react/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1668194610,"objectID":"fe9fcb3c9c9ffd65064154b432ea0c31","permalink":"https://fireship.io/tags/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react/","section":"tags","summary":"","tags":null,"title":"React","type":"tags","url":"https://fireship.io/tags/react/","weight":0,"wordcount":0},{"author":"Zack DeRose","date":1668194610,"description":"Build and deploy a full-stack, production-ready web app with Supabase, React, and Postgres.","dir":"courses/supabase/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1668194610,"objectID":"535831a16269f500a0327228ee262f16","permalink":"https://fireship.io/courses/supabase/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/supabase/","section":"courses","summary":"The Supabase Course is a project-based course that builds a Reddit-inspired web app from scratch with Supabase, PostgreSQL, and React.\n🦄 What will I learn? The goal of this course is to provide you with a solid foundation for building fullstack Supabase apps on the web. Here\u0026rsquo;s a quick summary of what you can expect to learn\u0026hellip;\n👨‍🎤 Master the Basics of Supabase ⚛ Build interactive UI components with React 💪 Type-safe queries with TypeScript 👨‍🚀 User Authentication and Row-level Security 📊 Data modeling in a relational SQL database 👨‍🔬 Advanced Postgres techniques like Triggers and Functions 🎭 End-to-end testing with Playwright 🚀 Full-stack deployment breakdown Ant Wilson @AntWilson While working with Zack on preparing the course, he pointed out some stuff in Supabase that I didn’t even know about!","tags":["react","supabase","pro"],"title":"React Supabase Full Course","type":"courses","url":"https://fireship.io/courses/supabase/","weight":0,"wordcount":286},{"author":null,"date":1668194610,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1668194610,"objectID":"","permalink":"https://fireship.io/tags/supabase/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/supabase/","section":"tags","summary":"","tags":null,"title":"supabase","type":"tags","url":"https://fireship.io/tags/supabase/","weight":0,"wordcount":0},{"author":null,"date":1664292996,"description":"Fast-paced video tutorials and challenging projects for the modern app developer.","dir":"/","fuzzywordcount":100,"keywords":null,"kind":"home","lang":"en","lastmod":1664292996,"objectID":"3976528693a0108357f4928017600865","permalink":"https://fireship.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Fireship - Learn to Code Faster","type":"page","url":"https://fireship.io/","weight":0,"wordcount":0},{"author":null,"date":1662924210,"description":"Firebase is a badass BaaS giving you functionality like analytics, databases, messaging, cloud functions, and crash reporting so you can develop quickly and focus on your user experience.","dir":"tags/firebase/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1662924210,"objectID":"e415643e3c1791b831df8f2ae3bf4c83","permalink":"https://fireship.io/tags/firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/firebase/","section":"tags","summary":"","tags":null,"title":"Firebase","type":"tags","url":"https://fireship.io/tags/firebase/","weight":0,"wordcount":0},{"author":null,"date":1662924210,"description":"Next.js is a React framework that provides hybrid static \u0026 server rendering","dir":"tags/nextjs/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1662924210,"objectID":"3892682c23c4538bc06386aecd01cd88","permalink":"https://fireship.io/tags/nextjs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nextjs/","section":"tags","summary":"","tags":null,"title":"Next","type":"tags","url":"https://fireship.io/tags/nextjs/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1662924210,"description":"Build a full-stack app with React, Firebase, and Next.js","dir":"courses/react-next-firebase/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1662924210,"objectID":"a67d48fa4ef5ac56918580d15606a9db","permalink":"https://fireship.io/courses/react-next-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react-next-firebase/","section":"courses","summary":"Next.js Firebase - The Full Course takes you from zero to a production-ready hybrid-rendered webapp. Learn how to build a high-performance React app that features realtime data from Firebase and multiple server-side rendering paradigms with Next.js\n🦄 What will I build? You will build a full-stack Social Blogging Platform inspired by sites like 🌈 DEV.to and Medium. Authors can create content under a custom username, then publish publicly with SEO-friendly rendering, while readers can heart or like posts in realtime.","tags":["react","nextjs","firebase","pro"],"title":"Next.js Firebase Full Course","type":"courses","url":"https://fireship.io/courses/react-next-firebase/","weight":0,"wordcount":250},{"author":null,"date":1662910596,"description":"","dir":"/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1662910596,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://fireship.io/privacy/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/privacy/","section":"","summary":"Privacy Policy Fireship.io (\u0026ldquo;Fireship\u0026rdquo; \u0026ldquo;we\u0026rdquo; or \u0026ldquo;us\u0026rdquo;) is committed to protecting your privacy. This Privacy Policy explains the methods and reasons we collect, use, disclose, transfer, and store your information. If you have any questions about the contents of this policy, don’t hesitate to contact us.\nIf you do not consent to the collection and use of information from or about you in accordance with this Privacy Policy, then you are not permitted to use Fireship or any services provided on https://fireship.","tags":null,"title":"Privacy Policy","type":"page","url":"https://fireship.io/privacy/","weight":0,"wordcount":576},{"author":null,"date":1662910596,"description":"","dir":"/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1662910596,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://fireship.io/terms/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/terms/","section":"","summary":"Terms \u0026amp;\u0026amp; Conditions By accessing this website, you are agreeing to be bound by these website Terms and Conditions of Use, all applicable laws and regulations, and agree that you are responsible for compliance with any applicable local laws. If you do not agree with any of these terms, you are prohibited from using or accessing this site. The materials contained in this website are protected by applicable copyright and trademark law.","tags":null,"title":"Terms","type":"page","url":"https://fireship.io/terms/","weight":0,"wordcount":629},{"author":null,"date":1657913010,"description":"Flutter is a cross-platform native app framework written in Dart that helps developers build iOS, Android, and Fuchsia apps.","dir":"tags/flutter/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1657913010,"objectID":"e25fed0268ea3b0dc29cbaf62ebd674c","permalink":"https://fireship.io/tags/flutter/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/flutter/","section":"tags","summary":"","tags":null,"title":"Flutter","type":"tags","url":"https://fireship.io/tags/flutter/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1657913010,"description":"Build a full-stack Flutter app with Firebase from scratch.","dir":"courses/flutter-firebase/","fuzzywordcount":400,"keywords":null,"kind":"section","lang":"en","lastmod":1657913010,"objectID":"1cfd2777bb1edf46d13f11291a7e4a0c","permalink":"https://fireship.io/courses/flutter-firebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/flutter-firebase/","section":"courses","summary":"Flutter Firebase - The Full Course will take you from zero to a complex production-ready iOS or Android app using real-world cloud infrastructure.\n⚡ What will I build? Updated Sep 15th, 2022 Flutter v3.1\nThis is a project-based course that will teach you how to build a multiple choice quiz app, inspired by apps like Duolingo and QuizUp. The app implements user authentication (Sign in with Google or Apple), tracks quiz progress in Firestore, uses dynamic animations, and shares data between screens.","tags":["flutter","firebase","pro"],"title":"Flutter Firebase","type":"courses","url":"https://fireship.io/courses/flutter-firebase/","weight":0,"wordcount":378},{"author":null,"date":1657049010,"description":"Dart is a client-optimized language for fast apps on any platform.","dir":"tags/dart/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1657049010,"objectID":"e91c5eb626ee7640e484a05aaeace303","permalink":"https://fireship.io/tags/dart/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dart/","section":"tags","summary":"","tags":null,"title":"Dart","type":"tags","url":"https://fireship.io/tags/dart/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1657049010,"description":"Master the fundamentals of Dart before jumping into Flutter","dir":"courses/dart/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1657049010,"objectID":"e37f93f6a730e4eb9c9b08251874ae2f","permalink":"https://fireship.io/courses/dart/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/dart/","section":"courses","summary":"Dart - The Full Course is designed to teach you the fundamentals of the Dart language to prepare you for a successful journey into Flutter.\n🦄 What will I learn? This course provides a tour of Dart and teaches essential concepts for Flutter developers. Here\u0026rsquo;s what you\u0026rsquo;ll get out of it\u0026hellip;\n👨‍🎤 Become confident with the Dart language 🐦 Get Prepared for Flutter 🦺 Master null-safety 🦾 Learn how to use the Dart CLI 🕹️ Practice OOP and Functional Programming Concepts 🌊 Asynchronous programming with Futures \u0026amp; Streams 🤔 Is this Course Right for Me?","tags":["dart","flutter","pro"],"title":"Dart 101","type":"courses","url":"https://fireship.io/courses/dart/","weight":0,"wordcount":177},{"author":null,"date":1652642610,"description":"Git is a distributed version control system for managing changes between files","dir":"tags/git/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1652642610,"objectID":"4bfbb740904f9340fff1e7bb130f615e","permalink":"https://fireship.io/tags/git/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/git/","section":"tags","summary":"","tags":null,"title":"Git","type":"tags","url":"https://fireship.io/tags/git/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1652642610,"description":"Master the fundamentals of Git and GitHub from the ground up","dir":"courses/git/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1652642610,"objectID":"2ee1bda79c77aa575e6c2506fb21d511","permalink":"https://fireship.io/courses/git/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/git/","section":"courses","summary":"The Git \u0026amp; GitHub Full Course teaches you how to use Git and GitHub to manage your code like a professional software engineer. Take a hands on approach to learn the basics of version control from the command line with around 1 hour of video content and exercises.\n🦄 What will I learn? This course will teach the basics of Git and GitHub - essential tools used by virtually every software engineer on the planet.","tags":["git","github","pro"],"title":"Git \u0026 GitHub Full Course","type":"courses","url":"https://fireship.io/courses/git/","weight":0,"wordcount":182},{"author":null,"date":1652642610,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1652642610,"objectID":"","permalink":"https://fireship.io/tags/github/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/github/","section":"tags","summary":"","tags":null,"title":"github","type":"tags","url":"https://fireship.io/tags/github/","weight":0,"wordcount":0},{"author":null,"date":1651173250,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1651173250,"objectID":"","permalink":"https://fireship.io/tags/nuxt/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nuxt/","section":"tags","summary":"","tags":null,"title":"nuxt","type":"tags","url":"https://fireship.io/tags/nuxt/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1651173250,"description":"How to setup Firebase v9 for SSR and realtime hydration in Nuxt3","dir":"lessons/nuxt-3-firebase/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1651173250,"objectID":"86a2bb681924a134762e4ec5238e6932","permalink":"https://fireship.io/lessons/nuxt-3-firebase/","publishdate":"2022-04-28T12:14:10-07:00","readingtime":3,"relpermalink":"/lessons/nuxt-3-firebase/","section":"lessons","summary":"Nuxt3 hit release candidate recently with a variety of awesome new features. But you might be wondering\u0026hellip; how do I use Nuxt3 with Firebase? There is no documented best practice as of today, so I put together a demo that is capable of server-side rendering (SSR) via Firestore, followed by hydration to secure realtime data on the client. This gives a website the benefits SEO-friendly HTML, without sacrificing the power the realtime data updates after the initial page load.","tags":["vue","nuxt","firebase"],"title":"Realtime SSR with Nuxt3 and Firebase","type":"lessons","url":"https://fireship.io/lessons/nuxt-3-firebase/","weight":0,"wordcount":543},{"author":null,"date":1651173250,"description":"Vue is a progressive JavaScript framework for building UIs, renowned for its simplicity and rich ecosystem.","dir":"tags/vue/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1651173250,"objectID":"99b29c6b504800808e3af99d362c1b54","permalink":"https://fireship.io/tags/vue/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/tags/vue/","section":"tags","summary":" Vue Firebase Project Course Build a basic voice chat prototype using Vue \u0026 Firebase. Start ","tags":null,"title":"Vue","type":"tags","url":"https://fireship.io/tags/vue/","weight":0,"wordcount":15},{"author":"Jeff Delaney","date":1647207770,"description":"A breakdown 10 software design patterns in TypeScript.","dir":"lessons/typescript-design-patterns/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1647207770,"objectID":"2cb55692815e0d8b9091386859548209","permalink":"https://fireship.io/lessons/typescript-design-patterns/","publishdate":"2022-03-13T14:42:50-07:00","readingtime":5,"relpermalink":"/lessons/typescript-design-patterns/","section":"lessons","summary":"Design patterns is a highly influential book published in 1994 by four computer scientists called the Gang of Four. It was originally aimed at C++ developers, but has since become a book for anyone interested in object-oriented software design.\nIn the following lesson, we will look at 10 different patterns from this book with simplified modern examples in TypeScript. For additional patterns and examples, check out Refactoring Guru.\nCreational Creational patterns are related to the creation of new objects.","tags":["typescript"],"title":"10 Design Patterns in TypeScript","type":"lessons","url":"https://fireship.io/lessons/typescript-design-patterns/","weight":0,"wordcount":976},{"author":"Jeff Delaney","date":1645560690,"description":"Learn the fundamentals of React.js by building five apps from scratch.","dir":"courses/react/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1645560690,"objectID":"1bc635389a1a0f0e236b29aac5d504fb","permalink":"https://fireship.io/courses/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/react/","section":"courses","summary":"React - The Full Course is unlike any other React course on the Internet. It provides a fast-paced introduction to essential concepts, then puts them into practice by building multiple fun and challenging full-stack apps from scratch.\nWhat will I learn? 👨‍🎤 Everything you need to be productive with React ⚡ Breakdown of key concepts in 100 Seconds 📚 Design patterns and best practices 🎣 Component composition and custom hooks 🚀 Lazy loading with Suspense 📱 How to build Progressive Web Apps (PWAs) 🎨 Animation with Framer Motion 🐕 Advanced data fetching with SWR and React Query ⚛️ Complex dynamic forms with React Final Form 🔥 Manage realtime data with Firestore 📰 SSR with Next.","tags":["react","javascript","nextjs","firebase","pro"],"title":"React - The full course","type":"courses","url":"https://fireship.io/courses/react/","weight":0,"wordcount":231},{"author":"Alex Guja","date":1645367496,"description":"10 Tips to make your code more Pythonic.","dir":"lessons/code-this-not-that-python-edition/","fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1645367496,"objectID":"6f70b067078ec7705f27186d2f9670e0","permalink":"https://fireship.io/lessons/code-this-not-that-python-edition/","publishdate":"2022-02-20T15:31:36+01:00","readingtime":8,"relpermalink":"/lessons/code-this-not-that-python-edition/","section":"lessons","summary":"Introduction Python is one of the most popular languages in the world. It has many practical applications including web development, desktop apps, IoT, data analysis, and machine learning. This lesson contains ten tips that will make your code more pythonic.\nTo make life simpler, we’ll use the following key to denote a few categories\n💩 - code that you should avoid. 🤔 - code that is generally ok, but ignores built-in language features.","tags":["python"],"title":"Code This, Not That - Python Edition","type":"lessons","url":"https://fireship.io/lessons/code-this-not-that-python-edition/","weight":0,"wordcount":1631},{"author":null,"date":1645367496,"description":"Python is a high-level, interpreted, general purpose, Object Oriented programming language that lets you work more quickly and integrate your systems more effectively.","dir":"tags/python/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1645367496,"objectID":"9711d795be78b4db366f8c1c0a4f6383","permalink":"https://fireship.io/tags/python/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/python/","section":"tags","summary":"","tags":null,"title":"Python","type":"tags","url":"https://fireship.io/tags/python/","weight":0,"wordcount":0},{"author":null,"date":1643904547,"description":"Cloud functions is an event-driven serverless compute platform that helps you run code on triggers like database write, auth events, storage uploads, and more.","dir":"tags/cloud-functions/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1643904547,"objectID":"6f2251ba84a77878f8a0f07b7a8a3f68","permalink":"https://fireship.io/tags/cloud-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cloud-functions/","section":"tags","summary":"","tags":null,"title":"Cloud functions","type":"tags","url":"https://fireship.io/tags/cloud-functions/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1643904547,"description":"Build a Twitter Bot from scratch using Oauth 2.0 to post tweets on behalf of a user.","dir":"lessons/twitter-bot-oauth2-tutorial/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1643904547,"objectID":"0cdae38796b0e9c4fbd2a1582308d008","permalink":"https://fireship.io/lessons/twitter-bot-oauth2-tutorial/","publishdate":"2022-02-03T09:09:07-07:00","readingtime":1,"relpermalink":"/lessons/twitter-bot-oauth2-tutorial/","section":"lessons","summary":"Full tutorial under development\u0026hellip;","tags":["firebase","cloud-functions","javascript"],"title":"Twitter Bot Tutorial","type":"lessons","url":"https://fireship.io/lessons/twitter-bot-oauth2-tutorial/","weight":0,"wordcount":4},{"author":null,"date":1643068800,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1643068800,"objectID":"","permalink":"https://fireship.io/contributors/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/contributors/","section":"contributors","summary":"","tags":null,"title":"Contributors","type":"contributors","url":"https://fireship.io/contributors/","weight":0,"wordcount":0},{"author":null,"date":1643068800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1643068800,"objectID":"c86506e7c5a2bf3386cb630f63591423","permalink":"https://fireship.io/contributors/sabz/","publishdate":"2022-01-25T00:00:00Z","readingtime":1,"relpermalink":"/contributors/sabz/","section":"contributors","summary":"Sabz is a self-taught developer \u0026amp;\u0026amp; designer. He is interested in web, desktop development.","tags":null,"title":"Sabz","type":"contributors","url":"https://fireship.io/contributors/sabz/","weight":0,"wordcount":14},{"author":null,"date":1642450449,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1642450449,"objectID":"","permalink":"https://fireship.io/tags/solidity/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/solidity/","section":"tags","summary":"","tags":null,"title":"solidity","type":"tags","url":"https://fireship.io/tags/solidity/","weight":0,"wordcount":0},{"author":null,"date":1642450449,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1642450449,"objectID":"","permalink":"https://fireship.io/tags/web3/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/web3/","section":"tags","summary":"","tags":null,"title":"web3","type":"tags","url":"https://fireship.io/tags/web3/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1642450449,"description":"Mint an NFT with Hardhat and Solidity, then interact with the smart contract using Ethers.js and React.","dir":"lessons/web3-solidity-hardhat-react-tutorial/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1642450449,"objectID":"d1cca2566d81828d845529b5a50d8fbd","permalink":"https://fireship.io/lessons/web3-solidity-hardhat-react-tutorial/","publishdate":"2022-01-17T13:14:09-07:00","readingtime":7,"relpermalink":"/lessons/web3-solidity-hardhat-react-tutorial/","section":"lessons","summary":"Over the last few months, you\u0026rsquo;ve likely heard there term Web3 thrown around in the media. It generally refers to decentralized webapps that use Ethereum smart contracts to replace traditional web servers. Sounds pretty cool, let\u0026rsquo;s build one!\nThe following tutorial demonstrates the entire process of building a smart contact, then interacting with it on the web using Ethers.js and React. The app can mint non-fungible tokens (NFTs) when a user transfers Ether from a wallet like MetaMask.","tags":["web3","solidity","react"],"title":"Web3 NFT Tutorial","type":"lessons","url":"https://fireship.io/lessons/web3-solidity-hardhat-react-tutorial/","weight":0,"wordcount":1317},{"author":"Jeff Delaney","date":1641869345,"description":"Build an app capable of fulltext search using Redis and Next.js","dir":"lessons/redis-nextjs/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1641869345,"objectID":"5624952c6847e5e723f259391cf10ade","permalink":"https://fireship.io/lessons/redis-nextjs/","publishdate":"2022-01-10T19:49:05-07:00","readingtime":4,"relpermalink":"/lessons/redis-nextjs/","section":"lessons","summary":"Redis is an in-memory key-value store that is often used as a cache to make traditional databases faster. However, it has evolved into a multimodel database capable of fulltext search, graph relationships, AI workloads, and more.\nIn the following tutorial, we use Next.js and Redis Enterprise Cloud to build a webapp that can store JSON data in the cloud, then query it with results that update instantly in the UI.","tags":["redis","nextjs","react"],"title":"Fulltext Search with Redis and Next.js","type":"lessons","url":"https://fireship.io/lessons/redis-nextjs/","weight":0,"wordcount":791},{"author":null,"date":1641869345,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1641869345,"objectID":"","permalink":"https://fireship.io/tags/redis/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/redis/","section":"tags","summary":"","tags":null,"title":"redis","type":"tags","url":"https://fireship.io/tags/redis/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1638045948,"description":"Use Flutter Riverpod to manage Firebase auth state and relational realtime data in Firestore","dir":"lessons/firebase-riverpod-flutter/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1638045948,"objectID":"e5fb81da3f1b8fb5e00377da09f3f244","permalink":"https://fireship.io/lessons/firebase-riverpod-flutter/","publishdate":"2021-11-27T13:45:48-07:00","readingtime":3,"relpermalink":"/lessons/firebase-riverpod-flutter/","section":"lessons","summary":"Riverpod is a reactive state-management library for Flutter that can simplify the way global data is shared throughout your application. It is especially useful with Firebase because it allows to you easily join Streams together, like a Firestore document with a Firebase Auth user.\nThe following tutorial demonstrates how to use Riverpod to manage Firebase Auth state and relational realtime data in Firestore.\nLearning Objectives\nRiverpod Basics w/ Firebase Listen to the current user\u0026rsquo;s auth state Join realtime Firestore data based on current user\u0026rsquo;s UID Setup This tutorial assumes you have already installed Firebase into your app.","tags":["pro","flutter","firebase"],"title":"Riverpod with Firebase","type":"lessons","url":"https://fireship.io/lessons/firebase-riverpod-flutter/","weight":0,"wordcount":575},{"author":null,"date":1635881010,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1635881010,"objectID":"","permalink":"https://fireship.io/tags/productivity/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/productivity/","section":"tags","summary":"","tags":null,"title":"productivity","type":"tags","url":"https://fireship.io/tags/productivity/","weight":0,"wordcount":0},{"author":null,"date":1635881010,"description":"Visual Studio Code is a code editor redefined and optimized for building and debugging modern web and cloud applications.","dir":"tags/vscode/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1635881010,"objectID":"5156d9979a3258871deff98a70a76514","permalink":"https://fireship.io/tags/vscode/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vscode/","section":"tags","summary":"","tags":null,"title":"VS Code","type":"tags","url":"https://fireship.io/tags/vscode/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1635881010,"description":"Write code faster with VS Code tips, tricks, and best practices","dir":"courses/vscode-tricks/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1635881010,"objectID":"2d31abc69ada5707ecff402babc1bfd9","permalink":"https://fireship.io/courses/vscode-tricks/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vscode-tricks/","section":"courses","summary":"The VS Code Magic Tricks course will teach you how to write code faster and make you a happier developer. It demonstrates dozens of small optimizations that result in long-term productivity gains as a programmer.\n🧠 What will I Learn? 👨‍🎤 Write better code faster 🎹 Edit code in rhythm with your keyboard 🕹️ Tweak settings for optimal productivity 🤖 Automate repetitive tasks 🦺 Avoid common pitfalls and bottlenecks 🎨 Leverage powerful extensions 🚀 Advanced IDE features like Docker \u0026amp; remote repos ⚡ Is the Course Updated?","tags":["vscode","productivity","pro"],"title":"VS Code Magic Tricks Course","type":"courses","url":"https://fireship.io/courses/vscode-tricks/","weight":0,"wordcount":158},{"author":null,"date":1635452952,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1635452952,"objectID":"","permalink":"https://fireship.io/tags/crypto/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/crypto/","section":"tags","summary":"","tags":null,"title":"crypto","type":"tags","url":"https://fireship.io/tags/crypto/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1635452952,"description":"Learn 7 essential cryptography concepts in and implement them with Node.js crypto.","dir":"lessons/node-crypto-examples/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1635452952,"objectID":"1b104cb144f8d610f3c7a5ebd6ffddd4","permalink":"https://fireship.io/lessons/node-crypto-examples/","publishdate":"2021-10-28T13:29:12-07:00","readingtime":6,"relpermalink":"/lessons/node-crypto-examples/","section":"lessons","summary":"The mysterious discipline of cryptography is the backbone of the internet. Without it, there would be no secrets and no privacy in the digital world. As a developer, you don’t need to understand the math that goes into cryptography, but it’s absolutely essential to know key concepts like hashes, salt, keypairs, encryption, and signing.\nThe following tutorial explains essential cryptography concepts and implements them with the builtin Node.js crypto module.","tags":["node","javascript","crypto"],"title":"Cryptography Concepts for Node.js Developers","type":"lessons","url":"https://fireship.io/lessons/node-crypto-examples/","weight":0,"wordcount":1118},{"author":null,"date":1635189810,"description":"Stripe provides a collection of APIs that handle online payments and facilitate web-based business models.","dir":"tags/stripe/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1635189810,"objectID":"d6bfa691b6ebe1b05ab84a6765f8118a","permalink":"https://fireship.io/tags/stripe/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/stripe/","section":"tags","summary":"","tags":null,"title":"Stripe","type":"tags","url":"https://fireship.io/tags/stripe/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1635189810,"description":"A full Stripe Payments Course using Node.js \u0026 React","dir":"courses/stripe-js/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1635189810,"objectID":"510b16d0732ec845beb616e31566267b","permalink":"https://fireship.io/courses/stripe-js/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/stripe-js/","section":"courses","summary":"This course has been deprecated. A completely new Stripe course will replace this content in the near future (Spring 2023). The Stripe Payments JavaScript Course is a project-based guide to building fullstack payment solutions on the web with Node.js and React.\nThe goal is to provide a solid foundation for app monetization 💸 by implementing common use-cases with Stripe APIs including Checkout, Payment Intents, and Billing.\nUpdated May 11th, 2020 Stripe API v2020-03-02","tags":["stripe","pro","react"],"title":"Stripe Payments JavaScript Course","type":"courses","url":"https://fireship.io/courses/stripe-js/","weight":0,"wordcount":259},{"author":"Jeff Delaney","date":1635095578,"description":"Build an API with Express.js and Monetize it with Stripe Metered Billing","dir":"lessons/api-monetization-stripe/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1635095578,"objectID":"6d4ade4c886b6d5951ab1625aaecfbfa","permalink":"https://fireship.io/lessons/api-monetization-stripe/","publishdate":"2021-10-24T10:12:58-07:00","readingtime":6,"relpermalink":"/lessons/api-monetization-stripe/","section":"lessons","summary":"Building a monetized API for a SaaS product might seem like a daunting task, but it\u0026rsquo;s actually relatively simple when you bring in tools like Stripe\u0026rsquo;s Metered Billing feature. There are 4 main steps in the process:\nCreate an API Subscribe a customer to a recurring subscription in Stripe Create custom API keys to authenticate requests to the API Report API usage to Stripe The following lesson demonstrates the backend flow for building API with Express.","tags":["stripe","node","javascript"],"title":"API Monetization with Stripe Metered Billing","type":"lessons","url":"https://fireship.io/lessons/api-monetization-stripe/","weight":0,"wordcount":1160},{"author":null,"date":1634656286,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1634656286,"objectID":"","permalink":"https://fireship.io/tags/css/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/css/","section":"tags","summary":"","tags":null,"title":"css","type":"tags","url":"https://fireship.io/tags/css/","weight":0,"wordcount":0},{"author":null,"date":1634656286,"description":"A utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup.","dir":"tags/tailwind/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1634656286,"objectID":"fbff335a549eb41df70b0cdda0f79a4f","permalink":"https://fireship.io/tags/tailwind/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tailwind/","section":"tags","summary":"","tags":null,"title":"Tailwind","type":"tags","url":"https://fireship.io/tags/tailwind/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1634656286,"description":"Tips \u0026 Tricks for learning Tailwind CSS","dir":"lessons/tailwind-tutorial/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1634656286,"objectID":"0bc15814c114776eea403f70fd364463","permalink":"https://fireship.io/lessons/tailwind-tutorial/","publishdate":"2021-10-19T08:11:26-07:00","readingtime":2,"relpermalink":"/lessons/tailwind-tutorial/","section":"lessons","summary":"The following tutorial will get you up and running with Tailwind CSS, empowering you to build a beautiful, responsive, and animated websites quickly. We will build a side navigation menu inspired by Discord.\nSetup Install the Tailwind VS Code extension Install the Tailwind VS Code extension.\nUse a JS Framework Feel free to use the JS framework of your choice. This tutorial uses Create React App.\nDiscord-Inspired Icon Navbar Make the App a Flexible Container Create a flexbox row by simply adding the flex utility to the parent element.","tags":["css","tailwind","react"],"title":"Tailwind Tips \u0026 Tricks","type":"lessons","url":"https://fireship.io/lessons/tailwind-tutorial/","weight":0,"wordcount":414},{"author":null,"date":1633033137,"description":"React Native combines the best parts of native development with React, a best-in-class JavaScript library for building user interfaces.","dir":"tags/react-native/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1633033137,"objectID":"6356b3a695938bb08f99bfd0e46cb516","permalink":"https://fireship.io/tags/react-native/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react-native/","section":"tags","summary":"","tags":null,"title":"React Native","type":"tags","url":"https://fireship.io/tags/react-native/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1633033137,"description":"Build a mobile chat app with React Native, Firebase and Firestore","dir":"lessons/react-native-firebase-chat-demo/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1633033137,"objectID":"c47eb18ef038d2170f09286d63452381","permalink":"https://fireship.io/lessons/react-native-firebase-chat-demo/","publishdate":"2021-09-30T13:18:57-07:00","readingtime":5,"relpermalink":"/lessons/react-native-firebase-chat-demo/","section":"lessons","summary":"React Native is one of the most productive ways to build a cross-platform mobile app, especially for developers with a background in JavaScript. It has provides excellent support for Firebase with the React Native Firebase package\nIn the following lesson, we will build a basic chat app with React Native and Firebase. It allows a user to sign in with Google and then access a group chat room. The user can read a realtime feed of recent chat messages via Firestore and post new messages into the chat.","tags":["pro","react","react-native","firebase"],"title":"React Native Firebase Chat Demo","type":"lessons","url":"https://fireship.io/lessons/react-native-firebase-chat-demo/","weight":0,"wordcount":942},{"author":"Jeff Delaney","date":1633029546,"description":"Build a chat app with Flutter, Firebase, and Firestore","dir":"lessons/flutter-firebase-chat-demo/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1633029546,"objectID":"c8531d04dcbe2cedf0991bc8a5f990ca","permalink":"https://fireship.io/lessons/flutter-firebase-chat-demo/","publishdate":"2021-09-30T12:19:06-07:00","readingtime":6,"relpermalink":"/lessons/flutter-firebase-chat-demo/","section":"lessons","summary":"Flutter makes it possible to build high-performance cross-platform apps with sound type safety thanks to the Dart programming language. It provides excellent support for Firebase with official plugins maintained by Google.\nIn the following lesson, we will build a basic chat app with Flutter and Firebase. It allows a user to sign in with Google and then access a group chat room. The user can read a realtime feed of recent chat messages via Firestore and post new messages into the chat.","tags":["pro","flutter","firebase"],"title":"Flutter Firebase Chat Demo","type":"lessons","url":"https://fireship.io/lessons/flutter-firebase-chat-demo/","weight":0,"wordcount":1080},{"author":null,"date":1632159116,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1632159116,"objectID":"","permalink":"https://fireship.io/tags/d3/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/d3/","section":"tags","summary":"","tags":null,"title":"d3","type":"tags","url":"https://fireship.io/tags/d3/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1632159116,"description":"Build an animated realtime data visualization with D3 and Firebase","dir":"lessons/realtime-charts-d3-firebase/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1632159116,"objectID":"9ecad3e08b6df3a82bd52a62fe6a379b","permalink":"https://fireship.io/lessons/realtime-charts-d3-firebase/","publishdate":"2021-09-20T10:31:56-07:00","readingtime":4,"relpermalink":"/lessons/realtime-charts-d3-firebase/","section":"lessons","summary":"D3.js, or Data Driven Documents, is a powerful tool for building charts with JavaScript, CSS, and SVG. It\u0026rsquo;s a library that takes data as an input outputs dynamic, interactive, and beautiful visualizations. In this tutorial, we\u0026rsquo;ll build an animated realtime chart that changes its appearance when a new data point is added to Firestore.\nExample of the realtime chart you will build in this tutorial\nProject Setup Install D3 \u0026amp; Firebase Create a new project with Vite, then install D3 and Firebase.","tags":["pro","d3","firebase","javascript"],"title":"Realtime Charts with D3","type":"lessons","url":"https://fireship.io/lessons/realtime-charts-d3-firebase/","weight":0,"wordcount":739},{"author":"Jeff Delaney","date":1631488664,"description":"An advanced tutorial using Framer Motion to create animated notifications.","dir":"lessons/framer-motion-advanced-notifications/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1631488664,"objectID":"2b8e46cfb5b211d5b652ed028c2007e9","permalink":"https://fireship.io/lessons/framer-motion-advanced-notifications/","publishdate":"2021-09-12T16:17:44-07:00","readingtime":4,"relpermalink":"/lessons/framer-motion-advanced-notifications/","section":"lessons","summary":"Learn advanced Framer Motion techniques by creating an animated notification feed from scratch. We dive into concepts like transitions, spring animations, SVGs, and drag gestures to create dismissible notifications.\n⚠️ This is the sequel to the Framer Motion Basics Tutorial. Make sure to watch that one first!\n🚀 Try out the live demo\nNotification Basic Notification Start by creating a basic animated notification using a motion.li component. Feel free to experiment with the notificationVariants object to customize the animation result.","tags":["pro","react","animation"],"title":"Animated Notifications with Framer Motion","type":"lessons","url":"https://fireship.io/lessons/framer-motion-advanced-notifications/","weight":0,"wordcount":739},{"author":null,"date":1631488664,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1631488664,"objectID":"","permalink":"https://fireship.io/tags/animation/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/animation/","section":"tags","summary":"","tags":null,"title":"animation","type":"tags","url":"https://fireship.io/tags/animation/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1631485252,"description":"Build an animated modal with Framer Motion and React","dir":"lessons/framer-motion-modal/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1631485252,"objectID":"5bcc079f3992bb9144cd7f081f1bca52","permalink":"https://fireship.io/lessons/framer-motion-modal/","publishdate":"2021-09-12T15:20:52-07:00","readingtime":4,"relpermalink":"/lessons/framer-motion-modal/","section":"lessons","summary":"Framer Motion is a React library for adding declarative animations to your components. It provides a variety of components that wrap plain HTML elements to extend them with animation superpowers 🦸. In this lesson, we will build a modal with Framer Motion with a variety of different animations styles.\n🚀 Try out the live demo\nSetup Installation Create a new React project\ncommand line $ npx create-react-app framer-demo Open your new React app","tags":["react","animation"],"title":"Animated Modals with Framer Motion","type":"lessons","url":"https://fireship.io/lessons/framer-motion-modal/","weight":0,"wordcount":693},{"author":"Jeff Delaney","date":1630609852,"description":"How to migrate to the new Firebase V9 JavaScript SDK. A complete guide.","dir":"lessons/firebase-v9-migration/","fuzzywordcount":1900,"keywords":null,"kind":"page","lang":"en","lastmod":1630609852,"objectID":"5a13756f30cac606862e4ea715186fc4","permalink":"https://fireship.io/lessons/firebase-v9-migration/","publishdate":"2021-09-02T12:10:52-07:00","readingtime":9,"relpermalink":"/lessons/firebase-v9-migration/","section":"lessons","summary":"The Firebase team recently released a new web SDK that utilizes tree-shaking in order to lower JavaScript bundle sizes when used with module bundlers like Webpack and Rollup. At a high level, it works by only importing the functions/classes/code that we actually NEED, versus importing entire modules like auth, firestore, and so on. The Fireship site was able to reduce its JavaScript bundle size by ~35% 🤯 by upgrading to the new version.","tags":["pro","javascript","firebase"],"title":"Firebase v9 Migration","type":"lessons","url":"https://fireship.io/lessons/firebase-v9-migration/","weight":0,"wordcount":1862},{"author":null,"date":1630168350,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1630168350,"objectID":"3874178152fe75aa242921390b676a6e","permalink":"https://fireship.io/contributors/alex-guja/","publishdate":"2021-08-28T09:32:30-07:00","readingtime":1,"relpermalink":"/contributors/alex-guja/","section":"contributors","summary":"Alex is a full-stack developer based in Europe. He is interested in web development, mobile apps, data engineering, and cloud technologies. In his free time, he enjoys reading, writes music, and likes to meet new people.","tags":null,"title":"Alex Guja","type":"contributors","url":"https://fireship.io/contributors/alex-guja/","weight":0,"wordcount":36},{"author":null,"date":1630160823,"description":"Go is a statically typed, compiled programming language syntactically similar to C, but with memory safety, garbage collection, structural typing, and CSP-style concurrency.","dir":"tags/go/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1630160823,"objectID":"b7d96a9615591680abfa24c6d452c2a2","permalink":"https://fireship.io/tags/go/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/go/","section":"tags","summary":"","tags":null,"title":"Go","type":"tags","url":"https://fireship.io/tags/go/","weight":0,"wordcount":0},{"author":"Alex Guja","date":1630160823,"description":"An introduction to Go","dir":"lessons/learn-go-in-100-lines/","fuzzywordcount":4000,"keywords":null,"kind":"page","lang":"en","lastmod":1630160823,"objectID":"c11f307e7fa43d75e4c8462598cfeb00","permalink":"https://fireship.io/lessons/learn-go-in-100-lines/","publishdate":"2021-08-28T07:27:03-07:00","readingtime":19,"relpermalink":"/lessons/learn-go-in-100-lines/","section":"lessons","summary":"Introduction Go is an open-source programming language developed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. It is often described as \u0026ldquo;C for the 21st century\u0026rdquo;, however, it borrows important ideas from several other languages like ALGOL, Pascal, Modula-2, Oberon, CSP, and others. At its core, Go relies on simplicity, reliability, and efficiency to overcome the shortcomings of its ancestors. Go has garbage collection, a package system, first-class functions, lexical scope, immutable strings that rely on UTF-8, and an awesome concurrency model.","tags":["go"],"title":"Learn Go in 100 Lines","type":"lessons","url":"https://fireship.io/lessons/learn-go-in-100-lines/","weight":0,"wordcount":3969},{"author":null,"date":1629399993,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1629399993,"objectID":"","permalink":"https://fireship.io/tags/svg/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/svg/","section":"tags","summary":"","tags":null,"title":"svg","type":"tags","url":"https://fireship.io/tags/svg/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1629399993,"description":"Create wavy backgrounds with CSS and SVG to spice up the design of your homepage","dir":"lessons/wavy-backgrounds/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1629399993,"objectID":"c733c803ced0244430125c71de8e89a2","permalink":"https://fireship.io/lessons/wavy-backgrounds/","publishdate":"2021-08-19T12:06:33-07:00","readingtime":2,"relpermalink":"/lessons/wavy-backgrounds/","section":"lessons","summary":"Wavy backgrounds have been all the rage in design for the last few years. The following tutorial demonstrates several different ways to create wavy backgrounds with CSS and SVG.\nCSS Versions Bubble Pattern CSS Bubble\nThe bubble pattern creates an elliptical shape that stretches over the top of the content. It only requires CSS to create the effect.\nfile_type_html index.html \u0026lt;section class=\u0026#34;bubble\u0026#34;\u0026gt; \u0026lt;!-- content here --\u0026gt; \u0026lt;/section\u0026gt; Use the pseudo-element ::after to style an eliptical border radius to the content.","tags":["css","svg"],"title":"Wavy Backgrounds with CSS \u0026 SVG","type":"lessons","url":"https://fireship.io/lessons/wavy-backgrounds/","weight":0,"wordcount":421},{"author":"Kyle Leary","date":1625800309,"description":"Handle media queries in React with a useMediaQuery() hook","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1625800309,"objectID":"dc1dc0232f3147b5625f7904143a1da1","permalink":"https://fireship.io/snippets/use-media-query-hook/","publishdate":"2021-07-08T23:11:49-04:00","readingtime":3,"relpermalink":"/snippets/use-media-query-hook/","section":"snippets","summary":"Hooks let you use state and other React features without writing a class.\nuseMediaQuery() This simple hook makes it easy to share \u0026amp;\u0026amp; render components, logic, styling, etc. through the use of media queries from your JSX code.\nCreate the hook hooks/useMediaQuery.jsx import { useState, useEffect } from \u0026#34;react\u0026#34;; const useMediaQuery = (query) =\u0026gt; { const [matches, setMatches] = useState(false); useEffect(() =\u0026gt; { const media = window.matchMedia(query); if (media.matches !== matches) { setMatches(media.","tags":["react","hooks"],"title":"Handle media queries in React with hooks","type":"lessons","url":"https://fireship.io/snippets/use-media-query-hook/","weight":0,"wordcount":433},{"author":null,"date":1625800309,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1625800309,"objectID":"","permalink":"https://fireship.io/tags/hooks/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hooks/","section":"tags","summary":"","tags":null,"title":"hooks","type":"tags","url":"https://fireship.io/tags/hooks/","weight":0,"wordcount":0},{"author":null,"date":1625800309,"description":"Quick code snippets and articles related to app development","dir":"snippets/","fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1637765705,"objectID":"3c3a8503b832d5b523159034e6f0d5be","permalink":"https://fireship.io/snippets/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/snippets/","section":"snippets","summary":"","tags":null,"title":"Quick Snippets","type":"snippets","url":"https://fireship.io/snippets/","weight":0,"wordcount":0},{"author":null,"date":1625796030,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1625796030,"objectID":"79f59307911464e55f7d246c704f70ac","permalink":"https://fireship.io/contributors/kyle-leary/","publishdate":"2021-07-08T22:00:30-04:00","readingtime":1,"relpermalink":"/contributors/kyle-leary/","section":"contributors","summary":"Kyle aka \u0026ldquo;Klutch\u0026rdquo; or \u0026ldquo;KlutchDev\u0026rdquo; is a battle-hardened fullstack JavaScript/React \u0026amp;\u0026amp; Firebase developer from western Massachusetts. Klutch is currently learning Rust, TypeScript, and preparing for the OSWE exam. When not writing code he is relaxing at home with his long time sweetheart Chelsea and cats Murph/Zelda or shredding guitar.","tags":null,"title":"Kyle Leary","type":"contributors","url":"https://fireship.io/contributors/kyle-leary/","weight":0,"wordcount":49},{"author":null,"date":1624414382,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1624414382,"objectID":"","permalink":"https://fireship.io/tags/database/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/database/","section":"tags","summary":"","tags":null,"title":"database","type":"tags","url":"https://fireship.io/tags/database/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1624414382,"description":"How to use Google Sheets as the primary database for your web app with Next.js","dir":"lessons/google-sheets-database-nextjs/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1624414382,"objectID":"909aa62537f3b0109ae11aface634340","permalink":"https://fireship.io/lessons/google-sheets-database-nextjs/","publishdate":"2021-06-22T19:13:02-07:00","readingtime":3,"relpermalink":"/lessons/google-sheets-database-nextjs/","section":"lessons","summary":"Choosing the right database for your app is difficult. If you have a small project or are just prototyping, Google Sheets actually works quite nicely as a primary database. It is especially practical for JAM-stack web apps that use server-side rendering. The following tutorial will teach you how to use Google Sheets as a database for Next.js.\n⚠️ Be warned\u0026hellip; Google Sheets does not scale like a true production database (because that\u0026rsquo;s not what it is for).","tags":["database","nextjs","react"],"title":"Google Sheets as a Database","type":"lessons","url":"https://fireship.io/lessons/google-sheets-database-nextjs/","weight":0,"wordcount":527},{"author":null,"date":1621611949,"description":"Three.js is a cross-browser JavaScript library and application programming interface (API) used to create and display animated 3D computer graphics in a web browser using WebGL.","dir":"tags/threejs/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1621611949,"objectID":"3e4a96dc486547bf1e934ba2f54a08fe","permalink":"https://fireship.io/tags/threejs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/threejs/","section":"tags","summary":"","tags":null,"title":"Three.js","type":"tags","url":"https://fireship.io/tags/threejs/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1621611949,"description":"Build an animated 3D portfolio website with Three.js","dir":"lessons/threejs-tutorial-portfolio/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1621611949,"objectID":"73704a9f2a5d305529972e0d7821ad90","permalink":"https://fireship.io/lessons/threejs-tutorial-portfolio/","publishdate":"2021-05-21T08:45:49-07:00","readingtime":0,"relpermalink":"/lessons/threejs-tutorial-portfolio/","section":"lessons","summary":"","tags":["javascript","threejs"],"title":"Three.js Basics","type":"lessons","url":"https://fireship.io/lessons/threejs-tutorial-portfolio/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1617041636,"description":"How to accept crypto payments, like Bitcoin and Ethereum, from your web app with Coinbase \u0026 Firebase Cloud Functions","dir":"lessons/crypto-payments-web-firebase/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1617041636,"objectID":"72189c3ac77bceccd5320aba0ea3613b","permalink":"https://fireship.io/lessons/crypto-payments-web-firebase/","publishdate":"2021-03-29T11:13:56-07:00","readingtime":4,"relpermalink":"/lessons/crypto-payments-web-firebase/","section":"lessons","summary":"Accepting crypto payments, like Bitcoin and Ethereum, in your app opens the door to more customers in a very fast growing niche. Coinbase Commerce is like the Stripe Payments API for crypto. It provides a simple API where you can create charges, invoices, etc. But unlike credit cards, which are processed by a central authority, crypto payments are distributed to a global network of miners where they are confirmed on the blockchain.","tags":["crypto","cloud-functions","payments"],"title":"Accept Crypto Payments with Coinbase Commerce","type":"lessons","url":"https://fireship.io/lessons/crypto-payments-web-firebase/","weight":0,"wordcount":752},{"author":null,"date":1617041636,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1617041636,"objectID":"","permalink":"https://fireship.io/tags/payments/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/payments/","section":"tags","summary":"","tags":null,"title":"payments","type":"tags","url":"https://fireship.io/tags/payments/","weight":0,"wordcount":0},{"author":null,"date":1614723046,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1614723046,"objectID":"","permalink":"https://fireship.io/tags/webrtc/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/webrtc/","section":"tags","summary":"","tags":null,"title":"webrtc","type":"tags","url":"https://fireship.io/tags/webrtc/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1614723046,"description":"Build a Zoom-like video chat app using WebRTC and Firebase","dir":"lessons/webrtc-firebase-video-chat/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1614723046,"objectID":"8b42b30f89f5244d468ddc22449f987a","permalink":"https://fireship.io/lessons/webrtc-firebase-video-chat/","publishdate":"2021-03-02T15:10:46-07:00","readingtime":5,"relpermalink":"/lessons/webrtc-firebase-video-chat/","section":"lessons","summary":"WebRTC facilities realtime audio/video communication on the web using a peer-to-peer protocol, allowing you to build apps like Zoom, Skype, etc.\nThe following lesson builds a 1-to-1 video chat, where each peer streams directly to the other peer - there is no need for a middle-man server to handle video content. However, a 3rd party server is required for signaling that stores shared data for stream negotiation. Firestore is an excellent choice for WebRTC because it is easy to listen to updates to the database in realtime.","tags":["webrtc","firebase","javascript"],"title":"WebRTC Video Chat on Firebase","type":"lessons","url":"https://fireship.io/lessons/webrtc-firebase-video-chat/","weight":0,"wordcount":859},{"author":null,"date":1614443550,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1614443550,"objectID":"d5fb9b6a5dfe810039136f8d011a714d","permalink":"https://fireship.io/contributors/jeff-delaney/","publishdate":"2021-02-27T09:32:30-07:00","readingtime":1,"relpermalink":"/contributors/jeff-delaney/","section":"contributors","summary":"Jeff Delaney is a Google Developer Expert and the creator of fireship.io. When not writing code, he is out seeking adventure with his wife and 3 boys.","tags":null,"title":"Jeff Delaney","type":"contributors","url":"https://fireship.io/contributors/jeff-delaney/","weight":0,"wordcount":27},{"author":null,"date":1614206575,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1614206575,"objectID":"","permalink":"https://fireship.io/tags/authentication/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/authentication/","section":"tags","summary":"","tags":null,"title":"authentication","type":"tags","url":"https://fireship.io/tags/authentication/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1614206575,"description":"Harness the power of FOMO by building an invite-only phone authentication system with Firebase \u0026 React.","dir":"lessons/invite-only-firebase-phone-auth/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1614206575,"objectID":"9f68ba1b1707abad0f5156cb782d2ed8","permalink":"https://fireship.io/lessons/invite-only-firebase-phone-auth/","publishdate":"2021-02-24T15:42:55-07:00","readingtime":6,"relpermalink":"/lessons/invite-only-firebase-phone-auth/","section":"lessons","summary":"The meteoric rise of Clubhouse from a mostly unknown app to 10M weekly users demonstrates the power of #FOMO - fear of missing out. No, you can\u0026rsquo;t just download the app and start having fun. It uses an invite-only authentication system that requires a current user to invite you to the club with your phone number. Once you\u0026rsquo;re in, you\u0026rsquo;re granted two invites to send to your friends, creating a pyramid of organic user growth.","tags":["react","firebase","authentication"],"title":"Invite-Only Firebase Phone Auth","type":"lessons","url":"https://fireship.io/lessons/invite-only-firebase-phone-auth/","weight":0,"wordcount":1083},{"author":"Jeff Delaney","date":1611427912,"description":"How to implement and validate custom usernames for Firebase users with Cloud Firestore","dir":"lessons/custom-usernames-firebase/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1611427912,"objectID":"1e076aa476e90eb6d31c002f4d2c129c","permalink":"https://fireship.io/lessons/custom-usernames-firebase/","publishdate":"2021-01-23T11:51:52-07:00","readingtime":3,"relpermalink":"/lessons/custom-usernames-firebase/","section":"lessons","summary":"Firebase assigns each user a unique ID upon signing up, but many apps require users to choose their own custom unique username, which is not an out-of-box feature in Firebase. Think of apps like Twitter or Medium, where each user’s profile can be visited on a user like example.com/{username}. The following lesson demonstrates how to securely create and validate custom usernames for Firebase users by combining Cloud Firestore.\nDemo of custom usernames in Firebase","tags":["pro","firebase","firestore","authentication"],"title":"Custom Usernames in Firebase","type":"lessons","url":"https://fireship.io/lessons/custom-usernames-firebase/","weight":0,"wordcount":632},{"author":null,"date":1611427912,"description":"Firestore is a NoSQL document-oriented database that can sync data in realtime to mobile or web clients.","dir":"tags/firestore/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1611427912,"objectID":"e83734f04056eb5e9964ee0efe26bd8f","permalink":"https://fireship.io/tags/firestore/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/firestore/","section":"tags","summary":"","tags":null,"title":"Firestore","type":"tags","url":"https://fireship.io/tags/firestore/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1610746629,"description":"How to host a website or serve a webapp on the Raspberry Pi 4","dir":"lessons/host-website-raspberry-pi/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1610746629,"objectID":"c87fc1e1a571845445d4a19ca3eb6240","permalink":"https://fireship.io/lessons/host-website-raspberry-pi/","publishdate":"2021-01-15T14:37:09-07:00","readingtime":4,"relpermalink":"/lessons/host-website-raspberry-pi/","section":"lessons","summary":"AWS recently banned Parler from it\u0026rsquo;s cloud platform, effectively destroying its 10M user app with the flick of a switch. Whether you agree or not, it was within Amazon\u0026rsquo;s legal rights to make this move.\nNow imagine you\u0026rsquo;ve just been kicked off the cloud\u0026hellip; where do you go? The Internet is still an open platform, but you\u0026rsquo;re faced with the ugly prospect of a reverse cloud migration back to on-prem physical servers.","tags":["rpi","nginx"],"title":"Host a Website on Raspberry Pi","type":"lessons","url":"https://fireship.io/lessons/host-website-raspberry-pi/","weight":0,"wordcount":701},{"author":null,"date":1610746629,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1610746629,"objectID":"","permalink":"https://fireship.io/tags/nginx/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nginx/","section":"tags","summary":"","tags":null,"title":"nginx","type":"tags","url":"https://fireship.io/tags/nginx/","weight":0,"wordcount":0},{"author":null,"date":1610746629,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1610746629,"objectID":"","permalink":"https://fireship.io/tags/rpi/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rpi/","section":"tags","summary":"","tags":null,"title":"rpi","type":"tags","url":"https://fireship.io/tags/rpi/","weight":0,"wordcount":0},{"author":null,"date":1609864270,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1609864270,"objectID":"","permalink":"https://fireship.io/tags/pwa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pwa/","section":"tags","summary":"","tags":null,"title":"pwa","type":"tags","url":"https://fireship.io/tags/pwa/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1609864270,"description":"Seven awesome web-platform features you didn't know about.","dir":"lessons/pwa-top-features/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1609864270,"objectID":"ccb0199a0f0f05456e526689f7aa5efd","permalink":"https://fireship.io/lessons/pwa-top-features/","publishdate":"2021-01-05T09:31:10-07:00","readingtime":3,"relpermalink":"/lessons/pwa-top-features/","section":"lessons","summary":"Progressive Web Apps (PWA) represent a collection of capabilities that put web apps on a level playing field with native iOS, Android, and desktops apps. The following tutorial implements a 7 lesser-known web features.\n1. App Shortcuts App Shortcuts\nfile_type_config manifest.json { \u0026#34;name\u0026#34;: \u0026#34;Fireship\u0026#34;, //... \u0026#34;shortcuts\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Activity Feed\u0026#34;, \u0026#34;short_name\u0026#34;: \u0026#34;Feed\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;View your activity feed\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;/feed?utm_source=homescreen\u0026#34;, \u0026#34;icons\u0026#34;: [{ \u0026#34;src\u0026#34;: \u0026#34;/icons/feed.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;192x192\u0026#34; }] }, { \u0026#34;name\u0026#34;: \u0026#34;Recent Comments\u0026#34;, \u0026#34;short_name\u0026#34;: \u0026#34;Comments\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;View recent comments\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;/comments?","tags":["javascript","pwa"],"title":"Seven Awesome PWA Features","type":"lessons","url":"https://fireship.io/lessons/pwa-top-features/","weight":0,"wordcount":505},{"author":"Jeff Delaney","date":1606937010,"description":"Secure your Firebase app by mastering security rules","dir":"courses/firebase-security/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1606937010,"objectID":"1d63a7f89b806eb9b79e4f07cf360cfe","permalink":"https://fireship.io/courses/firebase-security/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firebase-security/","section":"courses","summary":"Firebase Security - The Full Course will teach you how to write, organize, and test Firestore security rules. The goal is to prepare developers for the safe and secure launch of a Firebase project.\n🛡️ What will I Learn? Firestore security fundamentals. How to audit a Firebase app for security vulnerabilities. Common use-cases including role-based auth, access-control lists, and more. Advanced techniques and code optimization tips Unit testing and debugging reports 🤔 Is this Course Right for Me?","tags":["firebase","security","javascript","pro"],"title":"Firebase Security Course","type":"courses","url":"https://fireship.io/courses/firebase-security/","weight":0,"wordcount":174},{"author":null,"date":1606937010,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1606937010,"objectID":"","permalink":"https://fireship.io/tags/security/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/security/","section":"tags","summary":"","tags":null,"title":"security","type":"tags","url":"https://fireship.io/tags/security/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1605460464,"description":"Build a web app the converts video to animated GIF with Web Assembly.","dir":"lessons/wasm-video-to-gif/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1605460464,"objectID":"3cc541e2b9605c9803376f413ac56e7e","permalink":"https://fireship.io/lessons/wasm-video-to-gif/","publishdate":"2020-11-15T10:14:24-07:00","readingtime":2,"relpermalink":"/lessons/wasm-video-to-gif/","section":"lessons","summary":"Web Assembly (WASM) opens the door to building high-performance apps in the browser with languages other than JavaScript. Software normally reserved for installed desktop apps can now run in the browser with near-native performance. The following tutorial demonstrates how to use FFmpeg.wasm to perform CPU-intensive video editing tasks from a frontend react app.\nInitial Setup Create a new react app, then install FFmpeg.\ncommand line npx create-snowpack-app gifmakr --template @snowpack/app-template-react npm install @ffmpeg/ffmpeg @ffmpeg/core GIF Maker App Load FFmpeg The main binary for FFmpeg is loaded asynchronously via a CDN.","tags":["wasm","react","javascript"],"title":"Video to GIF with WASM","type":"lessons","url":"https://fireship.io/lessons/wasm-video-to-gif/","weight":0,"wordcount":378},{"author":null,"date":1605460464,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1605460464,"objectID":"","permalink":"https://fireship.io/tags/wasm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/wasm/","section":"tags","summary":"","tags":null,"title":"wasm","type":"tags","url":"https://fireship.io/tags/wasm/","weight":0,"wordcount":0},{"author":null,"date":1602425684,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1602425684,"objectID":"","permalink":"https://fireship.io/tags/fauna/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fauna/","section":"tags","summary":"","tags":null,"title":"fauna","type":"tags","url":"https://fireship.io/tags/fauna/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1602425684,"description":"Learn the fundamentals of FaunaDB by modeling a twitter-like social graph.","dir":"lessons/fauna-db-quickstart/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1602425684,"objectID":"04ede749591f368c96927c15e7df8c83","permalink":"https://fireship.io/lessons/fauna-db-quickstart/","publishdate":"2020-10-11T07:14:44-07:00","readingtime":4,"relpermalink":"/lessons/fauna-db-quickstart/","section":"lessons","summary":"FaunaDB is a next-generation cloud database that combines the simplicity of NoSQL, without sacrificing the ability to model complex relationships. It\u0026rsquo;s completely serverless, fast, ACID-compliant, and has a generous free tier for small apps - basically everything you could possibly want in a fully-managed database.\nThe following lesson demonstrates how to model a basic twitter-inspired social graph with FaunaDB and access it on the web with Node.js. It will introduce you to Fauna Query Language (FQL) and common patterns for reading and writing to the database.","tags":["fauna","javascript"],"title":"FaunaDB Basics","type":"lessons","url":"https://fireship.io/lessons/fauna-db-quickstart/","weight":0,"wordcount":750},{"author":"Jeff Delaney","date":1601045733,"description":"Learn the basics of React \u0026 Firebase by building a simple group chat app from scratch.","dir":"lessons/react-firebase-chat-app-tutorial/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1601045733,"objectID":"72ee94b2739ed50db0a944151f6024b1","permalink":"https://fireship.io/lessons/react-firebase-chat-app-tutorial/","publishdate":"2020-09-25T07:55:33-07:00","readingtime":4,"relpermalink":"/lessons/react-firebase-chat-app-tutorial/","section":"lessons","summary":"The following tutorial demonstrates how to build a simple group chat app with React and Firebase. The goal of this lesson is to showcase important beginner concepts when working with the ⚛️🔥 React Firebase stack, including user authentication, firestore, and security rules.\nReact Firebase Chat Demo\nImportant Links\nLive Demo Source Code React Firebase Hooks Initial Setup Firebase Project Create a free Firebase project. Make sure to enable Google SignIn and and activate Cloud Firestore.","tags":["react","firebase","firestore"],"title":"React Firebase Chat App","type":"lessons","url":"https://fireship.io/lessons/react-firebase-chat-app-tutorial/","weight":0,"wordcount":663},{"author":"Jeff Delaney","date":1599748399,"description":"Build an animated stacked CSS card list from scratch","dir":"lessons/css-cards-animated/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1599748399,"objectID":"7de4f629c3bf6fe8a7a7aedd8c06d49c","permalink":"https://fireship.io/lessons/css-cards-animated/","publishdate":"2020-09-10T07:33:19-07:00","readingtime":3,"relpermalink":"/lessons/css-cards-animated/","section":"lessons","summary":"The following lesson demonstrates how to build an animated card collection inspired by the 2020 homepage of css-tricks.com.\nThe original version on CSS tricks\nThe cloned card stack\nStacked Card Start by adding the following HTML markup.\nHTML file_type_html index.html \u0026lt;section class=\u0026#34;card-list\u0026#34;\u0026gt; \u0026lt;article class=\u0026#34;card\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;card-header\u0026#34;\u0026gt; \u0026lt;p\u0026gt;Sep 11th 2020\u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;Never forget\u0026lt;/h2\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div class=\u0026#34;card-author\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;author-avatar\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;avatar.png\u0026#34; /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;svg class=\u0026#34;half-circle\u0026#34; viewBox=\u0026#34;0 0 106 57\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M102 4c0 27.","tags":["css"],"title":"Animated CSS Cards Tutorial","type":"lessons","url":"https://fireship.io/lessons/css-cards-animated/","weight":0,"wordcount":509},{"author":"Jeff Delaney","date":1599001779,"description":"Visual explanation of the top 7 database paradigms and what they do best.","dir":"lessons/top-seven-database-paradigms/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1599001779,"objectID":"b52ac0af4c970435cfcecaac5643fb48","permalink":"https://fireship.io/lessons/top-seven-database-paradigms/","publishdate":"2020-09-01T16:09:39-07:00","readingtime":1,"relpermalink":"/lessons/top-seven-database-paradigms/","section":"lessons","summary":"Choose the right database for the job 🔨\nDatabase Paradigms Explained Visually Key-Value Popular Key-Value Databases: Redis, Memcached, Etcd\nkey value database diagram\nWide Column Popular Wide-Column Databases: Cassandra, Apache HBase\nwide column database diagram\nDocument Oriented Popular Document Databases: MongoDB, Firestore, CouchDB\ndocument database diagram\nRelational Popular Relational Databases: MySQL, Postgres, SQL Server, CockroachDB\nGraph Popular Graph Databases: Neo4j, DGraph, Janus Graph\nSearch Engine Popular Search Databases: ElasticSearch, Algolia, MeiliSearch","tags":["sql","firestore"],"title":"Seven Database Paradigms","type":"lessons","url":"https://fireship.io/lessons/top-seven-database-paradigms/","weight":0,"wordcount":77},{"author":null,"date":1599001779,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1599001779,"objectID":"","permalink":"https://fireship.io/tags/sql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sql/","section":"tags","summary":"","tags":null,"title":"sql","type":"tags","url":"https://fireship.io/tags/sql/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1598627656,"description":"Build and deploy a fulltext search engine for your Firestore data with Meilisearch.","dir":"lessons/meilisearch-firebase-google-cloud/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1598627656,"objectID":"242805bde63b1573ac28b7706a46e5c2","permalink":"https://fireship.io/lessons/meilisearch-firebase-google-cloud/","publishdate":"2020-08-28T08:14:16-07:00","readingtime":3,"relpermalink":"/lessons/meilisearch-firebase-google-cloud/","section":"lessons","summary":"A common issue that developers face with NoSQL databases (and SQL to a lesser extent) is a lack of full-text search capabilities. If you want to build a performant typeahead search box or handle multi-property filtering on a collection, you’ll find it frustratingly difficult to implement in Firestore - it’s just not the right database for the job. There are many good solutions, like Algolia and ElasticSearch, but they can be expensive and/or complex to manage.","tags":["pro","meilisearch","firestore","cloud-functions"],"title":"Fulltext Search on Firebase with Meilisearch","type":"lessons","url":"https://fireship.io/lessons/meilisearch-firebase-google-cloud/","weight":0,"wordcount":523},{"author":null,"date":1598627656,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1598627656,"objectID":"","permalink":"https://fireship.io/tags/meilisearch/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/meilisearch/","section":"tags","summary":"","tags":null,"title":"meilisearch","type":"tags","url":"https://fireship.io/tags/meilisearch/","weight":0,"wordcount":0},{"author":null,"date":1598281736,"description":"Docker is the software that powers container-based applications, allowing teams to emulate server-side development environments at scale.","dir":"tags/docker/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1598281736,"objectID":"eec6344c5e180705ac47e54e5010ad8b","permalink":"https://fireship.io/tags/docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/docker/","section":"tags","summary":"","tags":null,"title":"Docker","type":"tags","url":"https://fireship.io/tags/docker/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1598281736,"description":"Learn the fundamentals of Docker by containerizing a Node.js app","dir":"lessons/docker-basics-tutorial-nodejs/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1598281736,"objectID":"501ed56352d297dc6ff86bb3f31d8b7b","permalink":"https://fireship.io/lessons/docker-basics-tutorial-nodejs/","publishdate":"2020-08-24T08:08:56-07:00","readingtime":1,"relpermalink":"/lessons/docker-basics-tutorial-nodejs/","section":"lessons","summary":"Code Breakdown Dockerfile A Dockerfile is like DNA for building a Docker Image.\nfile_type_docker Dockerfile FROM node:12 WORKDIR /app COPY package*.json ./ RUN npm install COPY . . ENV PORT=8080 EXPOSE 8080 CMD [ \u0026#34;npm\u0026#34;, \u0026#34;start\u0026#34; ] Dockerignore A Dockerignore file is required so we don\u0026rsquo;t add the node_modules folder to the image.\nfile_type_docker .dockerignore node_modules Node.js App This is the code we went to run as the container\u0026rsquo;s process.","tags":["docker","node"],"title":"Docker Basics Tutorial with Node.js","type":"lessons","url":"https://fireship.io/lessons/docker-basics-tutorial-nodejs/","weight":0,"wordcount":201},{"author":"Jeff Delaney","date":1595777253,"description":"Start here! Learn the fundamentals of Firebase with vanilla JS to prepare you for other frameworks.","dir":"lessons/firebase-quickstart/","fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1595777253,"objectID":"a55fb49fa749868282ad54ad69ceda2f","permalink":"https://fireship.io/lessons/firebase-quickstart/","publishdate":"2020-07-26T08:27:33-07:00","readingtime":8,"relpermalink":"/lessons/firebase-quickstart/","section":"lessons","summary":"Firebase makes app development faster ⚡, cheaper 💵, and more enjoyable 😀 for developers. The idea behind a Backend-as-a-Service (BaaS) is to eliminate the need to write and maintain server-side code - things like user authentication, trusted API calls, security logic, database connections, traffic scaling, and the list goes on. These requirements take time, money, and add complexity to a project. The more resources you can invest in the frontend user experience, the more likely your app is to succeed.","tags":["firebase","javascript","quickstart"],"title":"Firebase Quickstart","type":"lessons","url":"https://fireship.io/lessons/firebase-quickstart/","weight":0,"wordcount":1603},{"author":null,"date":1595777253,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1595777253,"objectID":"","permalink":"https://fireship.io/tags/quickstart/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/quickstart/","section":"tags","summary":"","tags":null,"title":"quickstart","type":"tags","url":"https://fireship.io/tags/quickstart/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1590977498,"description":"Advanced techniques for generating mock data and testing with the Firebase emulator suite","dir":"lessons/firebase-emulator-advanced/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1590977498,"objectID":"600f085701e06120629c14f7d2535dfe","permalink":"https://fireship.io/lessons/firebase-emulator-advanced/","publishdate":"2020-05-31T19:11:38-07:00","readingtime":4,"relpermalink":"/lessons/firebase-emulator-advanced/","section":"lessons","summary":"The Firebase emulator suite allows developers to run a mock Firebase environment locally. Last week, Firebase released a new feature called the Emulator UI to visualize and manage Firestore (and Realtime DB) from the browser. The following lesson contains a variety of advanced techniques for setting up a Firebase development environment.\n🌠Did you know? The new @firebase Emulator UI makes Firestore available on the browser window...\nWith a little bit of JS, you can extend the UI with your own custom stuff, like buttons to populate fake data.","tags":["firebase","productivity","testing","pro"],"title":"Firebase Emulator Advanced Usage Guide","type":"lessons","url":"https://fireship.io/lessons/firebase-emulator-advanced/","weight":0,"wordcount":801},{"author":null,"date":1590977498,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1590977498,"objectID":"","permalink":"https://fireship.io/tags/testing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/testing/","section":"tags","summary":"","tags":null,"title":"testing","type":"tags","url":"https://fireship.io/tags/testing/","weight":0,"wordcount":0},{"author":null,"date":1590498061,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1590498061,"objectID":"b97e2e1c5532d46861fd8d5d09991112","permalink":"https://fireship.io/contributors/david-bautista/","publishdate":"2020-05-26T13:01:01Z","readingtime":1,"relpermalink":"/contributors/david-bautista/","section":"contributors","summary":"David Bautista is a Software Engineer from Mexico.","tags":null,"title":"David Bautista","type":"contributors","url":"https://fireship.io/contributors/david-bautista/","weight":0,"wordcount":8},{"author":"Jeff Delaney","date":1590219206,"description":"How to use Google APIs on behalf of users with Node.js Cloud Functions and Firebase","dir":"lessons/google-apis-node-tutorial/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1590219206,"objectID":"f8f36bd7530123b4b0c09cb659a0ec7b","permalink":"https://fireship.io/lessons/google-apis-node-tutorial/","publishdate":"2020-05-23T00:33:26-07:00","readingtime":4,"relpermalink":"/lessons/google-apis-node-tutorial/","section":"lessons","summary":"How do you make APIs calls to a Google service on behalf of a user? The following lesson demonstrates how to get permission from a user with OAuth 2.0 to make authenticated requests to Google APIs from a backend Node.js server like Firebase Cloud Functions.\nExamples of common use cases might include:\nUpload a file to a user\u0026rsquo;s Google Drive Make an appointment on a user\u0026rsquo;s Google Calendar Access a user\u0026rsquo;s infrastructure on Google Cloud Platform 💡 Note: This lesson covers server-side OAuth.","tags":["pro","firebase","node","cloud-functions"],"title":"Access Google APIs for Users with OAuth 2.0","type":"lessons","url":"https://fireship.io/lessons/google-apis-node-tutorial/","weight":0,"wordcount":719},{"author":null,"date":1590152197,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1590152197,"objectID":"","permalink":"https://fireship.io/tags/auth/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/auth/","section":"tags","summary":"","tags":null,"title":"auth","type":"tags","url":"https://fireship.io/tags/auth/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1590152197,"description":"How to setup express middleware for serverside auth in Firebase","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1590152197,"objectID":"b43c96e1e2c92befb98de4571e2c38c7","permalink":"https://fireship.io/snippets/express-middleware-auth-token-firebase/","publishdate":"2020-05-22T05:56:37-07:00","readingtime":2,"relpermalink":"/snippets/express-middleware-auth-token-firebase/","section":"snippets","summary":"The following snippet demonstrates how to setup server-side authentication in Firebase on any node server using Express.js.\nNote. If using Firebase Cloud Functions, you can use Callable Functions to automatically handle this type of authentication.\nClient-side: Include the ID Token Your client-side code must attach the ID token to the authorization header when making a request to the server. The example below uses the browser\u0026rsquo;s built in fetch API.\nfile_type_js frontend-app.","tags":["node","security","auth"],"title":"Authenticate a Firebase User on the Server","type":"lessons","url":"https://fireship.io/snippets/express-middleware-auth-token-firebase/","weight":0,"wordcount":264},{"author":null,"date":1589975912,"description":"Deno is a simple, modern and secure runtime for JavaScript, TypeScript, and WebAssembly that uses V8 and is built in Rust.","dir":"tags/deno/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1589975912,"objectID":"12206891c5ed678f723febdac65e3403","permalink":"https://fireship.io/tags/deno/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/deno/","section":"tags","summary":"","tags":null,"title":"Deno","type":"tags","url":"https://fireship.io/tags/deno/","weight":0,"wordcount":0},{"author":null,"date":1589843820,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1589843820,"objectID":"","permalink":"https://fireship.io/tags/regex/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/regex/","section":"tags","summary":"","tags":null,"title":"regex","type":"tags","url":"https://fireship.io/tags/regex/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1589843820,"description":"A collection of useful regular expression techniques and examples for the JavaScript developer.","dir":"lessons/regex-cheat-sheet-js/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1589843820,"objectID":"06f4ff5ba4866db28826cd4c5a4af073","permalink":"https://fireship.io/lessons/regex-cheat-sheet-js/","publishdate":"2020-05-18T16:17:00-07:00","readingtime":3,"relpermalink":"/lessons/regex-cheat-sheet-js/","section":"lessons","summary":"Regular Expressions are notoriously difficult to learn - they have a very compact syntax that ends up looking like gibberish. However, they can be extremely powerful when it comes to form validation, find and replace tasks, and/or searching through a body of text. The following cheatsheet provides common RegEx examples and techniques for the JavaScript developer.\n🔥 There are several awesome tools that can help you debug RegEx in the browser - my personal favorite is RegExr.","tags":["javascript","regex"],"title":"Regex Cheat Sheet","type":"lessons","url":"https://fireship.io/lessons/regex-cheat-sheet-js/","weight":0,"wordcount":514},{"author":"Jeff Delaney","date":1587308417,"description":"How to interop between JavaScript and Dart with Flutter Web","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1587308417,"objectID":"d5f668eb20f4b8dab1ba7d5d04f1a6b8","permalink":"https://fireship.io/snippets/using-js-with-flutter-web/","publishdate":"2020-04-19T08:00:17-07:00","readingtime":2,"relpermalink":"/snippets/using-js-with-flutter-web/","section":"snippets","summary":"Flutter Web opens the door to building progressive web apps (PWAs) entirely in Dart. However, your Dart code will likely need to interop with JavaScript at some point to access browser APIs and/or your own custom JS apps. The following snippet demonstrates how access JS from a Flutter web app.\nUsing JavaScript in Dart \u0026amp; Flutter Dart.js is a built-in library that can interop with JavaScript.\nAdd a Script Create a JS file in the web directory and add some functions to it.","tags":["flutter","javascript"],"title":"How to use JS with Flutter Web","type":"lessons","url":"https://fireship.io/snippets/using-js-with-flutter-web/","weight":0,"wordcount":277},{"author":"Jeff Delaney","date":1587092348,"description":"Build an animated multi-level dropdown menu from scratch with React, inspired by Facebook's 2020 UI update","dir":"lessons/dropdown-menu-multi-level-react/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1587092348,"objectID":"e7d6a5e526148ef8fbeec36fb48f6806","permalink":"https://fireship.io/lessons/dropdown-menu-multi-level-react/","publishdate":"2020-04-16T19:59:08-07:00","readingtime":5,"relpermalink":"/lessons/dropdown-menu-multi-level-react/","section":"lessons","summary":"The following tutorial demonstrates how to build animated dropdown menu with React. It is inspired by Facebook\u0026rsquo;s March 2020 web UI update.\nFacebook\u0026rsquo;s new UI in 2020\nInitial Setup Start by creating a new app with CRA and install the React Transition Group package to handle animation.\ncommand line npx create-react-app facebook cd facebook npm i react-transition-group npm start Top Navigation Build a simple flexbox navigation bar to give the dropdown some context.","tags":["react","css"],"title":"Multi-Level Dropdown Menu with React","type":"lessons","url":"https://fireship.io/lessons/dropdown-menu-multi-level-react/","weight":0,"wordcount":904},{"author":null,"date":1586981309,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1586981309,"objectID":"","permalink":"https://fireship.io/tags/gcp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gcp/","section":"tags","summary":"","tags":null,"title":"gcp","type":"tags","url":"https://fireship.io/tags/gcp/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1586981309,"description":"Use Secret Manager to handle sensitive data in Firebase Cloud Functions","dir":"lessons/secret-manager-with-firebase/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1586981309,"objectID":"fbb73038f73057a070fb037cf3aefec7","permalink":"https://fireship.io/lessons/secret-manager-with-firebase/","publishdate":"2020-04-15T13:08:29-07:00","readingtime":3,"relpermalink":"/lessons/secret-manager-with-firebase/","section":"lessons","summary":"Secret Manager is a new service on Google Cloud that allows us to store and version sensitive data like private API keys and passwords, then access it from any cloud service. It provides encryption, audit logging, versioning, and IAM roles for secure fine-grained control over sensitive information.\nA common use-case for a Firebase apps is the management of secret API keys in a Cloud Function. The following lesson will teach you how add secrets via the Google Cloud console, then read them from a Firebase Cloud Function with Node.","tags":["firebase","cloud-functions","gcp","pro"],"title":"Google Secret Manager with Firebase","type":"lessons","url":"https://fireship.io/lessons/secret-manager-with-firebase/","weight":0,"wordcount":573},{"author":null,"date":1586304000,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1586304000,"objectID":"ed51a28e589501c406f22604364c7bd1","permalink":"https://fireship.io/contributors/johan-walhout/","publishdate":"2020-04-08T00:00:00Z","readingtime":1,"relpermalink":"/contributors/johan-walhout/","section":"contributors","summary":"Johan is a software engineer developing apps and webapplications in Angular 2+, VueJS, Nodejs and Dart/Flutter. When he is not working on new projects, he enjoy to have adventures with his wife, four boys and a dog.","tags":null,"title":"Johan Walhout","type":"contributors","url":"https://fireship.io/contributors/johan-walhout/","weight":0,"wordcount":37},{"author":"Johan Walhout","date":1586297657,"description":"Build a form that preloads and autosaves data to Firestore in realtime.","dir":"lessons/vue-autosaving-forms-with-firestore/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1586297657,"objectID":"50f3bfe04c5ecd16f65da62fa12e9b73","permalink":"https://fireship.io/lessons/vue-autosaving-forms-with-firestore/","publishdate":"2020-04-07T15:14:17-07:00","readingtime":4,"relpermalink":"/lessons/vue-autosaving-forms-with-firestore/","section":"lessons","summary":"Modern applications that accept complex user inputs often provide an automatic save action that runs in the background, such as Google Docs and Microsoft Office:\nMicrosoft Office files are auto-saved\nThe following lesson builds a reactive Vue form that automatically syncs the user\u0026rsquo;s input to a backend database - Firestore. It keeps track of the state of the form, and when modified, waits for a short debounce before writing the changes to the backend database.","tags":["vue","firestore","forms"],"title":"Autosave Vue Forms with Firestore","type":"lessons","url":"https://fireship.io/lessons/vue-autosaving-forms-with-firestore/","weight":0,"wordcount":816},{"author":null,"date":1586297657,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1586297657,"objectID":"","permalink":"https://fireship.io/tags/forms/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/forms/","section":"tags","summary":"","tags":null,"title":"forms","type":"tags","url":"https://fireship.io/tags/forms/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1586033367,"description":"How to perform multifactor authentication (2FA) with SMS text verification using Firebase","dir":"lessons/two-factor-auth-firebase/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1586033367,"objectID":"8d5e804da4692a85b407f4c11ceb73dd","permalink":"https://fireship.io/lessons/two-factor-auth-firebase/","publishdate":"2020-04-04T13:49:27-07:00","readingtime":5,"relpermalink":"/lessons/two-factor-auth-firebase/","section":"lessons","summary":"How do you handle two-step verification (2FA) or multifactor authentication (MFA) in Firebase? Until recently, the answer was you can\u0026rsquo;t. Thankfully, in 2020 we can implement multifactor auth flows in Firebase with Google Cloud Identity Platform. The following tutorial demonstrates an optional multifactor auth flow that works like this\u0026hellip;\nSign up with email/password and require email verification. Opt-in to MFA and register phone number(s). Attempt login from a new device. Verify SMS text code verification.","tags":["firebase","auth","pro"],"title":"Multifactor Auth with Firebase (2FA)","type":"lessons","url":"https://fireship.io/lessons/two-factor-auth-firebase/","weight":0,"wordcount":971},{"author":"Jeff Delaney","date":1585945362,"description":"The ultimate web developer's environment setup on Windows, including WSL for Linux (Ubuntu)","dir":"lessons/windows-10-for-web-dev/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1586118162,"objectID":"029c7f64abec0b9ce663810bccd0a574","permalink":"https://fireship.io/lessons/windows-10-for-web-dev/","publishdate":"2020-04-03T13:22:42-07:00","readingtime":5,"relpermalink":"/lessons/windows-10-for-web-dev/","section":"lessons","summary":"Historically, Windows has not been been the preferred OS for most web developers, but things have changed over the past couple years. Microsoft recently launched Windows Subsystem for Linux or WSL (WSL2), allowing us to install REAL linux distros (like Ubuntu) on Windows 10. This means you can use Linux toolchains (bash, zsh, tmux) and apps to manage the file system and run windows apps.\nUnlike a dual boot system, where two operating systems are installed on the same hard drive, WSL runs Linux in a compatibility layer that can run unmodified ELF64 binaries.","tags":["productivity","github","node"],"title":"Web Development Setup Guide for Windows with Linux (WSL)","type":"lessons","url":"https://fireship.io/lessons/windows-10-for-web-dev/","weight":0,"wordcount":942},{"author":"Jeff Delaney","date":1585769010,"description":"Build a realtime voice chat PWA with Vue and Firebase from scratch.","dir":"courses/vue/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1585769010,"objectID":"1c70695243aeaf34f03d532f210093de","permalink":"https://fireship.io/courses/vue/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/vue/","section":"courses","summary":"🎤 What will I build? The Vue Firebase Project Course will teach you the basics of full-stack web development by building a chat prototype from scratch.\nYou will build a realtime 💬 walkie-talkie style chat app with the ability to record and upload audio from the device - inspired by the popular Voxer mobile app.\n💡 What will I Learn? In this course you will learn\u0026hellip;\nFundamentals of of Vue components and reactivity Dynamic Vue routing User authentication with Firebase (Anonymous, Email/Password) Usage of the Vuefire Package Vue Composition API Chat Features in Firestore Record audio on the web Upload files to Firebase Storage 🤔 Is this Course Right for Me?","tags":["pro","vue"],"title":"The Vue Firebase Project Course","type":"courses","url":"https://fireship.io/courses/vue/","weight":0,"wordcount":168},{"author":"Jeff Delaney","date":1585076601,"description":"Build a clickable dropdown menu with CSS (no JavaScript)","dir":"snippets/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1585076601,"objectID":"114bdfb4cb29ea9d7732b82e7d815eea","permalink":"https://fireship.io/snippets/basic-css-dropdown-menu/","publishdate":"2020-03-24T12:03:21-07:00","readingtime":2,"relpermalink":"/snippets/basic-css-dropdown-menu/","section":"snippets","summary":"The following snippet demonstrates how to build a dropdown menu with CSS (no JavaScript) that maintains its state when clicked. The special sauce in this demo is the :focus-within pseudo selector, which allows the dropdown to stay open when its child links are clicked.\nStep 1: Start with a Navigation Bar Start with some navbar markup.\nfile_type_html \u0026lt;nav class=\u0026#34;navbar\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;Home\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;About\u0026lt;/li\u0026gt; \u0026lt;!-- Dropdown will go here --\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;Login\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; The navbar is just simple flex container.","tags":["css"],"title":"How to Build a CSS Dropdown Menu","type":"lessons","url":"https://fireship.io/snippets/basic-css-dropdown-menu/","weight":0,"wordcount":305},{"author":"Jeff Delaney","date":1585076440,"description":"Build a dynamic theme-switcher with CSS variables and JavaScript.","dir":"lessons/theme-toggler/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1585076440,"objectID":"6911f63082b33afe15ae207047d48509","permalink":"https://fireship.io/lessons/theme-toggler/","publishdate":"2020-03-24T12:00:40-07:00","readingtime":2,"relpermalink":"/lessons/theme-toggler/","section":"lessons","summary":"Almost every good dev website these days has the ability to switch between light/dark mode - but how do you toggle multiple themes and style variations? The following lesson demonstrates how to build a theme switcher, inspired by Alligator.io, that allows a user to switch between four different global styles - light, dark, light-solar, and dark-solar.\nTheme Switcher Dropdown Menu The HTML markup should should have some type of clickable element.","tags":["css","javascript"],"title":"How to Build a Theme-Switcher","type":"lessons","url":"https://fireship.io/lessons/theme-toggler/","weight":0,"wordcount":419},{"author":"Jeff Delaney","date":1584116808,"description":"Five ways to automate your development process with Github Actions","dir":"lessons/five-useful-github-actions-examples/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1584116808,"objectID":"b3393e2e289def541e9fbcb6b7234d05","permalink":"https://fireship.io/lessons/five-useful-github-actions-examples/","publishdate":"2020-03-13T09:26:48-07:00","readingtime":2,"relpermalink":"/lessons/five-useful-github-actions-examples/","section":"lessons","summary":"Github Actions make it easy to roll out a wide variety of DevOps automation tasks. The following lesson provides five examples of CI/CD and automation using Github Actions.\nExample 1: Continuous Integration Continuous Integration (CI) automates the process of testing and building your code before merging it. In practice, developers should commit or integrate their changes to the main shared repo once-per-day (or more).\nWorkflow file_type_light_yaml .github/workflows/workflow.yml name: Node Continuous Integration on: pull_request: branches: [ master ] jobs: test_pull_request: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-node@v1 with: node-version: 12 - run: npm ci - run: npm test - run: npm run build Example 2: Continuous Deployment Continuous Deployment (CD) automatically releases new production code to users.","tags":["github"],"title":"Five Useful Github Actions Examples","type":"lessons","url":"https://fireship.io/lessons/five-useful-github-actions-examples/","weight":0,"wordcount":414},{"author":"Jeff Delaney","date":1584058851,"description":"How to implement a daily background job that exports your Firestore data to a storage bucket.","dir":"snippets/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1584058851,"objectID":"cc0e8a14f4586e4030aa2ad65d022e40","permalink":"https://fireship.io/snippets/firestore-automated-backups/","publishdate":"2020-03-12T17:20:51-07:00","readingtime":2,"relpermalink":"/snippets/firestore-automated-backups/","section":"snippets","summary":"As of today, Firestore does not support automatic backups, but it DOES support exports via the gcloud CLI or REST API. Although not technically a backup in database jargon, an automatic export is valuable to have for disaster recovery because it can be re-imported to replace lost data.\nThe following snippet exports all Firestore data automatically every day at midnight using a scheduled Github Action.\nGenerate a Service Key on GCP We need a service account to grant Github Actions permission to run the export command via the Google Cloud CLI.","tags":["firebase","firestore","github"],"title":"Automatic Backups for Firestore via Github Actions","type":"lessons","url":"https://fireship.io/snippets/firestore-automated-backups/","weight":0,"wordcount":364},{"author":"Jeff Delaney","date":1583690688,"description":"Build three different responsive CSS grid layouts from scratch","dir":"lessons/three-responsive-css-grid-layouts/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1583690688,"objectID":"a9b8281433a4d8a91499589e77e490d0","permalink":"https://fireship.io/lessons/three-responsive-css-grid-layouts/","publishdate":"2020-03-08T11:04:48-07:00","readingtime":3,"relpermalink":"/lessons/three-responsive-css-grid-layouts/","section":"lessons","summary":"The following lesson contains three examples of CSS Grid layouts.\nBootstrap-Style 12 Column Grid Grid can significantly reduce the amount of code required to build responsive row/column layouts. Unlike a flex-based grid like Bootstrap, it does not require a bunch of classes in the markup to make the children responsive.\nThe grid below is an example of an implicit grid because we do not know the exact number of rows or columns in advance.","tags":["css"],"title":"CSS Grid Layout Examples","type":"lessons","url":"https://fireship.io/lessons/three-responsive-css-grid-layouts/","weight":0,"wordcount":502},{"author":null,"date":1583330207,"description":"Electron is a framework designed to create cross-platform desktop applications using HTML, CSS, and JavaScript, which are rendered using a flavor of the Chromium browser engine, and a backend using the Node.js runtime environment.","dir":"tags/electron/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1583330207,"objectID":"bb92eb55967bcbf58b49321abfd11d89","permalink":"https://fireship.io/tags/electron/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/electron/","section":"tags","summary":"","tags":null,"title":"Electron","type":"tags","url":"https://fireship.io/tags/electron/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1583330207,"description":"Build an Electron App that can capture and record video files from your desktop.","dir":"lessons/electron-screen-recorder-project-tutorial/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1583330207,"objectID":"024f62c66f3a48c4d85799aaa0fcce5d","permalink":"https://fireship.io/lessons/electron-screen-recorder-project-tutorial/","publishdate":"2020-03-04T06:56:47-07:00","readingtime":4,"relpermalink":"/lessons/electron-screen-recorder-project-tutorial/","section":"lessons","summary":"Electron opens the world of desktops apps to the average JavaScript developer. It wraps Chromium with Node.js, providing a browser for building UIs and Node for low-level system operations.\nThe following project tutorial demonstrates how to build a simple screen recorder with Electron. The app can retrieve the available screens from the system, turn the screen into a video feed, then record and save the raw video file to the system.","tags":["electron","javascript","node"],"title":"Electron Screen Capture Tutorial","type":"lessons","url":"https://fireship.io/lessons/electron-screen-recorder-project-tutorial/","weight":0,"wordcount":676},{"author":"Jeff Delaney","date":1583013850,"description":"Build a Responsive Animated Icon Navbar with plain CSS","dir":"lessons/css-responsive-icon-navbar/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1583013850,"objectID":"192e07a694a9b0eeb10cfe3003fe4164","permalink":"https://fireship.io/lessons/css-responsive-icon-navbar/","publishdate":"2020-02-29T15:04:10-07:00","readingtime":4,"relpermalink":"/lessons/css-responsive-icon-navbar/","section":"lessons","summary":"The following lesson demonstrates how to build a responsive, animated icon navigation bar using nothing but plain CSS. This project combines a variety of modern CSS features like flexbox, media queries, transitions, and filters to build a unique experience with minimal code.\nStep 1 - Initial Setup 🚨 The demo contains a bunch of dummy HTML not shown below. Copy or clone it from the full source code to build the demo locally.","tags":["css"],"title":"Responsive Animated Navbar with CSS","type":"lessons","url":"https://fireship.io/lessons/css-responsive-icon-navbar/","weight":0,"wordcount":727},{"author":"Jeff Delaney","date":1581611859,"description":"Security concepts, risks, and exploits that every web developer should know about.","dir":"lessons/7-security-concepts-hacks-web-developers/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1581611859,"objectID":"51ae2bc9f4b44a6f4f687da1eeb8e477","permalink":"https://fireship.io/lessons/7-security-concepts-hacks-web-developers/","publishdate":"2020-02-13T09:37:39-07:00","readingtime":4,"relpermalink":"/lessons/7-security-concepts-hacks-web-developers/","section":"lessons","summary":"Cloud providers and web application frameworks go to great lengths to protect you from writing insecure code. The Cloud provides secure defaults and monitoring for your infrastructure, while Angular and React automatically sanitize HTML to prevent the injection of malicious JavaScript. Despite these safeguards, no application is 100%, secure and clever new exploits will be discovered. The following lesson explains some of the most common hacking techniques and how to secure your app against them.","tags":["javascript","security"],"title":"Top 7 Security Concepts for Web Developers","type":"lessons","url":"https://fireship.io/lessons/7-security-concepts-hacks-web-developers/","weight":0,"wordcount":761},{"author":"Jeff Delaney","date":1581456568,"description":"How to delete a Firestore Collection or Subcollection","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1581456568,"objectID":"b70cb5656d9442a075e4a1d8878e35f7","permalink":"https://fireship.io/snippets/delete-firestore-collection/","publishdate":"2020-02-11T14:29:28-07:00","readingtime":2,"relpermalink":"/snippets/delete-firestore-collection/","section":"snippets","summary":"Deleting an entire collection from Firestore should be handled on a backend server. Collections can grow infinitely large, so deleting a millions of documents can be an excessively large workload to put on a clientside web or mobile app.\nOption A - Use the CLI or Console You can manually delete a collection or subcollection from the Firebase Console OR by using the CLI.\ncommand line firebase firestore:delete path-to-delete Option B - Use a Cloud Function It is possible to interact with Firebase Tools from a Cloud Function.","tags":["firebase","firestore"],"title":"Delete a Firestore Collection","type":"snippets","url":"https://fireship.io/snippets/delete-firestore-collection/","weight":0,"wordcount":221},{"author":null,"date":1581262884,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1587397284,"objectID":"","permalink":"https://fireship.io/tags/ios/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ios/","section":"tags","summary":"","tags":null,"title":"ios","type":"tags","url":"https://fireship.io/tags/ios/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1581262884,"description":"Authenticate users into your Firebase app using Sign In with Apple on the web","dir":"lessons/apple-signin-with-firebase-tutorial/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1587397284,"objectID":"706905bb239c4e52a4db957bac457b04","permalink":"https://fireship.io/lessons/apple-signin-with-firebase-tutorial/","publishdate":"2020-02-09T08:41:24-07:00","readingtime":3,"relpermalink":"/lessons/apple-signin-with-firebase-tutorial/","section":"lessons","summary":"Sign in with Apple was announced in 2019 and allows users to authenticate into your Firebase app with an Apple ID. Users must have two-factor authentication (2FA) enabled on their Apple account AND be signed into iCloud.\nThe following lesson demonstrates how to configure Apple SignIn with the Firebase JavaScript SDK (web).\n🚨 As of April 2020, all native iOS apps that offer social auth methods (Google, Facebook, etc.) MUST also include Apple Sign In as an option.","tags":["auth","ios","javascript"],"title":"Sign In with Apple on Firebase","type":"lessons","url":"https://fireship.io/lessons/apple-signin-with-firebase-tutorial/","weight":0,"wordcount":483},{"author":null,"date":1576506423,"description":"Angular is a framework designed for building high-performance cross-platform JavaScript applications.","dir":"tags/angular/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1581370830,"objectID":"54238e8102445a0c3f39a6b0ee77f082","permalink":"https://fireship.io/tags/angular/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/angular/","section":"tags","summary":"","tags":null,"title":"Angular","type":"tags","url":"https://fireship.io/tags/angular/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1576506423,"description":"New features, disruptive trends, and awesome tools coming to a JavaScript near you in the year 2020.","dir":"lessons/javascript-2020-predictions/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1576506423,"objectID":"f466eb6a25fc4a709f2c58cf6a35690b","permalink":"https://fireship.io/lessons/javascript-2020-predictions/","publishdate":"2019-12-16T07:27:03-07:00","readingtime":0,"relpermalink":"/lessons/javascript-2020-predictions/","section":"lessons","summary":"","tags":["javascript","react","angular","vue","svelte"],"title":"Javascript 2020 Predictions","type":"lessons","url":"https://fireship.io/lessons/javascript-2020-predictions/","weight":0,"wordcount":0},{"author":null,"date":1576004347,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1576004347,"objectID":"","permalink":"https://fireship.io/tags/aws/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/aws/","section":"tags","summary":"","tags":null,"title":"aws","type":"tags","url":"https://fireship.io/tags/aws/","weight":0,"wordcount":0},{"author":null,"date":1576004347,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1576004347,"objectID":"","permalink":"https://fireship.io/tags/compsci/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/compsci/","section":"tags","summary":"","tags":null,"title":"compsci","type":"tags","url":"https://fireship.io/tags/compsci/","weight":0,"wordcount":0},{"author":null,"date":1576004347,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1576004347,"objectID":"","permalink":"https://fireship.io/tags/serverless/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/serverless/","section":"tags","summary":"","tags":null,"title":"serverless","type":"tags","url":"https://fireship.io/tags/serverless/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1576004347,"description":"Take a bird's eye view of Cloud Computing in 2020 and learn essential concepts for software developers.","dir":"lessons/cloud-computing-in-2020/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1576004347,"objectID":"a5a421a8080b120894d491310617fe0d","permalink":"https://fireship.io/lessons/cloud-computing-in-2020/","publishdate":"2019-12-10T11:59:07-07:00","readingtime":1,"relpermalink":"/lessons/cloud-computing-in-2020/","section":"lessons","summary":"Data Sources Gartner Forecasts Forbes Enterprise Computing Flexera Report 2019 ","tags":["compsci","serverless","gcp","aws"],"title":"What is Cloud Computing in 2020?","type":"lessons","url":"https://fireship.io/lessons/cloud-computing-in-2020/","weight":0,"wordcount":10},{"author":"Jeff Delaney","date":1575408120,"description":"A comprehensive guide to serverless Slack Apps with Firebase Cloud Functions \u0026 Firestore","dir":"lessons/how-to-build-a-slack-bot/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1575408120,"objectID":"00c1669e0f34b2c494001c1df1b84d2a","permalink":"https://fireship.io/lessons/how-to-build-a-slack-bot/","publishdate":"2019-12-03T14:22:00-07:00","readingtime":6,"relpermalink":"/lessons/how-to-build-a-slack-bot/","section":"lessons","summary":"Slack Apps, or Bots, allow you to extend slack with interactive features that can improve your teams productivity. The following lesson is a step-by-step guide to building a Slack App using Firebase Cloud Functions as the backend server.\nThis lesson builds Slack App for the actual Fireship Slack. Join to see the CyberJeff bot in action.\nOur Slack App will perform the following tasks.\nListen to events, such as a new user joining the #general channel.","tags":["slack","cloud-functions","node"],"title":"How to Build a Slack App","type":"lessons","url":"https://fireship.io/lessons/how-to-build-a-slack-bot/","weight":0,"wordcount":1135},{"author":null,"date":1575408120,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1575408120,"objectID":"","permalink":"https://fireship.io/tags/slack/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/slack/","section":"tags","summary":"","tags":null,"title":"slack","type":"tags","url":"https://fireship.io/tags/slack/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1575303598,"description":"Calculate the rotation of a wheel in Flutter from user pan gestures.","dir":"snippets/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1575303598,"objectID":"3b5179b093df9fb7ca11e88e661dd52a","permalink":"https://fireship.io/snippets/circular-drag-flutter/","publishdate":"2019-12-02T09:19:58-07:00","readingtime":2,"relpermalink":"/snippets/circular-drag-flutter/","section":"snippets","summary":"A UI element that is not currently supported out of the box with Flutter is a click wheel, or knob, or radial control, rotatable circle, or whatever you want to call it. The following snippet demonstrates how to take a circular container, then detect which direction the user is rotating (clockwise or counter clockwise) and its velocity.\nFull wheel demo source code.\nFlutter Circular Pan Wheel Detect Pan Gestures Use a GestureDetector to wrap a container with a BoxShape.","tags":["flutter","ui","dart"],"title":"Handle Radial Pan Events in Flutter","type":"lessons","url":"https://fireship.io/snippets/circular-drag-flutter/","weight":0,"wordcount":394},{"author":null,"date":1575303598,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1575303598,"objectID":"","permalink":"https://fireship.io/tags/ui/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ui/","section":"tags","summary":"","tags":null,"title":"ui","type":"tags","url":"https://fireship.io/tags/ui/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1575216763,"description":"Build a throwback iPod UI with a click wheel scroller using Flutter.","dir":"lessons/flutter-ipod/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1575303163,"objectID":"88f108f6248aa173be01f439dd6ae626","permalink":"https://fireship.io/lessons/flutter-ipod/","publishdate":"2019-12-01T09:12:43-07:00","readingtime":5,"relpermalink":"/lessons/flutter-ipod/","section":"lessons","summary":"An awesome tweet was making the rounds last week that recreates the iPod Classic UI with SwiftUI. It features a click wheel that scrolls through a list of items when rotated and makes for an excellent Flutter UI challenge.\nTurned my iPhone into an iPod Classic with Click Wheel and Cover Flow with #SwiftUI pic.twitter.com/zVk5YJj0rh\n\u0026mdash; Elvin (@elvin_not_11) November 27, 2019 Creating an animated scrolling list with Flutter is a piece of cake, but calculating scroll direction/velocity from the pan events on the wheel is a bigger challenge.","tags":["flutter"],"title":"Build the Classic iPod UI in Flutter","type":"lessons","url":"https://fireship.io/lessons/flutter-ipod/","weight":0,"wordcount":884},{"author":"Jeff Delaney","date":1575126672,"description":"Advanced security rules and techniques for rate-limiting Firestore writes.","dir":"lessons/how-to-rate-limit-writes-firestore/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1575126672,"objectID":"1323d2aecf8947b72297d7b230626107","permalink":"https://fireship.io/lessons/how-to-rate-limit-writes-firestore/","publishdate":"2019-11-30T08:11:12-07:00","readingtime":4,"relpermalink":"/lessons/how-to-rate-limit-writes-firestore/","section":"lessons","summary":"Rate limiting is the process of blocking access to cloud resources after a certain threshold has been reached. Firestore bills based on the quantity of reads and writes, but does not currently provide a way to block IPs or set explicit rate limits with Security Rules. So how do you prevent a DDoS attack or a disgruntled user from spamming the app with unnecessary records.\nThe following examples are based on an app that needs to\u0026hellip;","tags":["firebase","firestore","security","pro"],"title":"Firestore Rate Limiting","type":"lessons","url":"https://fireship.io/lessons/how-to-rate-limit-writes-firestore/","weight":0,"wordcount":774},{"author":"Jeff Delaney","date":1574785026,"description":"Pagination queries with Firestore that move forward and backward.","dir":"lessons/firestore-pagination-guide/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1574785026,"objectID":"c93fbf4dcf87463656d9b272d2791437","permalink":"https://fireship.io/lessons/firestore-pagination-guide/","publishdate":"2019-11-26T09:17:06-07:00","readingtime":3,"relpermalink":"/lessons/firestore-pagination-guide/","section":"lessons","summary":"Pagination is the process of dividing data into discrete pages. In Firestore, it is achieved by ordering a collection by a field, limiting it to a consistent page size, then offsetting the query. The Firebase Web SDK v7.3.0 introduced a new limitToLast(n) method that makes the process much easier. The following lesson demonstrates how to paginate Firestore data in both a forward and backward direction and discusses advanced serverside techniques.","tags":["firebase","firestore","javascript"],"title":"Firestore Pagination Guide","type":"lessons","url":"https://fireship.io/lessons/firestore-pagination-guide/","weight":0,"wordcount":526},{"author":"Jeff Delaney","date":1574607305,"description":"How to access the index when using the map method on a Dart List.","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1637765705,"objectID":"8ef2d8074e92da2edece886a99f1b2ac","permalink":"https://fireship.io/snippets/dart-how-to-get-the-index-on-array-loop-map/","publishdate":"2019-11-24T07:55:05-07:00","readingtime":2,"relpermalink":"/snippets/dart-how-to-get-the-index-on-array-loop-map/","section":"snippets","summary":"The following snippet demonstrates how to access the iteration index when using List.map. It is a common need in Flutter when looping over or mapping a list of values to widgets.\nProblem Unlike JavaScript, one cannot simply access the index of a list during a List.map operation in Dart.\nfile_type_dartlang main.dart List myList = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;]; myList.map( (val, index) { // This does not work! // Which index am I on?","tags":["flutter","dart"],"title":"Access the Index on Dart List.map()","type":"lessons","url":"https://fireship.io/snippets/dart-how-to-get-the-index-on-array-loop-map/","weight":0,"wordcount":256},{"author":"Jeff Delaney","date":1574365231,"description":"Learn how to build a binary clock with Flutter for the #FlutterClock competition","dir":"lessons/build-a-binary-clock-flutter/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1574365231,"objectID":"f6cbac1df09834fb192e9e5743186eec","permalink":"https://fireship.io/lessons/build-a-binary-clock-flutter/","publishdate":"2019-11-21T12:40:31-07:00","readingtime":4,"relpermalink":"/lessons/build-a-binary-clock-flutter/","section":"lessons","summary":"The Flutter Clock Contest is currently running with a submission deadline of Jan 20th, 2020. The following lesson will teach you how to build a basic clock with Flutter.\nBinary Clock Basics We are building the binary clock shown in the demo video below. Notice how the clock ticks once-per-second and updates the highlighted boxes in the UI. The actual time is shown in big plain digits at the bottom, with the binary value for each number under it.","tags":["flutter","compsci"],"title":"Build a Binary Clock with Flutter","type":"lessons","url":"https://fireship.io/lessons/build-a-binary-clock-flutter/","weight":0,"wordcount":824},{"author":null,"date":1574088062,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1574001662,"objectID":"","permalink":"https://fireship.io/tags/data-modeling/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/data-modeling/","section":"tags","summary":"","tags":null,"title":"data-modeling","type":"tags","url":"https://fireship.io/tags/data-modeling/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1574088062,"description":"How to auto-increment a document field or ID in Firestore","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1574001662,"objectID":"054a02fdf6a8a0dfd201d3464189a803","permalink":"https://fireship.io/snippets/firestore-increment-document-id-value/","publishdate":"2019-11-18T07:41:02-07:00","readingtime":3,"relpermalink":"/snippets/firestore-increment-document-id-value/","section":"snippets","summary":"The follow snippet contains strategies for ordering a collections sequentially. For example, you may want a field that increases by 1 after each new document is created. Cloud Firestore does not provide automatic ordering on the auto-generated docIDs, so we need be clever to solve this problem .\nAuto-ordering Techniques Timestamp Approach The easiest way to order by creation time is to use a server timestamp. This tells Firestore to add a date to the document based on Google Cloud\u0026rsquo;s backend time, so you\u0026rsquo;re not relying on the client\u0026rsquo;s clock (which is likely to be inaccurate).","tags":["firebase","firestore","data-modeling"],"title":"Firestore Order by Document ID or Field","type":"lessons","url":"https://fireship.io/snippets/firestore-increment-document-id-value/","weight":0,"wordcount":473},{"author":"Jeff Delaney","date":1573828862,"description":"A quick guide to Svelte custom stores and their use-cases.","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1573828862,"objectID":"a2d0b582124725c845ff44be62899014","permalink":"https://fireship.io/snippets/custom-svelte-stores/","publishdate":"2019-11-15T07:41:02-07:00","readingtime":3,"relpermalink":"/snippets/custom-svelte-stores/","section":"snippets","summary":"A store provides a reactive stream of data that can change over time. Creating a custom store in Svelte is easy. It\u0026rsquo;s just a simple matter of creating a writable store in a function and returning its subscribe function on an object.\nCustom Store Use-Cases Use-case: Business logic An obvious use case is to create abstractions for your data. You can use writable as a low-level building block for more complex features.","tags":["svelte"],"title":"Custom Svelte Store Examples","type":"lessons","url":"https://fireship.io/snippets/custom-svelte-stores/","weight":0,"wordcount":440},{"author":"Jeff Delaney","date":1572360814,"description":"Create high-performance WebGL-powered data visualizations on Google Maps with deck.gl","dir":"lessons/deckgl-google-maps-tutorial/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1572360814,"objectID":"91251c8fb948bb32f328f5aacdf6b24e","permalink":"https://fireship.io/lessons/deckgl-google-maps-tutorial/","publishdate":"2019-10-29T07:53:34-07:00","readingtime":5,"relpermalink":"/lessons/deckgl-google-maps-tutorial/","section":"lessons","summary":"Have you ever tried to load thousands of datapoints into Google Maps? It probably didn\u0026rsquo;t go very well from a performance standpoint. Deck.gl is a library that solves this problem by running expensive computations on the GPU with WebGL. This means you can run realtime 3D visualizations on datasets with millions of geographic points.\nIn the following lesson, you will learn how to add high-performance data overlays to Google Maps based on a dataset of 140,000+ incidents of gun violence in the United States.","tags":["javascript","deckgl","google-maps"],"title":"Deck.gl Google Maps Tutorial","type":"lessons","url":"https://fireship.io/lessons/deckgl-google-maps-tutorial/","weight":0,"wordcount":967},{"author":null,"date":1572360814,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1572360814,"objectID":"","permalink":"https://fireship.io/tags/deckgl/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/deckgl/","section":"tags","summary":"","tags":null,"title":"deckgl","type":"tags","url":"https://fireship.io/tags/deckgl/","weight":0,"wordcount":0},{"author":null,"date":1572360814,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1576067410,"objectID":"","permalink":"https://fireship.io/tags/google-maps/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/google-maps/","section":"tags","summary":"","tags":null,"title":"google-maps","type":"tags","url":"https://fireship.io/tags/google-maps/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1571792734,"description":"Learn how to work with the Stripe Payment Intents API and validate cards with 3D Secure.","dir":"lessons/stripe-payment-intents-tutorial/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1571792734,"objectID":"ae431b9574dd20d088231ae629a3164d","permalink":"https://fireship.io/lessons/stripe-payment-intents-tutorial/","publishdate":"2019-10-22T18:05:34-07:00","readingtime":6,"relpermalink":"/lessons/stripe-payment-intents-tutorial/","section":"lessons","summary":"Stripe provides a huge API with everything you could ever want to build a complex payment system. Recent changes in the online payments landscape have resulted in significant changes to the API, most notably the Payment Intents API. The following lesson demonstrates two modern strategies for accepting one-time payments - (1) Checkout and (2) Stripe Elements with Payment Intents.\nAs of September 2019, many European banks now require their customers to validate payments using 3D secure standard or Strong Customer Authentication SCA.","tags":["stripe","svelte","node","cloud-functions"],"title":"Stripe Payment Intents Tutorial","type":"lessons","url":"https://fireship.io/lessons/stripe-payment-intents-tutorial/","weight":0,"wordcount":1201},{"author":"Jeff Delaney","date":1570678284,"description":"A collection of tips, tricks, and common mistakes you should know about when working with Firebase.","dir":"lessons/firebase-tips-and-tricks/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1570678284,"objectID":"ba5663e20e278106f3bcba7d50f956d9","permalink":"https://fireship.io/lessons/firebase-tips-and-tricks/","publishdate":"2019-10-09T20:31:24-07:00","readingtime":3,"relpermalink":"/lessons/firebase-tips-and-tricks/","section":"lessons","summary":"The list below outlines the Firebase tips presented in the video.\nGet Started Create a two Firebase Projects - one for development and another for live production data Link Google Analytics Limit permissions for employees, follow the Principle of Least Privilege Update contact info for GDPR Add a project and don\u0026rsquo;t worry about exposing your credentials in frontend code Upgrade to Blaze, then set a budget on GCP Generate detailed reports for billing Install the Firebase Tools CLI and GCloud.","tags":["firebase"],"title":"Top 100 Firebase Tips and Tricks","type":"lessons","url":"https://fireship.io/lessons/firebase-tips-and-tricks/","weight":0,"wordcount":607},{"author":null,"date":1570466330,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1570466330,"objectID":"","permalink":"https://fireship.io/tags/apollo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/apollo/","section":"tags","summary":"","tags":null,"title":"apollo","type":"tags","url":"https://fireship.io/tags/apollo/","weight":0,"wordcount":0},{"author":null,"date":1570466330,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1570466330,"objectID":"","permalink":"https://fireship.io/tags/graphql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/graphql/","section":"tags","summary":"","tags":null,"title":"graphql","type":"tags","url":"https://fireship.io/tags/graphql/","weight":0,"wordcount":0},{"author":"Arjun Yelamanchili","date":1570466330,"description":"Learn the basics of GraphQL and Apollo by interacting with the SpaceX API","dir":"lessons/graphql-basics-tutorial/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1570466330,"objectID":"14e25557853b99d8aa50a8cc24dd3cfa","permalink":"https://fireship.io/lessons/graphql-basics-tutorial/","publishdate":"2019-10-07T09:38:50-07:00","readingtime":1,"relpermalink":"/lessons/graphql-basics-tutorial/","section":"lessons","summary":"GraphQL has been one of the fastest growing web technologies over the past few years. This lesson covers the basics of GraphQL and demonstrates how to build an Angular app that fetches data with Apollo via the public SpaceX API.\n🙏 Special thanks to Arjun for producing the code for this demo! Head over to github for the Full Lesson and give it a ⭐.","tags":["graphql","apollo","typescript","angular"],"title":"Graphql Basics Tutorial","type":"lessons","url":"https://fireship.io/lessons/graphql-basics-tutorial/","weight":0,"wordcount":65},{"author":null,"date":1570133338,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1570133338,"objectID":"","permalink":"https://fireship.io/tags/analytics/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/analytics/","section":"tags","summary":"","tags":null,"title":"analytics","type":"tags","url":"https://fireship.io/tags/analytics/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1570133338,"description":"Customize your app's UI/UX with Firebase Analytics and Remote Config in a Progressive Web App","dir":"lessons/firebase-analytics-web-guide/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1570133338,"objectID":"407f7c33795e2c5e83cc768448b35afc","permalink":"https://fireship.io/lessons/firebase-analytics-web-guide/","publishdate":"2019-10-03T13:08:58-07:00","readingtime":3,"relpermalink":"/lessons/firebase-analytics-web-guide/","section":"lessons","summary":"Firebase recently announced support for Analytics and Remote Config on the web. When combined, these services make it possible to customize the UI/UX of your app based on data collected from Google Analytics. The following lesson will show you how to collect Google Analytics events and user properties, then read aggregated data in your app to customize the experience for a specific audience.\nInitial Setup Firebase Analytics was added to the JavaScript SDK in version 7.","tags":["firebase","analytics","javascript"],"title":"Firebase Analytics for the Web","type":"lessons","url":"https://fireship.io/lessons/firebase-analytics-web-guide/","weight":0,"wordcount":517},{"author":"Jeff Delaney","date":1569251472,"description":"Implement role-based user authorization and security rules by adding custom claims to the Firebase Auth ID token.","dir":"lessons/firebase-custom-claims-role-based-auth/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1569251472,"objectID":"98b0834dbd31b129075ec077143996ef","permalink":"https://fireship.io/lessons/firebase-custom-claims-role-based-auth/","publishdate":"2019-09-23T08:11:12-07:00","readingtime":4,"relpermalink":"/lessons/firebase-custom-claims-role-based-auth/","section":"lessons","summary":"Firebase allows developers to modify authentication ID tokens to provide fine-grained system access to authorized users. The follow lesson adds custom claims to the Firebase user record to build a role-based access control feature that is secured with Firestore rules.\nSet Custom Claims from the Command Line It is not possible (currently) to add custom claims from the Firebase Console. This means we need to write some code with Firebase Admin.","tags":["firebase","auth","pro"],"title":"Advanced Firebase Auth with Custom Claims","type":"lessons","url":"https://fireship.io/lessons/firebase-custom-claims-role-based-auth/","weight":0,"wordcount":796},{"author":null,"date":1569196800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1569196800,"objectID":"b186de9523803fcc294bf0e8e05d89a3","permalink":"https://fireship.io/contributors/lenny-cunningham/","publishdate":"2019-09-23T00:00:00Z","readingtime":1,"relpermalink":"/contributors/lenny-cunningham/","section":"contributors","summary":"Lenny is a self taught hobbiest for WebApp Development. Owns Acadiana Apps. A small company specializing in custom web app development, and Google Apps Script integrations.","tags":null,"title":"Lenny Cunningham","type":"contributors","url":"https://fireship.io/contributors/lenny-cunningham/","weight":0,"wordcount":26},{"author":null,"date":1566754993,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1566754993,"objectID":"","permalink":"https://fireship.io/tags/algolia/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/algolia/","section":"tags","summary":"","tags":null,"title":"algolia","type":"tags","url":"https://fireship.io/tags/algolia/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1566754993,"description":"Build a pipeline for full-text search indexing with Firestore Cloud Functions","dir":"lessons/algolia-cloud-functions/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1566754993,"objectID":"04f6bac56d81bdc27482c48c051c6fa9","permalink":"https://fireship.io/lessons/algolia-cloud-functions/","publishdate":"2019-08-25T10:43:13-07:00","readingtime":4,"relpermalink":"/lessons/algolia-cloud-functions/","section":"lessons","summary":"One of the most commonly encountered limitations of Cloud Firestore (and GCP) is full-text search. This functionality is essential if you need to query complex text patterns in a database or filter results by multiple dynamic properties. My favorite solution to this limitation is Algolia, which provides a powerful, developer-friendly, search \u0026amp; discovery API. In the following lesson you will learn how to sync your Firestore data to an Algolia index via Cloud Functions.","tags":["node","algolia","firestore","cloud-functions"],"title":"Algolia Fulltext Search Cloud Functions","type":"lessons","url":"https://fireship.io/lessons/algolia-cloud-functions/","weight":0,"wordcount":650},{"author":"Jeff Delaney","date":1566674610,"description":"Master the fundamentals of serverless with Firebase Cloud Functions where we build seven different microservices","dir":"courses/cloud-functions/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1566674610,"objectID":"81b705f3501b8e1ec5095378373e2a63","permalink":"https://fireship.io/courses/cloud-functions/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/cloud-functions/","section":"courses","summary":"This course takes a hands-on approach to Firebase Cloud Functions where we build seven different microservices, each demonstrating a fundamental concept of the platform. Here\u0026rsquo;s a quick summary of the topics you will learn.\nServerless Computing Basics HTTP and ExpressJS Event-driven Background Functions Firestore Functions Storage Buckets and the Functions Filesystem Working with Google APIs Callable Functions and Authentication Working with 3rd party APIs like Twilio to send SMS Text messages By the end of this course you will have the foundation necessary to build virtually any Back-End feature into your Firebase app.","tags":["cloud-functions","firebase"],"title":"Cloud Functions Master Course","type":"courses","url":"https://fireship.io/courses/cloud-functions/","weight":0,"wordcount":216},{"author":"Jeff Delaney","date":1566674610,"description":"Build a full-stack Flutter app with Firebase from scratch.","dir":"courses/flutter-firebase-v1/","fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1566674610,"objectID":"c0f64f69492c56776112309b560639fc","permalink":"https://fireship.io/courses/flutter-firebase-v1/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/flutter-firebase-v1/","section":"courses","summary":"Flutter Firebase - The Full Course Version 1 will take you from zero to a complex production-ready iOS or Android app using real-world cloud infrastructure.\n⚠️ This course uses Flutter version 1. Checkout the latest version of Flutter Firebase course for version 2+.","tags":["flutter","dart","pro"],"title":"Flutter Firebase - The Full Course","type":"courses","url":"https://fireship.io/courses/flutter-firebase-v1/","weight":0,"wordcount":43},{"author":null,"date":1566674610,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1566674610,"objectID":"","permalink":"https://fireship.io/tags/ionic/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ionic/","section":"tags","summary":"","tags":null,"title":"ionic","type":"tags","url":"https://fireship.io/tags/ionic/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1566674610,"description":"Build a cross-platform app from scratch with Ionic 4, Angular, and Firebase.","dir":"courses/ionic/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1566674610,"objectID":"feb90f0a590e71be4761611e53d22a15","permalink":"https://fireship.io/courses/ionic/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/ionic/","section":"courses","summary":"The Ionic4 Master Course will teach you the fundamentals of full-stack cross-platform app development, using the combined powers of Angular \u0026amp; Firebase.\n🗿 What will I build? This is a project-based course that starts from zero and works up to an authenticated realtime todo list with push notifications. While that may not sound super exciting, it provides an ideal foundation to showcase the UI features offered by Ionic and connent them to live cloud infrastructure.","tags":["ionic","angular","firebase","pro"],"title":"Ionic 4 Firebase Master Course","type":"courses","url":"https://fireship.io/courses/ionic/","weight":0,"wordcount":196},{"author":"Jeff Delaney","date":1566674610,"description":"Build a high-performance PWA with Angular and Firebase from scratch.","dir":"courses/angular/","fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1566674610,"objectID":"179b72b7045bd16b31b8d31d82047d1d","permalink":"https://fireship.io/courses/angular/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/courses/angular/","section":"courses","summary":"🍱 What will I build? The Angular Firebase PWA Course will teach you how to build a complex progressive web app with Angular 12 (ivy), Material Design, and Firebase. It starts from absolute basics and eventually culminates with the deployment of a server-rendered PWA on Google Cloud Run.\nYou will build a full-stack Kanban (看板) storyboard app inspired by Trello. Authenticated users can create, sort, update, and delete boards with all interaction persisted in Firestore.","tags":["pro","angular","firebase"],"title":"The Angular Firebase Project Course","type":"courses","url":"https://fireship.io/courses/angular/","weight":0,"wordcount":251},{"author":"Jeff Delaney","date":1566505878,"description":"How to get started with Google Maps in Svelte 3","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1566505878,"objectID":"3f4f2b5f3464fd7b3f41f033711c0df8","permalink":"https://fireship.io/snippets/setup-google-maps-with-svelte/","publishdate":"2019-08-22T13:31:18-07:00","readingtime":3,"relpermalink":"/snippets/setup-google-maps-with-svelte/","section":"snippets","summary":"The following guide will show you how to configure Google Maps with Svelte 3.\nEnable the Google Maps JS API First, you must enable Google Maps with a Google Cloud or Firebase project, then grab your API from the credentials tab.\nEnable the Google Maps JavaScript API from a GCP or Firebase project.\nDetect when Google Maps is Ready Google Maps will be loaded asynchronously and the script can notify us when it is ready by calling a callback function.","tags":["google-maps","svelte"],"title":"Setup Google Maps With Svelte 3","type":"lessons","url":"https://fireship.io/snippets/setup-google-maps-with-svelte/","weight":0,"wordcount":432},{"author":null,"date":1565630776,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1565630776,"objectID":"","permalink":"https://fireship.io/tags/nest/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nest/","section":"tags","summary":"","tags":null,"title":"nest","type":"tags","url":"https://fireship.io/tags/nest/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1565630776,"description":"Steps to run NestJS on Firebase Cloud Functions","dir":"snippets/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1565630776,"objectID":"2d20d3a4f8e52d244d87ba2062181bbe","permalink":"https://fireship.io/snippets/setup-nestjs-on-cloud-functions/","publishdate":"2019-08-12T10:26:16-07:00","readingtime":4,"relpermalink":"/snippets/setup-nestjs-on-cloud-functions/","section":"snippets","summary":"The following snippet demonstrates two different techniques for setting up NestJS on Firebase Cloud Functions.\nOption A - Point a Function to Nest The first setup modifies the functions configuration to use the Nest /dist output, as opposed to the default functions directory. This option is ideal if you have an existing Nest app.\nStep 1 - Create Nest App command line nest generate app server Step 2 - Add Functions Add functions, then delete the automatically generated directory.","tags":["nest","typescript","cloud-functions"],"title":"Setup Nest on Cloud Functions","type":"lessons","url":"https://fireship.io/snippets/setup-nestjs-on-cloud-functions/","weight":0,"wordcount":644},{"author":"Jeff Delaney","date":1565628318,"description":"Build a fullstack conversational experience with Dialogflow and Firebase Cloud Functions.","dir":"lessons/build-a-chatbot-with-dialogflow/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1565628318,"objectID":"ef4887f8dfb243941e8334ac050dc750","permalink":"https://fireship.io/lessons/build-a-chatbot-with-dialogflow/","publishdate":"2019-08-12T09:45:18-07:00","readingtime":5,"relpermalink":"/lessons/build-a-chatbot-with-dialogflow/","section":"lessons","summary":"Chatbots make it possible for the average developer to deliver excellent (and affordable) customer service at scale - Building conversational experiences has never been easier thanks to the Dialogflow conversation platform.\nDialogflow is a free tool on Google Cloud for creating voice and text conversational interfaces. It uses Natural Language Processing NLP technology, allowing you to create experiences similar to Google Assistant or Amazon Alexa. In following lesson creates a chatbot from scratch in the three main steps:","tags":["cloud-functions","node","dialogflow","angular"],"title":"Build a Chatbot With Dialogflow","type":"lessons","url":"https://fireship.io/lessons/build-a-chatbot-with-dialogflow/","weight":0,"wordcount":1016},{"author":null,"date":1565628318,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1565628318,"objectID":"","permalink":"https://fireship.io/tags/dialogflow/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dialogflow/","section":"tags","summary":"","tags":null,"title":"dialogflow","type":"tags","url":"https://fireship.io/tags/dialogflow/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1565119866,"description":"Learn how to use a relational MySQL database with Firebase Cloud Functions and TypeORM","dir":"lessons/sql-firebase-typeorm/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1565119866,"objectID":"3a55f26369417e87c83ead9b1fed26df","permalink":"https://fireship.io/lessons/sql-firebase-typeorm/","publishdate":"2019-08-06T12:31:06-07:00","readingtime":6,"relpermalink":"/lessons/sql-firebase-typeorm/","section":"lessons","summary":"Firebase\u0026rsquo;s NoSQL databases are excellent for flexibility and scale, but there are times when a traditional relational SQL database is a better tool for the job (or you may not have a choice with a legacy system). Does that mean you should ditch the Firebase platform altogether? Of course not! In fact, connecting a Cloud SQL instance to Firebase Cloud Functions is one of the easiest ways to hook up a database to a web or mobile app.","tags":["sql","typescript","firebase","cloud-functions"],"title":"MySQL on Cloud Functions","type":"lessons","url":"https://fireship.io/lessons/sql-firebase-typeorm/","weight":0,"wordcount":1103},{"author":null,"date":1564168449,"description":"Android is a mobile operating system developed by Google that powers billions of smartphones, tablets, wearables, IoT, and other mobile devices.","dir":"tags/android/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1564168449,"objectID":"0423a0f1c4331848d8e97b3767cda60a","permalink":"https://fireship.io/tags/android/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/android/","section":"tags","summary":"","tags":null,"title":"Android","type":"tags","url":"https://fireship.io/tags/android/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1564168449,"description":"Capture an image in Flutter and upload the file to a Firebase Cloud Storage bucket.","dir":"lessons/flutter-file-uploads-cloud-storage/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1564168449,"objectID":"295e77cab05e5729f97e437ca6a17b48","permalink":"https://fireship.io/lessons/flutter-file-uploads-cloud-storage/","publishdate":"2019-07-26T12:14:09-07:00","readingtime":5,"relpermalink":"/lessons/flutter-file-uploads-cloud-storage/","section":"lessons","summary":"Camera apps are one of the most popular niches in the market, with the recent viral growth of FaceApp being a prime example. There are a variety of plugins for Flutter that make camera-based features easy to develop, and when combined with Firebase the results can be easily uploaded your backend cloud infrastructure. The following lesson demonstrates the following features:\nCapture images from the device camera or image gallery. Crop, rotate, and resize an image file.","tags":["flutter","firebase","ios","android"],"title":"Flutter File Uploads","type":"lessons","url":"https://fireship.io/lessons/flutter-file-uploads-cloud-storage/","weight":0,"wordcount":927},{"author":"Jeff Delaney","date":1563393704,"description":"Build a web scraper from scratch with Firebase Cloud Functions, Puppeteer, and NodeJS","dir":"lessons/web-scraping-guide/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1563393704,"objectID":"f03f63f63c52d5ae0c69c4e179d547ca","permalink":"https://fireship.io/lessons/web-scraping-guide/","publishdate":"2019-07-17T13:01:44-07:00","readingtime":4,"relpermalink":"/lessons/web-scraping-guide/","section":"lessons","summary":"In a perfect world, every website provides free access to data with an easy-to-use API\u0026hellip; but the world is far from perfect. However, it is possible to use web scraping techniques to manually extract data from websites by brute force. The following lesson examines two different types of web scrapers and implements them with NodeJS and Firebase Cloud Functions.\nInitial Setup Let\u0026rsquo;s start by initializing Firebase Cloud Functions with JavaScript.","tags":["node","firebase","cloud-functions","puppeteer"],"title":"Modern Web Scraping Guide","type":"lessons","url":"https://fireship.io/lessons/web-scraping-guide/","weight":0,"wordcount":757},{"author":null,"date":1563393704,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1563393704,"objectID":"","permalink":"https://fireship.io/tags/puppeteer/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/puppeteer/","section":"tags","summary":"","tags":null,"title":"puppeteer","type":"tags","url":"https://fireship.io/tags/puppeteer/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1562347560,"description":"Send emails from your app using SendGrid's transactional email API with Node and Cloud Functions","dir":"lessons/sendgrid-transactional-email-guide/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1562347560,"objectID":"dba1342e6f01f6f57a85d97e38ad9c13","permalink":"https://fireship.io/lessons/sendgrid-transactional-email-guide/","publishdate":"2019-07-05T10:26:00-07:00","readingtime":5,"relpermalink":"/lessons/sendgrid-transactional-email-guide/","section":"lessons","summary":"Transactional email is the art of communicating with users in response to events or conditions, and is an important consideration for the overall user experience (UX) of an app. One of the most popular email APIs is SendGrid (recetly acquired by Twilio). It is flexible, provides a NodeJS SDK, and starts with free tier for small projects. The following lesson will teach you how to send email from your app based on user-driven events with Firebase Cloud Functions.","tags":["firebase","cloud-functions","node"],"title":"SendGrid Transactional Email Guide","type":"lessons","url":"https://fireship.io/lessons/sendgrid-transactional-email-guide/","weight":0,"wordcount":920},{"author":"Jeff Delaney","date":1561468491,"description":"Accept In App Purchases and microtransactions in Flutter for digital products on the Apple App Store and Google Play Store.","dir":"lessons/flutter-inapp-purchases/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1561468491,"objectID":"896e82347704c5e952caaa5ee70b0464","permalink":"https://fireship.io/lessons/flutter-inapp-purchases/","publishdate":"2019-06-25T06:14:51-07:00","readingtime":7,"relpermalink":"/lessons/flutter-inapp-purchases/","section":"lessons","summary":"Flutter recently launched official support for In App Purchases (IAP) and provides a unified plugin for both iOS and Android. Native mobile apps that collect payments for digital goods on the Apple App Store and/or Google Play Store are typically required to use the In App Purchases API, which means services like Stripe and Paypal are out of the question (with the exception of payments for physically shipped goods). In reality, In App Purchases are far more lucrative for digital products, with the game Candy Crush generating $4MM in revenue per day in 2018.","tags":["flutter","payments","ios","android"],"title":"In App Purchases in Flutter","type":"lessons","url":"https://fireship.io/lessons/flutter-inapp-purchases/","weight":0,"wordcount":1329},{"author":null,"date":1561297440,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1561297440,"objectID":"","permalink":"https://fireship.io/tags/paypal/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/paypal/","section":"tags","summary":"","tags":null,"title":"paypal","type":"tags","url":"https://fireship.io/tags/paypal/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1561297440,"description":"Accept PayPal Checkout payments with Angular, React, or Vue","dir":"lessons/paypal-checkout-frontend/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1561297440,"objectID":"87c01d1cdcdc2c98feafabff93930367","permalink":"https://fireship.io/lessons/paypal-checkout-frontend/","publishdate":"2019-06-23T06:44:00-07:00","readingtime":4,"relpermalink":"/lessons/paypal-checkout-frontend/","section":"lessons","summary":"In February 2019, the PayPal Checkout API received a much needed facelift that brought massive improvements to the developer experience. The new v2 API has detailed documentation on par with Stripe and offers one of the smoothest paths to start accepting payments and/or subscriptions in a progressive web app. The following lesson will show you how to start accepting payments entirely from your frontend JavaScript code with PayPal Checkout with your choice of Angular, React, and Vue.","tags":["angular","react","vue","payments","paypal"],"title":"PayPal Checkout","type":"lessons","url":"https://fireship.io/lessons/paypal-checkout-frontend/","weight":0,"wordcount":830},{"author":"Jeff Delaney","date":1561223550,"description":"Learn the basics of JavaScript and app development while having fun in the process","dir":"courses/javascript/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1561223550,"objectID":"f4e7d1795adc4113dd0567b09c8e7cf4","permalink":"https://fireship.io/courses/javascript/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/javascript/","section":"courses","summary":"That Weird JavaScript Course takes a unique approach towards teaching fundamental programming concepts. Not only will you learn practical techniques for building apps, but you will also gain knowledge about the history, science, and culture that surrounds the world\u0026rsquo;s most widely-used programming language. My mission is to make you a well-rounded JavaScript developer who can nail job interviews and build apps in the browser and NodeJS.\n🤔 Is this Course Right for Me?","tags":["javascript"],"title":"That Weird JavaScript Course","type":"courses","url":"https://fireship.io/courses/javascript/","weight":0,"wordcount":147},{"author":"Jeff Delaney","date":1560260248,"description":"Send push notifications in Flutter using Firebase Cloud Messaging (FCM) to specific devices, topics, and user segments.","dir":"lessons/flutter-push-notifications-fcm-guide/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1560260248,"objectID":"22aee6c55a0670e3945e834594408679","permalink":"https://fireship.io/lessons/flutter-push-notifications-fcm-guide/","publishdate":"2019-06-11T06:37:28-07:00","readingtime":6,"relpermalink":"/lessons/flutter-push-notifications-fcm-guide/","section":"lessons","summary":"When used correctly, push notifications can be an excellent way to drive user engagement and keep your app in focus on a consistent basis. When used incorrectly, they can be annoying and motivate users to simply uninstall your app and never look back. Fortunately, Firebase Cloud Messaging (FCM) provides a sophisticated set of tools to send notifications only to users who actually want them. The following lesson will teach you how to configure FCM in Flutter to broadcast both Topic-based, Device-based, and Segment-based push notifications.","tags":["flutter","firebase","push-notifications","cloud-functions"],"title":"FCM Push Notifications for Flutter","type":"lessons","url":"https://fireship.io/lessons/flutter-push-notifications-fcm-guide/","weight":0,"wordcount":1269},{"author":null,"date":1560260248,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1581423279,"objectID":"","permalink":"https://fireship.io/tags/push-notifications/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/push-notifications/","section":"tags","summary":"","tags":null,"title":"push-notifications","type":"tags","url":"https://fireship.io/tags/push-notifications/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1558366993,"description":"Query across multiple Firestore subcollections for hierarchical data structures, like threaded comments.","dir":"lessons/collection-group-query-firestore/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1558366993,"objectID":"724cac5a5f062da60696f6455f79e36e","permalink":"https://fireship.io/lessons/collection-group-query-firestore/","publishdate":"2019-05-20T08:43:13-07:00","readingtime":2,"relpermalink":"/lessons/collection-group-query-firestore/","section":"lessons","summary":"At Google I/O 2019, Firebase launched a new query type, Collection Group Queries, which can have a major impact on your data modeling decisions. It allows you to combine all subcollections that share the same name, then query them together. Prior to this feature release, it was common to model one-to-many relationships with root collections that contained a field (or foreign key if you will) pointing to the parent document. Root collections are still fine, but this new feature makes it far more practical to organize your data in a natural hierarchy.","tags":["firebase","firestore","javascript"],"title":"Collection Group Query with Firestore","type":"lessons","url":"https://fireship.io/lessons/collection-group-query-firestore/","weight":0,"wordcount":370},{"author":"Jeff Delaney","date":1558026750,"description":"Learn how to query and model data in Firestore by example.","dir":"courses/firestore-data-modeling/","fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":1558026750,"objectID":"e9a6ee83dacee9f88c4ab6400a808482","permalink":"https://fireship.io/courses/firestore-data-modeling/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/courses/firestore-data-modeling/","section":"courses","summary":"The Firestore Data Modeling Course provides a foundation for modeling data relationships in NoSQL, while optimizing queries for performance, cost, and complexity. Determining the the optimal data model in Cloud Firestore is not an easy task because you need to anticipate your app\u0026rsquo;s UI/UX requirements in advance. Failure to consider the tradeoffs between various data models could lead to poor app performance and/or unnecessary cloud computing expenses. The goal of this course is to teach you the concepts necessary to make good decisions related to data modeling that minimize costs and maximize read performance.","tags":["firestore","firebase","pro"],"title":"Firestore Data Modeling","type":"courses","url":"https://fireship.io/courses/firestore-data-modeling/","weight":0,"wordcount":137},{"author":null,"date":1557608348,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1557608348,"objectID":"","permalink":"https://fireship.io/tags/advanced/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/advanced/","section":"tags","summary":"","tags":null,"title":"advanced","type":"tags","url":"https://fireship.io/tags/advanced/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1557608348,"description":"Advanced state management techniques when working with Firebase Auth \u0026 Firestore in Flutter applications.","dir":"lessons/advanced-flutter-firebase/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1557608348,"objectID":"b3429e45b392418a3733dc1df158bd64","permalink":"https://fireship.io/lessons/advanced-flutter-firebase/","publishdate":"2019-05-11T13:59:08-07:00","readingtime":6,"relpermalink":"/lessons/advanced-flutter-firebase/","section":"lessons","summary":"The following article discusses patterns that I have found exceptionally useful when implementing Firebase User Authentication and Firestore in Flutter. In particular, the Provider provides an excellent solution for sharing and managing streams with minimal boilerplate. However, to take full advantage of this package you must deserialize your raw data to a Dart class.\nIf you are building a major project with Flutter \u0026amp; Firebase, consider enrolling in the Full Flutter Firebase Course.","tags":["flutter","firebase","firestore","advanced"],"title":"Flutter Provider with Firebase","type":"lessons","url":"https://fireship.io/lessons/advanced-flutter-firebase/","weight":0,"wordcount":1125},{"author":"Jeff Delaney","date":1557441901,"description":"Learn how to get up and running with Firebase Performance in an Angular app.","dir":"lessons/firebase-performance-quickstart/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1557441901,"objectID":"758205a75add01e20ceb960bc1bd0503","permalink":"https://fireship.io/lessons/firebase-performance-quickstart/","publishdate":"2019-05-09T15:45:01-07:00","readingtime":4,"relpermalink":"/lessons/firebase-performance-quickstart/","section":"lessons","summary":"Firebase announced Performance Monitoring for the Web at Google I/O 2019 - a long-awaited feature for Progressive Web Apps. It provides a simple way to add robust performance analytics to your app with minimal effort, while also adding the ability to run custom traces in your code. In the following lesson, you will learn how to add this new tool to any web app and setup traces to find performance bottlenecks.","tags":["firebase","performance","angular"],"title":"Firebase Performance Quickstart","type":"lessons","url":"https://fireship.io/lessons/firebase-performance-quickstart/","weight":0,"wordcount":850},{"author":null,"date":1557441901,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1557441901,"objectID":"","permalink":"https://fireship.io/tags/performance/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/performance/","section":"tags","summary":"","tags":null,"title":"performance","type":"tags","url":"https://fireship.io/tags/performance/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1556649914,"description":"Learn how to create an interactive drag-and-drop UI in Flutter.","dir":"lessons/flutter-drag-and-drop-basics/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1556649914,"objectID":"46817ff53009d3ef879e378eed1c0632","permalink":"https://fireship.io/lessons/flutter-drag-and-drop-basics/","publishdate":"2019-04-30T11:45:14-07:00","readingtime":3,"relpermalink":"/lessons/flutter-drag-and-drop-basics/","section":"lessons","summary":"The following lesson will teach you how to build a simple drag-and-drop UI with the Draggable and DragTarget widgets. The demo app is a kid\u0026rsquo;s game (ages 2 to 4) that requires the user to drag a fruit emoji 🍋 from the left column to the matching color on the right. If successfully dropped it will mark that item complete ✅ and the score will increase by one. The user can also reset the game at any time by pressing on the floating action button.","tags":["flutter"],"title":"Flutter Drag and Drop Basics","type":"lessons","url":"https://fireship.io/lessons/flutter-drag-and-drop-basics/","weight":0,"wordcount":442},{"author":null,"date":1556114518,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1581370830,"objectID":"","permalink":"https://fireship.io/tags/rxjs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rxjs/","section":"tags","summary":"","tags":null,"title":"rxjs","type":"tags","url":"https://fireship.io/tags/rxjs/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1556114518,"description":"Build a realtime ToDo list with Svelte 3 and Firebase (RxFire)","dir":"lessons/svelte-v3-overview-firebase/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1556114518,"objectID":"9adcc0ea563bab781cd8a1e185c462d1","permalink":"https://fireship.io/lessons/svelte-v3-overview-firebase/","publishdate":"2019-04-24T07:01:58-07:00","readingtime":5,"relpermalink":"/lessons/svelte-v3-overview-firebase/","section":"lessons","summary":"Svelte 3 was announced recently and it delivers a refreshing alternative to the big three component frameworks/libraries of React, Angular, and Vue. In fact, calling it a framework/library would not be very accurate, because Svelte is actually a compiler that turns your code into Vanilla JS, meaning it does not need to ship the entire framework in the JS bundle. Its focus on simplicity really stands out and makes for a very developer-friendly JavaScript experience.","tags":["svelte","firebase","rxjs"],"title":"Svelte Realtime Todo List with Firebase","type":"lessons","url":"https://fireship.io/lessons/svelte-v3-overview-firebase/","weight":0,"wordcount":879},{"author":"Jeff Delaney","date":1555771489,"description":"Trigger Cloud Functions based on cron time intervals and create a task queue for dynamically scheduled jobs.","dir":"lessons/cloud-functions-scheduled-time-trigger/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1555771489,"objectID":"c1eaac9818f9fde43e16fdede87de0ea","permalink":"https://fireship.io/lessons/cloud-functions-scheduled-time-trigger/","publishdate":"2019-04-20T07:44:49-07:00","readingtime":4,"relpermalink":"/lessons/cloud-functions-scheduled-time-trigger/","section":"lessons","summary":"Last week, Firebase announced a new scheduled cron trigger for Cloud Functions that makes it easy to run serverless code on a set time interval. This function type is special because it combines the powers of Cloud Scheduler and Pub/Sub to guarantee security that you don\u0026rsquo;t have with a regular HTTP-triggered function.\nScheduling a function on a static time interval is straight forward, but what if you want to build a dynamic task queue where users can schedule their own background jobs?","tags":["cloud-functions","pubsub","firebase"],"title":"Dynamic Scheduled Background Jobs in Firebase","type":"lessons","url":"https://fireship.io/lessons/cloud-functions-scheduled-time-trigger/","weight":0,"wordcount":747},{"author":null,"date":1555771489,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1555771489,"objectID":"","permalink":"https://fireship.io/tags/pubsub/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pubsub/","section":"tags","summary":"","tags":null,"title":"pubsub","type":"tags","url":"https://fireship.io/tags/pubsub/","weight":0,"wordcount":0},{"author":null,"date":1554830702,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1554830702,"objectID":"","permalink":"https://fireship.io/tags/cloud-run/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cloud-run/","section":"tags","summary":"","tags":null,"title":"cloud-run","type":"tags","url":"https://fireship.io/tags/cloud-run/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1554830702,"description":"How to use Cloud Run on GCP to covert a Docker container into a serverless microservice.","dir":"lessons/firebase-microservices-with-cloud-run/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1554830702,"objectID":"f5b5341634a3a73d8dac4d11fc1cde35","permalink":"https://fireship.io/lessons/firebase-microservices-with-cloud-run/","publishdate":"2019-04-09T10:25:02-07:00","readingtime":3,"relpermalink":"/lessons/firebase-microservices-with-cloud-run/","section":"lessons","summary":"Yesterday Google Cloud released a game-changing new product called Cloud Run that allows you to run and scale stateless Docker containers in a serverless execution environment powered by Knative.\nBenefits\nRun backend microservices with any programming language and/or dependencies. Serverless pricing, only pay for what you use. Scale automatically. Prevent cloud vendor lock-in. Some of the things you might do with it\u0026hellip;\nDeploy server-rendered SSR frontend apps to Firebase Hosting, like Angular Universal, Nuxt, or Next.","tags":["cloud-run","gcp","firebase","vue"],"title":"Firebase Microservices With Cloud Run","type":"lessons","url":"https://fireship.io/lessons/firebase-microservices-with-cloud-run/","weight":0,"wordcount":571},{"author":"Jeff Delaney","date":1554734462,"description":"Examples of cron expressions for configuring time schedules and cronjobs.","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1555771262,"objectID":"75cffb00a4c82eb1f1700247ba693879","permalink":"https://fireship.io/snippets/crontab-crash-course/","publishdate":"2019-04-08T07:41:02-07:00","readingtime":2,"relpermalink":"/snippets/crontab-crash-course/","section":"snippets","summary":"Cron is a long-running process used on Linux servers that ticks at specific times based on the crontab pattern (with a minimum of 1 minute of granularity). It is used to setup cronjobs, which are background tasks that get executed at a specific time or interval. Also, Firebase now has a time-triggered Cloud Function that can be set with crontab. The following guide will teach you how to schedule cronjobs in this format.","tags":["node","linux"],"title":"Cron Example Schedules","type":"lessons","url":"https://fireship.io/snippets/crontab-crash-course/","weight":0,"wordcount":412},{"author":"Jeff Delaney","date":1554734462,"description":"Use the special Firestore Increment field value to increase or decrease numeric values atomically in the database.","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1554734462,"objectID":"49322a0d1625060415e33149418d3524","permalink":"https://fireship.io/snippets/firestore-increment-tips/","publishdate":"2019-04-08T07:41:02-07:00","readingtime":3,"relpermalink":"/snippets/firestore-increment-tips/","section":"snippets","summary":"One of the common challenges faced when working with Firestore is maintaining an accurate count of a value on a document (or multiple documents). One cannot simply update a counter and expect it to be accurate because many clients might be competing to update the same value simultaneously. The solution to this problem has traditionally been to deploy a Cloud Function that runs the update in a transaction to guarantee an atomic update.","tags":["firebase"],"title":"How to Use Firestore Increment","type":"lessons","url":"https://fireship.io/snippets/firestore-increment-tips/","weight":0,"wordcount":463},{"author":null,"date":1554228035,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1554228035,"objectID":"","permalink":"https://fireship.io/tags/flare2d/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/flare2d/","section":"tags","summary":"","tags":null,"title":"flare2d","type":"tags","url":"https://fireship.io/tags/flare2d/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1554228035,"description":"Build an animated navigation menu in Flutter with Flare2D","dir":"lessons/animated-navigation-flutter-flare/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1554228035,"objectID":"08c77e4e95881f31004e5a60f115c2a2","permalink":"https://fireship.io/lessons/animated-navigation-flutter-flare/","publishdate":"2019-04-02T11:00:35-07:00","readingtime":6,"relpermalink":"/lessons/animated-navigation-flutter-flare/","section":"lessons","summary":"Whenever I see an awesome UI element in a native app my first question is How do I make that in Flutter?. That\u0026rsquo;s exactly what I asked when I downloaded the Giphy Android app recently, which has runs a colorful and fun animation for each icon in the bottom navbar.\nThese animations are complex. Hypothetically, they could be created in Flutter natively with a custom painter, but that would be very challenging and painful.","tags":["flutter","flare2d","animation"],"title":"Flutter Flare 2D Animation Basics","type":"lessons","url":"https://fireship.io/lessons/animated-navigation-flutter-flare/","weight":0,"wordcount":1197},{"author":"Jeff Delaney","date":1554036592,"description":"Run VS Code on Google Cloud and configure it for remote frontend development.","dir":"lessons/vscode-cloud-coder-tensorflow/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1554036592,"objectID":"770e6d73840acf617504ff452124bca7","permalink":"https://fireship.io/lessons/vscode-cloud-coder-tensorflow/","publishdate":"2019-03-31T05:49:52-07:00","readingtime":3,"relpermalink":"/lessons/vscode-cloud-coder-tensorflow/","section":"lessons","summary":"Turning VS Code into a full IDE requires you to carefully blend your favorite extensions and packages for the type of development work you perform. It can take hours or even days to get your development environment fine-tuned for optimal productivity. But what happens upgrade to a new computer? Or need to share your IDE with somebody on the other side of the world? Or maybe you just need more compute resources\u0026hellip;","tags":["vscode","gcp"],"title":"Use Coder to Run VS Code on Google Cloud","type":"lessons","url":"https://fireship.io/lessons/vscode-cloud-coder-tensorflow/","weight":0,"wordcount":607},{"author":"Jeff Delaney","date":1553102339,"description":"Build an animated and filterable slideshow with FlutterFire - inspired by the Reflectly app.","dir":"lessons/flutter-slider-like-reflectly/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1553102339,"objectID":"f941fbd3a9d952e187e65f982cf2b63e","permalink":"https://fireship.io/lessons/flutter-slider-like-reflectly/","publishdate":"2019-03-20T10:18:59-07:00","readingtime":5,"relpermalink":"/lessons/flutter-slider-like-reflectly/","section":"lessons","summary":"One of the best examples of a well-designed UI in Flutter is Reflectly - an AI-powered journal app for iOS and Android. The following lesson will show you how to build an animated slideshow carousel inspired by the work of Reflectly. In addition, we will wire it up to Firestore to make it filterable and able to scale to an infinite number of pages.\nPageView Widget Intro The most import widget in this lesson is the PageView, which makes it possible to easily build sliding pages.","tags":["flutter","firestore","firebase","animation"],"title":"Flutter Firestore Animated SlideShow","type":"lessons","url":"https://fireship.io/lessons/flutter-slider-like-reflectly/","weight":0,"wordcount":899},{"author":"Jeff Delaney","date":1553013309,"description":"Build a Skeleton Text placeholder widget in Flutter with a looping shimmer animation.","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1546446909,"objectID":"33c0c1fb396172a037cdae6f7923ed7f","permalink":"https://fireship.io/snippets/flutter-skeleton-text/","publishdate":"2019-03-19T09:35:09-07:00","readingtime":2,"relpermalink":"/snippets/flutter-skeleton-text/","section":"snippets","summary":"Skeleton text is a strategy that improves the perceived load time of content by rendering a blank placeholder that roughly matches the size of the expected content. This method was originally made popular by Facebook, but is now used on many popular apps and websites.\nUse this skeleton text widget as a placeholder when loading data from an external source.\nFlutter Skeleton Text Widget The skeleton text effect can be created in Flutter with an animated loop over a color gradient.","tags":["flutter"],"title":"Flutter Skeleton Text with Shimmer Animation","type":"lessons","url":"https://fireship.io/snippets/flutter-skeleton-text/","weight":0,"wordcount":218},{"author":null,"date":1552526598,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1552526598,"objectID":"","permalink":"https://fireship.io/tags/big-query/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/big-query/","section":"tags","summary":"","tags":null,"title":"big-query","type":"tags","url":"https://fireship.io/tags/big-query/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1552526598,"description":"Use BigQuery to process massive amounts of data for analysis and machine learning.","dir":"lessons/bigquery-ml-quickstart/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1552526598,"objectID":"f97000219dc5542f9dec0239903dbb03","permalink":"https://fireship.io/lessons/bigquery-ml-quickstart/","publishdate":"2019-03-13T18:23:18-07:00","readingtime":5,"relpermalink":"/lessons/bigquery-ml-quickstart/","section":"lessons","summary":"BigQuery is a serverless Data Warehouse that makes it easy to process and query massive amounts of data. It supports standard SQL queries in a web-based UI, via the command line, or with a variety of client libraries. In addition, it recently landed support for integrated machine learning, allowing you to build predictive models without data science skills.\nWhat can you do with Big Query?\nStream data to business intelligence tools like Data Studio, Tableau, etc.","tags":["machine-learning","big-query","sql","python"],"title":"BigQuery ML Quickstart","type":"lessons","url":"https://fireship.io/lessons/bigquery-ml-quickstart/","weight":0,"wordcount":951},{"author":null,"date":1552526598,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1552526598,"objectID":"","permalink":"https://fireship.io/tags/machine-learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/machine-learning/","section":"tags","summary":"","tags":null,"title":"machine-learning","type":"tags","url":"https://fireship.io/tags/machine-learning/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1552083593,"description":"A guided tour of reactive state management strategies in Flutter","dir":"lessons/flutter-state-management-guide/","fuzzywordcount":1800,"keywords":null,"kind":"page","lang":"en","lastmod":1552083593,"objectID":"4c0c6b506862b9d47c8cad2cb535ec15","permalink":"https://fireship.io/lessons/flutter-state-management-guide/","publishdate":"2019-03-08T15:19:53-07:00","readingtime":8,"relpermalink":"/lessons/flutter-state-management-guide/","section":"lessons","summary":"State management is a hot-button topic that brings out strong opinions in developers, and in extreme cases results in Twitter fights. In my experience, people tend to over-engineer features that would otherwise be straight-forward because they assume a full-blown state management library is necessary. In some cases, they just add complexity, but in others, they can be extremely valuable. My recommendation is to analyze these strategies closely and choose an approach that feels right for your app\u0026rsquo;s requirements and your team\u0026rsquo;s style.","tags":["flutter","dart","rxdart"],"title":"Flutter State Management Guide","type":"lessons","url":"https://fireship.io/lessons/flutter-state-management-guide/","weight":0,"wordcount":1701},{"author":null,"date":1552083593,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1552083593,"objectID":"","permalink":"https://fireship.io/tags/rxdart/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rxdart/","section":"tags","summary":"","tags":null,"title":"rxdart","type":"tags","url":"https://fireship.io/tags/rxdart/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1551714484,"description":"Create a form that collects and validates credit card details in Angular with Stripe Elements \u0026 Checkout.","dir":"lessons/stripe-elements-angular/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1551714484,"objectID":"0d6f6457a51c58c2e94704ad331a8e8e","permalink":"https://fireship.io/lessons/stripe-elements-angular/","publishdate":"2019-03-04T08:48:04-07:00","readingtime":5,"relpermalink":"/lessons/stripe-elements-angular/","section":"lessons","summary":"💰 Are you building a payment solution with Stripe? Consider enrolling the Stripe JavaScript Master Course.\nStripe provides several JavaScript libraries - Stripe Elements \u0026amp; Checkout - that makes it easy to collect and validate payment sources like credit cards, bank accounts, and more. The following lesson will show you how to integrate Stripe\u0026rsquo;s clientside JS packages into an Angular application.\nStep 0. Prerequisites This lesson only covers the frontend code.","tags":["stripe","angular","firebase","payments"],"title":"Stripe Elements and Checkout with Angular","type":"lessons","url":"https://fireship.io/lessons/stripe-elements-angular/","weight":0,"wordcount":877},{"author":"Jeff Delaney","date":1551024860,"description":"Compose staggered transform animations in Flutter by building a radial menu from scratch.","dir":"lessons/flutter-radial-menu-staggered-animations/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1551024860,"objectID":"ec90b324c806cbfad2ebadb1cfdcec66","permalink":"https://fireship.io/lessons/flutter-radial-menu-staggered-animations/","publishdate":"2019-02-24T09:14:20-07:00","readingtime":5,"relpermalink":"/lessons/flutter-radial-menu-staggered-animations/","section":"lessons","summary":"Building a flashy animated radial menu in Flutter can be done with ease thanks to the Transform widget and staggered animations. The following lesson will teach you how to compose flutter animations into a cool rotating circular widget, which can easily maintain 60FPS on modern smartphones.\nStep 1 - Initial Setup We will define two custom widgets for this demo.\nThe parent RadialMenu is a StatefulWidget responsible for defining an AnimationController that sets a duration for the animation.","tags":["flutter","dart","animation"],"title":"Flutter Animated Radial Menu","type":"lessons","url":"https://fireship.io/lessons/flutter-radial-menu-staggered-animations/","weight":0,"wordcount":998},{"author":"Jeff Delaney","date":1550683678,"description":"A step-by-step guide for publishing your PWA as a native app in the Google Play Store via a trusted web activity (TWA).","dir":"lessons/pwa-to-play-store/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1550683678,"objectID":"2ceb8f13be13431259c67da23308527f","permalink":"https://fireship.io/lessons/pwa-to-play-store/","publishdate":"2019-02-20T10:27:58-07:00","readingtime":6,"relpermalink":"/lessons/pwa-to-play-store/","section":"lessons","summary":"Web developers already have a variety of interesting options for using JavaScript to write native mobile apps with tools like React Native, Cordova/Ionic, NativeScript, just to name a few. I\u0026rsquo;ve spent many hours brainstorming with clients on this topic and recently summed up my thoughts about Hybrid App development, but there\u0026rsquo;s a brand new strategy to add to the list\u0026hellip; Trusted Web Activities (TWA). The following guide will show you how to covert any progressive web app to an Android App on the Google Play Store.","tags":["pwa","twa","android","javascript"],"title":"Trusted Web Activity - PWA to Play Store Guide","type":"lessons","url":"https://fireship.io/lessons/pwa-to-play-store/","weight":0,"wordcount":1145},{"author":null,"date":1550683678,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1550683678,"objectID":"","permalink":"https://fireship.io/tags/twa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/twa/","section":"tags","summary":"","tags":null,"title":"twa","type":"tags","url":"https://fireship.io/tags/twa/","weight":0,"wordcount":0},{"author":null,"date":1550643129,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1577741109,"objectID":"","permalink":"https://fireship.io/tags/devops/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/devops/","section":"tags","summary":"","tags":null,"title":"devops","type":"tags","url":"https://fireship.io/tags/devops/","weight":0,"wordcount":0},{"author":"Marc Stammerjohann","date":1550643129,"description":"A step-by-step guide to create a GitHub Action to deploy your Angular App to Firebase Hosting.","dir":"snippets/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1577741109,"objectID":"c763e35ea0f02ca372f873b17973dab3","permalink":"https://fireship.io/snippets/github-actions-deploy-angular-to-firebase-hosting/","publishdate":"2019-02-19T23:12:09-07:00","readingtime":3,"relpermalink":"/snippets/github-actions-deploy-angular-to-firebase-hosting/","section":"snippets","summary":"This snippet helps you to setup GitHub Actions in your Angular project to build and deploy your app to Firebase on git push.\nStep 1. Actions In your repository click on Actions.\nStep 2. New Workflow To create your first workflow click on Set up a workflow yourself\nYour first GitHub action looks like this:\nmain.yml name: CI on: [push] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - name: Run a one-line script run: echo Hello, world!","tags":["firebase","github","angular","devops"],"title":"GitHub Action deploying Angular App to Firebase Hosting","type":"lessons","url":"https://fireship.io/snippets/github-actions-deploy-angular-to-firebase-hosting/","weight":0,"wordcount":509},{"author":null,"date":1550522750,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1550522750,"objectID":"","permalink":"https://fireship.io/tags/cloud-storage/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cloud-storage/","section":"tags","summary":"","tags":null,"title":"cloud-storage","type":"tags","url":"https://fireship.io/tags/cloud-storage/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1550522750,"description":"Build a dropzone file uploader in Angular that can send multiple files to Firebase storage simultaneously.","dir":"lessons/angular-firebase-storage-uploads-multi/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1550522750,"objectID":"33bd946ba2b4be452a31bb7c83136c20","permalink":"https://fireship.io/lessons/angular-firebase-storage-uploads-multi/","publishdate":"2019-02-18T13:45:50-07:00","readingtime":5,"relpermalink":"/lessons/angular-firebase-storage-uploads-multi/","section":"lessons","summary":"Firebase makes it easy to upload a huge payload of raw files a cloud storage bucket. The following lesson will teach you how to upload files to Firebase Storage with Angular, including several advanced concepts about how to\u0026hellip;\nHandle multiple simultaneous concurrent file uploads. Save the resulting download URL to Firestore. Display a progress bar and provide UI controls to pause, cancel, and resume uploads. This post first appeared as Episode 82 on AngularFirebase.","tags":["firebase","angular","cloud-storage"],"title":"Upload Multiple Files to Firebase Storage with Angular","type":"lessons","url":"https://fireship.io/lessons/angular-firebase-storage-uploads-multi/","weight":0,"wordcount":1046},{"author":null,"date":1550179800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1550179800,"objectID":"1822b043f83dfd4e06e460c66d694878","permalink":"https://fireship.io/contributors/darshan-gowda/","publishdate":"2019-02-14T21:30:00Z","readingtime":1,"relpermalink":"/contributors/darshan-gowda/","section":"contributors","summary":"Darshan is a freelancer from Bangalore, India. He loves to code, teach and play basketball.","tags":null,"title":"Darshan Gowda","type":"contributors","url":"https://fireship.io/contributors/darshan-gowda/","weight":0,"wordcount":15},{"author":"Jeff Delaney","date":1550064121,"description":"Build a basic realtime geolocation app that can query data within a radius using Flutter, Firestore, and Google Maps.","dir":"lessons/flutter-realtime-geolocation-firebase/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1550064121,"objectID":"a8fd3a6ee34a68c3c915e17d3de5603e","permalink":"https://fireship.io/lessons/flutter-realtime-geolocation-firebase/","publishdate":"2019-02-13T06:22:01-07:00","readingtime":6,"relpermalink":"/lessons/flutter-realtime-geolocation-firebase/","section":"lessons","summary":"Looking to build a realtime geolocation app like Lyft, Postmates, or Waze? It is easier than you might think when you combine the power of Flutter, Google Maps, and Firebase. The following lesson will show you how use Google Maps in Flutter, then listen to a realtime feed of geolocation data in Firestore queried by its distance from a centerpoint - made possible by the GeoFlutterFire package.\nSpecial thanks to Darshan Gowda for creating the GeoFlutterFire library and providing the example code for this lesson.","tags":["google-maps","firestore","firebase","flutter"],"title":"Flutter Realtime Geolocation Firebase","type":"lessons","url":"https://fireship.io/lessons/flutter-realtime-geolocation-firebase/","weight":0,"wordcount":1162},{"author":"Jeff Delaney","date":1550008007,"description":"Tips and tricks for Firestore array queries and writes","dir":"lessons/firestore-array-queries-guide/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1581544007,"objectID":"16b62c67210d1c0ba0e984035381f069","permalink":"https://fireship.io/lessons/firestore-array-queries-guide/","publishdate":"2019-02-12T14:46:47-07:00","readingtime":1,"relpermalink":"/lessons/firestore-array-queries-guide/","section":"lessons","summary":"Have you ever wanted to make a query to Firestore for all documents with an array containing a certain value? Array queries are possible as of Firebase JS SDK v5.3.0. In addition, the SDK also added support for the atomic addition and removal of elements on an array field.\nFirestore Arrays Queries Firebase introduced an array-contains operator that can be used with where to query array fields. It will return all documents that contain a the provided value in the array.","tags":["firebase","firestore"],"title":"Working with Firestore Arrays","type":"lessons","url":"https://fireship.io/lessons/firestore-array-queries-guide/","weight":0,"wordcount":182},{"author":"Jeff Delaney","date":1549809761,"description":"Build beautiful router animations in Angular to transition between page changes.","dir":"lessons/angular-router-animations/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1549809761,"objectID":"b63633ee87d8e0437945865af8916168","permalink":"https://fireship.io/lessons/angular-router-animations/","publishdate":"2019-02-10T07:42:41-07:00","readingtime":5,"relpermalink":"/lessons/angular-router-animations/","section":"lessons","summary":"Smooth animated router transitions will impress your users and set your app apart from the crowd. In the following lesson, you will learn how to build complex router transition animations in Angular.\nHere\u0026rsquo;s a summary of the animations that we will build from scratch.\nfader basic fade in slider slide in from left or right transformer translate, scale, and rotate stepper complex keyframed animation sequences Router Animations Setup Let\u0026rsquo;s start by taking care of the initial Angular Router animations boilerplate.","tags":["angular","animation"],"title":"Angular Router Animations Guide","type":"lessons","url":"https://fireship.io/lessons/angular-router-animations/","weight":0,"wordcount":993},{"author":"Jeff Delaney","date":1549211963,"description":"Learn how to use TypeScript decorators to create elegant abstractions with JavaScript code.","dir":"lessons/ts-decorators-by-example/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1549211963,"objectID":"c1c2dd654e8eb70c36e65d4315ce955a","permalink":"https://fireship.io/lessons/ts-decorators-by-example/","publishdate":"2019-02-03T09:39:23-07:00","readingtime":5,"relpermalink":"/lessons/ts-decorators-by-example/","section":"lessons","summary":"One of coolest, yet least approachable features in TypeScript is the Decorator. We see Decorators implemented by the Angular Framework for classes like @Component, properties like @ViewChild, and methods like @HostListener, but have you ever considered building your own from scratch? They seem magical 🍄 in practice, but they are just JavaScript functions that allow us to annotate our code or hook into its behavior - this is known as Metaprogramming.","tags":["typescript","react","angular"],"title":"TypeScript Decorators by Example","type":"lessons","url":"https://fireship.io/lessons/ts-decorators-by-example/","weight":0,"wordcount":939},{"author":"Jeff Delaney","date":1548771030,"description":"Learn how to position, align, and build layouts with Flutter widgets, including comparisons to CSS and flexbox.","dir":"lessons/flutter-widget-positioning-guide/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1548771030,"objectID":"25f072652285c8c0e4ebab82bb7b3825","permalink":"https://fireship.io/lessons/flutter-widget-positioning-guide/","publishdate":"2019-01-29T07:10:30-07:00","readingtime":4,"relpermalink":"/lessons/flutter-widget-positioning-guide/","section":"lessons","summary":"The addition of Flexbox to CSS revolutionized the way we position elements on the web. It makes the alignment of elements on a 2D plane automatic and well, flexible. Fortunately, Flutter uses the same principles for aligning widgets with Flex, Column, and Row. In addition, it supports absolute and fixed positioning with Stack.\nThe following lesson will teach you how to position containers and build layouts in Flutter with direct comparisons to CSS Flexbox.","tags":["dart","flutter","css"],"title":"Flutter Widget Positioning - A Guide for the CSS Developer","type":"lessons","url":"https://fireship.io/lessons/flutter-widget-positioning-guide/","weight":0,"wordcount":847},{"author":"Jeff Delaney","date":1548623078,"description":"Build a realtime user presence system with AngularFire to detect when a user is online, offline, or away.","dir":"lessons/realtime-presence-angular-firebase/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1548623078,"objectID":"444d95084c536f15455619c533f88363","permalink":"https://fireship.io/lessons/realtime-presence-angular-firebase/","publishdate":"2019-01-27T14:04:38-07:00","readingtime":5,"relpermalink":"/lessons/realtime-presence-angular-firebase/","section":"lessons","summary":"Social media and chat apps (think Slack, Facebook Messenger, etc) often have presence detection systems that can indicate if your friends are online, offline, or away. Traditionally, features like this have been challenging because you need manage state between the client \u0026amp; server, but the Firebase RealtimeDB makes it easy. The following lesson will show you how to build a realtime user presence system with Angular and Firebase.\nThe browser on the left shows the actual user activity, while the browser on the right is just a neutral observer of the presence changes","tags":["angular","realtimedb","firebase"],"title":"Realtime Presence with Angular + Firebase","type":"lessons","url":"https://fireship.io/lessons/realtime-presence-angular-firebase/","weight":0,"wordcount":1043},{"author":null,"date":1548623078,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1548623078,"objectID":"","permalink":"https://fireship.io/tags/realtimedb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/realtimedb/","section":"tags","summary":"","tags":null,"title":"realtimedb","type":"tags","url":"https://fireship.io/tags/realtimedb/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1548420503,"description":"Use IntersectionObserver to lazy load images without listening to scroll events.","dir":"snippets/","fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1548420503,"objectID":"21bc105f06b2b6126998d0f5f13828a0","permalink":"https://fireship.io/snippets/intersection-observer-lazy-load-images/","publishdate":"2019-01-25T05:48:23-07:00","readingtime":2,"relpermalink":"/snippets/intersection-observer-lazy-load-images/","section":"snippets","summary":"IntersectionObserver is a browser API that allows you to detect when an element is visible in the window or within a scrollable element. Browser support is pretty decent with Safari being the main holdout at the time of this article, but there is a polyfill to support Apple users.\nPackages using IntersectionObserver:\nQuickLink - Adds a preload tag to visible links on the page. Vanilla Lazy Load - Lazy loaded images.","tags":["javascript"],"title":"Intersection Observer for Lazy-Loaded Images","type":"lessons","url":"https://fireship.io/snippets/intersection-observer-lazy-load-images/","weight":0,"wordcount":376},{"author":"Jeff Delaney","date":1548170860,"description":"A comprehensive guide to server-side rendering with Angular Universal and Firebase","dir":"lessons/angular-universal-firebase/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1548170860,"objectID":"d39e482cec92e3ea4ec4026e62da588a","permalink":"https://fireship.io/lessons/angular-universal-firebase/","publishdate":"2019-01-22T08:27:40-07:00","readingtime":6,"relpermalink":"/lessons/angular-universal-firebase/","section":"lessons","summary":"Nothing beats the user experience of a single page JS app on the web, but you sacrifice the ability to share metatags with social media bots and search engines on deep links. Fortunately, you can overcome this limitation with server-side rendering (SSR) via Angular Universal.\nThe following lesson will show you how to setup Angular Universal with ExpressJS. In addition, you will learn how to deploy the app with (1) Node via AppEngine or (2) Firebase Cloud Functions - both of which are are on the free tier.","tags":["angular","firebase","cloud-functions","node"],"title":"Angular Universal SSR with Firebase","type":"lessons","url":"https://fireship.io/lessons/angular-universal-firebase/","weight":0,"wordcount":1190},{"author":"Jeff Delaney","date":1548012497,"description":"A guide to Dart and Flutter for JavaScript Developers who have experience with React Native and Ionic","dir":"lessons/flutter-for-js-developers/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1548012497,"objectID":"0e04fe83a41bc44e8e54b55bb1249268","permalink":"https://fireship.io/lessons/flutter-for-js-developers/","publishdate":"2019-01-20T12:28:17-07:00","readingtime":8,"relpermalink":"/lessons/flutter-for-js-developers/","section":"lessons","summary":"So you\u0026rsquo;re a web developer working with JavaScript and curious about Flutter? That was me about one-year ago, and at the time, learning an uncommon language like Dart seemed ridiculous because there are existing hybrid app frameworks in JS. Then I tried it\u0026hellip; To my surprise, I was able to write productive code right out of the gate. The following lesson will compare Dart/Flutter to JS/ReactNative.\nSource: FlutterDev subreddit\nThroughout this lesson, you will see the 👉 emoji.","tags":["dart","flutter","javascript","typescript"],"title":"Flutter for JavaScript Developers","type":"lessons","url":"https://fireship.io/lessons/flutter-for-js-developers/","weight":0,"wordcount":1492},{"author":"Jeff Delaney","date":1547728974,"description":"A step-by-step guide to submitting your first Pull Request on Github. Practical tips and advice for git version control.","dir":"snippets/","fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1547728974,"objectID":"f96b89e0d865c1e4133ad8b4b1cdaf68","permalink":"https://fireship.io/snippets/git-how-to-participate-on-github/","publishdate":"2019-01-17T05:42:54-07:00","readingtime":3,"relpermalink":"/snippets/git-how-to-participate-on-github/","section":"snippets","summary":"Contributing to open-source is satisfying on many levels. Not only does it validate your skills for recruiters, but it leads to higher quality software that empowers developers to build better products. But submitting your first pull request on GitHub can be intimidating. The goal of this guide is to give you a clear set of steps for contributing any OS project (like fireship.io 🔥).\nThis guide assumes that you have a Github account and git installed on your machine.","tags":["git"],"title":"How to Participate on Github","type":"lessons","url":"https://fireship.io/snippets/git-how-to-participate-on-github/","weight":0,"wordcount":443},{"author":null,"date":1547723831,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1547723831,"objectID":"","permalink":"https://fireship.io/tags/cloud-build/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cloud-build/","section":"tags","summary":"","tags":null,"title":"cloud-build","type":"tags","url":"https://fireship.io/tags/cloud-build/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1547723831,"description":"Learn how to automate the testing and deployment of an app with Google Cloud Build","dir":"lessons/ci-cd-with-google-cloud-build/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1547723831,"objectID":"396585352054d009c4cb207434252572","permalink":"https://fireship.io/lessons/ci-cd-with-google-cloud-build/","publishdate":"2019-01-17T04:17:11-07:00","readingtime":7,"relpermalink":"/lessons/ci-cd-with-google-cloud-build/","section":"lessons","summary":"Continuous Integration and Delivery, aka CI/CD, aka DevOps is the process of automating build, test, and deploy tasks between code changes to your software. The practice can yield a wide range of benefits, but most importantly it keeps your development code looking nearly identical to your production code. The adoption of devops has been a macrotrend in tech for the last few years and presents opportunites for both large teams and independent entrepreneurs.","tags":["cloud-build","devops","docker"],"title":"Continuous Integration and Deployment with Google Cloud Build","type":"lessons","url":"https://fireship.io/lessons/ci-cd-with-google-cloud-build/","weight":0,"wordcount":1491},{"author":"Jeff Delaney","date":1547477034,"description":"Learn how to Setup GoogleSign and Firestore with Flutter from Scratch","dir":"lessons/flutter-firebase-google-oauth-firestore/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1547477034,"objectID":"896db5007ed263dfd897d6aa299d3fe5","permalink":"https://fireship.io/lessons/flutter-firebase-google-oauth-firestore/","publishdate":"2019-01-14T07:43:54-07:00","readingtime":6,"relpermalink":"/lessons/flutter-firebase-google-oauth-firestore/","section":"lessons","summary":"The following lesson will show you how to implement Google SignIn with Flutter and Firebase, then update a custom user profile in Firestore. We will demonstrate several key concepts related to building reactive UIs with realtime streaming data, including\nGlobal Streams and Observables with RxDart StatefulWidget StreamBuilder Step 0: Prerequisites Install FlutterFire Step 1: Build Out the UI First, let\u0026rsquo;s start with a basic UI. Notice we have placeholders for LoginButton() and UserProfile() - these will be created later in the lesson.","tags":["flutter","firebase","auth","firestore"],"title":"Flutter Firebase Google SignIn + Firestore","type":"lessons","url":"https://fireship.io/lessons/flutter-firebase-google-oauth-firestore/","weight":0,"wordcount":1156},{"author":"Jeff Delaney","date":1547313239,"description":"Setup a Flutter app with Google Maps and GPS Location Tracking","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1547313239,"objectID":"f95fe1e6b6a89fe7efa4ad18b46139ce","permalink":"https://fireship.io/snippets/setup-google-maps-flutter/","publishdate":"2019-01-12T10:13:59-07:00","readingtime":2,"relpermalink":"/snippets/setup-google-maps-flutter/","section":"snippets","summary":"The following guide is designed to get you up and running with Google Maps in Flutter for iOS and Android, as well as device GPS tracking.\nAlso refer to the official Flutter Google Maps Plugin setup docs as needed.\nGoogle Maps for Flutter Get your Google Maps API Key First, obtain an API key for Google Maps within the context of a Google Cloud Platform project.\niOS Setup file_type_config ios/Runner/AppDelegate.m #include \u0026#34;AppDelegate.","tags":["flutter","google-maps"],"title":"Flutter Google Maps Setup","type":"lessons","url":"https://fireship.io/snippets/setup-google-maps-flutter/","weight":0,"wordcount":289},{"author":"Jeff Delaney","date":1546446909,"description":"Common Recipes for Firestore Security Rules","dir":"snippets/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1606840509,"objectID":"dfe49579bd1bb25e0215c772bfbf9d23","permalink":"https://fireship.io/snippets/firestore-rules-recipes/","publishdate":"2019-01-02T09:35:09-07:00","readingtime":5,"relpermalink":"/snippets/firestore-rules-recipes/","section":"snippets","summary":"The purpose of this reference is to demonstrate common Firestore security rules patterns. Many of the rules below are extracted into functions to maximize code reuse.\nBasic Recipes Let\u0026rsquo;s start with some common Firestore security use cases needed by almost every app.\nAt runtime, Firebase rules look for the first valid allow == true rule and NOT vice-versa. This is very important to keep in mind, as you might think you secured a path, only for it to be allowed somewhere else.","tags":["firebase","firestore"],"title":"Firestore Security Rules Cookbook","type":"lessons","url":"https://fireship.io/snippets/firestore-rules-recipes/","weight":0,"wordcount":932},{"author":"Jeff Delaney","date":1546091493,"description":"Build a Firebase Google signin user authentication flow with @angular/fire that saves custom user data to the Firestore.","dir":"lessons/angularfire-google-oauth/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1546091493,"objectID":"1730469eb6c4e3949b32f0e62f5d3a8a","permalink":"https://fireship.io/lessons/angularfire-google-oauth/","publishdate":"2018-12-29T06:51:33-07:00","readingtime":7,"relpermalink":"/lessons/angularfire-google-oauth/","section":"lessons","summary":"A solid user authentication system is the bedrock of most web applications. In fact, when starting a new project I genernally focus on user auth first because so many other features depend the user\u0026rsquo;s auth state. The following lesson will show you how to build an OAuth authentication feature using the Google sign-in method. In addition, we will save custom user data to the Firestore database, making it possible to customize a user\u0026rsquo;s profile and/or query all users.","tags":["firebase","angular","firestore","auth"],"title":"Google OAuth with @angular/fire","type":"lessons","url":"https://fireship.io/lessons/angularfire-google-oauth/","weight":0,"wordcount":1388},{"author":"Patrick Mullot","date":1544481268,"description":"Learn Object Oriented Programming (OOP) basics with TypeScript","dir":"lessons/object-oriented-programming-with-typescript/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1544481268,"objectID":"fc5f01f4db8d0a02617b569b397dd81f","permalink":"https://fireship.io/lessons/object-oriented-programming-with-typescript/","publishdate":"2018-12-10T15:34:28-07:00","readingtime":5,"relpermalink":"/lessons/object-oriented-programming-with-typescript/","section":"lessons","summary":"OOP is usually defined by its two core concepts: Polymorphism and Inheritance. Although both concepts are related, they are not the same.\nIn this article, we’ll take a simple approach to Inheritance, as it’s the most representative of the two.\nBut instead of getting bored with theory and definition, let’s take a look at a real life example, that illustrates perfectly the advantages of Inheritance.\nLike all apps, our example web app needs, at some point, to persist some data to a database.","tags":["typescript"],"title":"Object Oriented Programming with Typescript","type":"lessons","url":"https://fireship.io/lessons/object-oriented-programming-with-typescript/","weight":0,"wordcount":858},{"author":null,"date":1541035234,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1541035234,"objectID":"","permalink":"https://fireship.io/tags/jest/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jest/","section":"tags","summary":"","tags":null,"title":"jest","type":"tags","url":"https://fireship.io/tags/jest/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1541035234,"description":"Use the Firestore emulator to unit test security rules.","dir":"lessons/testing-firestore-security-rules-with-the-emulator/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1541035234,"objectID":"b741ecc6ea24aed7702db757deb75b00","permalink":"https://fireship.io/lessons/testing-firestore-security-rules-with-the-emulator/","publishdate":"2018-10-31T18:20:34-07:00","readingtime":5,"relpermalink":"/lessons/testing-firestore-security-rules-with-the-emulator/","section":"lessons","summary":"🔥 Deep dive with the Firestore Security Rules Master Course.\nThe most exciting announcement (in my opinion) at Firebase Summit 2018 was the local emulator for Firestore and RTDB, making it possible to test security rules locally or on a CI server. If you\u0026rsquo;re brand new to Firebase security, make sure to watch the Firestore Security Rules Guide.\nProject Setup The following lesson creates an isolated testing environment solely for testing rules logic.","tags":["firestore","testing","jest","security"],"title":"Testing Firestore Security Rules With the Emulator","type":"lessons","url":"https://fireship.io/lessons/testing-firestore-security-rules-with-the-emulator/","weight":0,"wordcount":1042},{"author":"Jeff Delaney","date":1540170967,"description":"Build an Infinite Virtual Scroll with the Angular CDK","dir":"lessons/infinite-virtual-scroll-angular-cdk/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1540170967,"objectID":"efa91d994636dfd1622d75132e0c685d","permalink":"https://fireship.io/lessons/infinite-virtual-scroll-angular-cdk/","publishdate":"2018-10-21T18:16:07-07:00","readingtime":4,"relpermalink":"/lessons/infinite-virtual-scroll-angular-cdk/","section":"lessons","summary":"The release of Angular v7 gives us access to a new virtual scroll behavior in the Material Component Development Kit (CDK). It provides tools for looping over a lists that only render elements when they are visible in the viewport, preventing lag an janky-ness in the browser. As an added bonus, it exposes a reliable API for building an infinite scroll where new batches of data are retrieved automatically when the user scrolls to the bottom of the list.","tags":["angular","animation"],"title":"Infinite Virtual Scroll with the Angular CDK","type":"lessons","url":"https://fireship.io/lessons/infinite-virtual-scroll-angular-cdk/","weight":0,"wordcount":817},{"author":"Jeff Delaney","date":1539565862,"description":"Design a Firestore group chat feature and build it from scratch with Angular.","dir":"lessons/build-group-chat-with-firestore/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1539565862,"objectID":"e7f2ca0585b0c1d4efde560354d53948","permalink":"https://fireship.io/lessons/build-group-chat-with-firestore/","publishdate":"2018-10-14T18:11:02-07:00","readingtime":7,"relpermalink":"/lessons/build-group-chat-with-firestore/","section":"lessons","summary":"One of the most compelling reasons to choose Firebase as your backend is to meet the demands of complex realtime features, like group chat. Managing state between multiple clients in realtime is a major undertaking, but with Firebase it becomes almost trivial. The following lesson will teach you how to build a simple group chat app with Cloud Firestore.\nThis lesson is accompanied by a real demo! Give Firestore Mega Chat a whirl.","tags":["angular","firebase"],"title":"Group Chat with Firestore","type":"lessons","url":"https://fireship.io/lessons/build-group-chat-with-firestore/","weight":0,"wordcount":1488},{"author":null,"date":1538442222,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1538442222,"objectID":"","permalink":"https://fireship.io/tags/ml/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ml/","section":"tags","summary":"","tags":null,"title":"ml","type":"tags","url":"https://fireship.io/tags/ml/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1538442222,"description":"Build an machine learning API from scratch with Datalab, ML Engine, and Firebase.","dir":"lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1538442222,"objectID":"52515872ea910d6cf9887596753c68d1","permalink":"https://fireship.io/lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/","publishdate":"2018-10-01T18:03:42-07:00","readingtime":5,"relpermalink":"/lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/","section":"lessons","summary":"Building a predictive model is only half the battle when it comes to machine learning - you also need a way for clientside apps to consume it and add value to the user experience. Today we\u0026rsquo;re going to wire up a collection of Google Cloud services to train and deploy a Python-based ML model to the cloud. The following lesson is designed for product-minded developers who want to get an idea of the end-to-end ML process in the cloud.","tags":["ml","python","cloud-functions"],"title":"ML Engine Tutorial with Python","type":"lessons","url":"https://fireship.io/lessons/serverless-machine-learning-with-python-and-firebase-cloud-functions/","weight":0,"wordcount":987},{"author":null,"date":1537836933,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1537836933,"objectID":"","permalink":"https://fireship.io/tags/google-calendar/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/google-calendar/","section":"tags","summary":"","tags":null,"title":"google-calendar","type":"tags","url":"https://fireship.io/tags/google-calendar/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1537836933,"description":"Authorize users to retrieve and create Google Calendar events.","dir":"lessons/google-calendar-api-with-firebase/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1537836933,"objectID":"2c6261c3e978efa6f8c8b4766512ed82","permalink":"https://fireship.io/lessons/google-calendar-api-with-firebase/","publishdate":"2018-09-24T17:55:33-07:00","readingtime":5,"relpermalink":"/lessons/google-calendar-api-with-firebase/","section":"lessons","summary":"I use Google Calendar almost every day and really appreciate apps that can coordinate important events for me automatically. Today, we\u0026rsquo;ll learn how to integrate Google\u0026rsquo;s JavaScript API client with Firebase to make authenticated requests to the Calendar API on the behalf of a user. This article was inspired by the real-world requirements of a Broadway Life, a tour company in NYC and needs to perform full CRUD operations on their clients\u0026rsquo; calendar.","tags":["pro","google-calendar","firebase"],"title":"Using the Google Calendar API","type":"lessons","url":"https://fireship.io/lessons/google-calendar-api-with-firebase/","weight":0,"wordcount":1043},{"author":"Jeff Delaney","date":1537683129,"description":"Pass data to a modal in Ionic 4 with componentProps","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1537651509,"objectID":"cc8b473026bb4bbbca397b86cea0b95e","permalink":"https://fireship.io/snippets/use-componentprops-to-pass-data-to-modals-in-ionic-4/","publishdate":"2018-09-22T23:12:09-07:00","readingtime":2,"relpermalink":"/snippets/use-componentprops-to-pass-data-to-modals-in-ionic-4/","section":"snippets","summary":"The snippet below shows you how to use componentProps to pass data into an Ionic 4 modal. This technique is useful when updating dynamic data.\nPass Data into Ionic4 Modals In previous versions of Ionic, the NavParams class was used to read the passed data. This is no longer necessary and should not be used, although it does still work technically. In version 4, sharing data with a modal is easier than ever\u0026hellip;","tags":["ionic"],"title":"How to Pass Data to Modals in Ionic","type":"lessons","url":"https://fireship.io/snippets/use-componentprops-to-pass-data-to-modals-in-ionic-4/","weight":0,"wordcount":228},{"author":"Jeff Delaney","date":1536108504,"description":"Share code between frontend/backend apps in JavaScript with NPM packages.","dir":"lessons/how-to-structure-a-large-web-app-project/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1536108504,"objectID":"2d13910320c782ad4c3b1604eca02cda","permalink":"https://fireship.io/lessons/how-to-structure-a-large-web-app-project/","publishdate":"2018-09-04T17:48:24-07:00","readingtime":4,"relpermalink":"/lessons/how-to-structure-a-large-web-app-project/","section":"lessons","summary":"The right project structure for your app depends primarily on (1) its complexity, and (2) the size of your team. In this lesson, I will show you how to use NPM packages to share code in a big JavaScript project that contains multiple apps.\nMonorepos versus Multiple Repos There are two high-level strategies for handling source control in a large complex web application - monorepo and multiple repos. Some developers have very strong preferences for one or the other, but it mostly just boils down to a series of tradeoffs.","tags":["javascript","typescript","node"],"title":"How to Share Code between JavaScript Apps","type":"lessons","url":"https://fireship.io/lessons/how-to-structure-a-large-web-app-project/","weight":0,"wordcount":798},{"author":"Jeff Delaney","date":1536108184,"description":"Learn routing and navigation basics in Ionic v4 using the Angular Router.","dir":"lessons/ionic-4-routing-and-navigation-guide/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1536108184,"objectID":"1eb5503ce0ac525fc7497d9ffd638e4c","permalink":"https://fireship.io/lessons/ionic-4-routing-and-navigation-guide/","publishdate":"2018-09-04T17:43:04-07:00","readingtime":6,"relpermalink":"/lessons/ionic-4-routing-and-navigation-guide/","section":"lessons","summary":"The single most important change from Ionic v3 to v4 is how routing and navigation is handled. In the past, Ionic used its own push-pop NavController, but has since decieded to use the Angular Router directly. This is a very smart move in my opinion because Angular\u0026rsquo;s router is just so powerful - but it does have a bit of a learning curve. In the following lesson, you will learn the fundamental concepts required to be successful with routing and navigation in Ionic 4.","tags":["ionic","angular"],"title":"Ionic Routing and Navigation Guide","type":"lessons","url":"https://fireship.io/lessons/ionic-4-routing-and-navigation-guide/","weight":0,"wordcount":1190},{"author":"Jeff Delaney","date":1535589341,"description":"Learn how manage multiple sites from a single Firebase project","dir":"lessons/deploy-multiple-sites-to-firebase-hosting/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1535589341,"objectID":"61ab17d898d0f4fd3aae40bf03b2f031","permalink":"https://fireship.io/lessons/deploy-multiple-sites-to-firebase-hosting/","publishdate":"2018-08-29T17:35:41-07:00","readingtime":3,"relpermalink":"/lessons/deploy-multiple-sites-to-firebase-hosting/","section":"lessons","summary":"Firebase hosting recently announced support for multiple hosting targets within a single project. I am thrilled to see this feature because it is such a common requirement for real world apps. For example, you might have two separate apps - one for customers, one for admin employees - both of which share the same database and functions. In the past, we would have to get clever with deployment by either sharing the same URL or juggling multiple projects.","tags":["firebase","i18n"],"title":"Deploy Multiple Sites to Firebase Hosting","type":"lessons","url":"https://fireship.io/lessons/deploy-multiple-sites-to-firebase-hosting/","weight":0,"wordcount":511},{"author":null,"date":1535589341,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1535589341,"objectID":"","permalink":"https://fireship.io/tags/i18n/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/i18n/","section":"tags","summary":"","tags":null,"title":"i18n","type":"tags","url":"https://fireship.io/tags/i18n/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1535329708,"description":"Examples of custom RxJS Pipeable Operators","dir":"lessons/custom-rxjs-operators-by-example/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1535329708,"objectID":"e43c53cd7f951acc74f76ac058c49a3a","permalink":"https://fireship.io/lessons/custom-rxjs-operators-by-example/","publishdate":"2018-08-26T17:28:28-07:00","readingtime":4,"relpermalink":"/lessons/custom-rxjs-operators-by-example/","section":"lessons","summary":"Understanding how to build custom RxJS operators will provide a huge boost to your knowledge of reactive programming and Observables. Not to mention, they have a wide variety of practical use cases and provide excellent code reuse. The following lesson will show you how to build a handful of custom pipeable operators from scratch.\nWhat is an RxJS Operator? An operator is just a pure function that takes the source Observable as it\u0026rsquo;s input and returns an Observable as its output, usually modified in some way.","tags":["rxjs"],"title":"Custom Rxjs Operators by Example","type":"lessons","url":"https://fireship.io/lessons/custom-rxjs-operators-by-example/","weight":0,"wordcount":824},{"author":"Jeff Delaney","date":1535070650,"description":"Leverage RxJS to perform SQL-like JOIN queries in Firestore","dir":"lessons/firestore-joins-similar-to-sql/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1535070650,"objectID":"5775d7c071a023dcf3b0748dda649155","permalink":"https://fireship.io/lessons/firestore-joins-similar-to-sql/","publishdate":"2018-08-23T17:30:50-07:00","readingtime":6,"relpermalink":"/lessons/firestore-joins-similar-to-sql/","section":"lessons","summary":"How do I perform a SQL JOIN in Firestore? - it\u0026rsquo;s a difficult question almost all developers will come across. The simple answer for ALL NoSQL databases is that it\u0026rsquo;s just not possible in an apples-to-apples way. We can\u0026rsquo;t perform this operation server-side, however, we can get clever with custom RxJS operators to solve similar problems - plus gain the added benefit of maintaining realtime listeners on all data.\nOur operators require AngularFire and will add some RxJS magic to its existing Observables to tackle the challenge of joining Firestore documents and collections together easily in Firestore.","tags":["rxjs","firebase","firestore"],"title":"Join Collections in Firestore","type":"lessons","url":"https://fireship.io/lessons/firestore-joins-similar-to-sql/","weight":0,"wordcount":1128},{"author":"Jeff Delaney","date":1534976569,"description":"Quick start for the official RxJS bindings for Firebase.","dir":"lessons/introduction-to-rxfire-rxjs-for-firebase/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1534976569,"objectID":"036182c34214dcd7ebaad78f64242e69","permalink":"https://fireship.io/lessons/introduction-to-rxfire-rxjs-for-firebase/","publishdate":"2018-08-22T15:22:49-07:00","readingtime":5,"relpermalink":"/lessons/introduction-to-rxfire-rxjs-for-firebase/","section":"lessons","summary":"Maintaining async callback-based code is one of the most challenging tasks a developer will face. Over the past few years, RxJS has become the leading tool for reactive programming in JavaScript, so it only makes sense that Firebase would leverage it to make realtime streams more developer-friendly. In the following lesson, you will take an early look at a new officially-supported library called RxFire.\nPrinciples Not a replacement for AngularFire2 in Angular projects.","tags":["rxjs","firebase"],"title":"Introduction to Rxfire Rxjs for Firebase","type":"lessons","url":"https://fireship.io/lessons/introduction-to-rxfire-rxjs-for-firebase/","weight":0,"wordcount":883},{"author":"Jeff Delaney","date":1534717015,"description":"Build a slider tutorial in Ionic 4 to educate new users how to use your app.","dir":"lessons/ionic4-intro-slides-tutorial-to-educate-app-users/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1534717015,"objectID":"faf79e491d20767f1d76e26a5ac15d04","permalink":"https://fireship.io/lessons/ionic4-intro-slides-tutorial-to-educate-app-users/","publishdate":"2018-08-19T15:16:55-07:00","readingtime":5,"relpermalink":"/lessons/ionic4-intro-slides-tutorial-to-educate-app-users/","section":"lessons","summary":"A useful intro slider is a sign of a highly polished mobile app. A quick tutorial for using your app provides an excellent user experience and can reduce bounce rates for new users.\nIn the following lesson, you will learn how to use the slider component in Ionic 4 to build a multi-step introduction that educates users how to use your app.\nIonic slides as an app tutorial for new users","tags":["ionic","angular"],"title":"Ionic Intro Slider for New Users","type":"lessons","url":"https://fireship.io/lessons/ionic4-intro-slides-tutorial-to-educate-app-users/","weight":0,"wordcount":862},{"author":"Jeff Delaney","date":1534642759,"description":"Learn how to write unit testing RxJS Observables using Jest","dir":"snippets/","fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1534642759,"objectID":"847e5ae32a52a5c7cb98dd11d2f0ea6e","permalink":"https://fireship.io/snippets/testing-rxjs-observables-with-jest/","publishdate":"2018-08-18T18:39:19-07:00","readingtime":2,"relpermalink":"/snippets/testing-rxjs-observables-with-jest/","section":"snippets","summary":"The snippet below shows you how to test asynchronous RxJS Observables with Jest. It\u0026rsquo;s probably easier than you think.\nTesting a Single Emitted Value Let\u0026rsquo;s imagine we have an Observable that should emit a string, which we can create with the of helper. The key to making this test work is passing it the the done keyword, otherwise it will finish before the data is emitted.\nYou can then write your expectations inside of the the subscribe callback, then call done() when you\u0026rsquo;re ready for the test to finish.","tags":["jest","rxjs"],"title":"Testing RxJS Observables With Jest","type":"lessons","url":"https://fireship.io/snippets/testing-rxjs-observables-with-jest/","weight":0,"wordcount":222},{"author":"Jeff Delaney","date":1534284628,"description":"Build a dynamic theme generator and animation controller in Ionic 4 using CSS4 variables","dir":"lessons/css-variables-in-ionic-4/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1534284628,"objectID":"a6b448f2ded392e963e59bd8d139803a","permalink":"https://fireship.io/lessons/css-variables-in-ionic-4/","publishdate":"2018-08-14T15:10:28-07:00","readingtime":6,"relpermalink":"/lessons/css-variables-in-ionic-4/","section":"lessons","summary":"One of the major changes to theming in Ionic 4 is the use of CSS variables, which are simply CSS values that can be reused across multiple elements or components. Unlike variables in Sass or LESS that need to be compiled, they can be changed and interpreted by the browser on the fly. This is an extremely powerful feature for web components that use the Shadow DOM, like Ionic 4.","tags":["ionic","css"],"title":"Ionic CSS Variables Dynamic Theme Generator","type":"lessons","url":"https://fireship.io/lessons/css-variables-in-ionic-4/","weight":0,"wordcount":1138},{"author":"Jeff Delaney","date":1533852382,"description":"Build a high-performance image thumbnail generator using a Firebase Storage Cloud Function and Sharp.","dir":"lessons/image-thumbnail-resizer-cloud-function/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1533852382,"objectID":"46be37ec48ec31f10ce3150e82c86141","permalink":"https://fireship.io/lessons/image-thumbnail-resizer-cloud-function/","publishdate":"2018-08-09T15:06:22-07:00","readingtime":4,"relpermalink":"/lessons/image-thumbnail-resizer-cloud-function/","section":"lessons","summary":"The single most common Cloud Function use-case for a storage bucket is to resize images to thumbnails in the background. I\u0026rsquo;ve built quite a few of these functions and have developed some techniques to make the process more developer-friendly and performant. The following lesson demonstrates how to resize a Cloud Storage upload to a set of thumbnails using Cloud Functions v2.x.\nThumbnails resized by a Firebase Cloud Function\nInitial Setup Want to master the fundamentals of serverless?","tags":["cloud-functions","node"],"title":"Image Thumbnail Resizer Cloud Function","type":"lessons","url":"https://fireship.io/lessons/image-thumbnail-resizer-cloud-function/","weight":0,"wordcount":707},{"author":"Jeff Delaney","date":1531604161,"description":"Advanced metered subscription Stripe Billing with Firebase","dir":"lessons/saas-metered-subscriptions-with-stripe-billing-and-firebase/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1531604161,"objectID":"053e86cfada31b35c255634fde7a8487","permalink":"https://fireship.io/lessons/saas-metered-subscriptions-with-stripe-billing-and-firebase/","publishdate":"2018-07-14T14:36:01-07:00","readingtime":7,"relpermalink":"/lessons/saas-metered-subscriptions-with-stripe-billing-and-firebase/","section":"lessons","summary":"💰 Are you building a payment solution with Stripe? Consider enrolling the Stripe JavaScript Master Course.\nToday we will something very ambitious - our own Software-as-a-Service (SaaS) product that bills users based on metered usage. The app is a hypothetical project management tool with a pay-as-you-go billing system based on the volume of usage (just like the Blaze plan in Firebase). A user can create multiple projects, each at a cost of $1.","tags":["cloud-functions","stripe"],"title":"Metered Stripe Subscription Billing","type":"lessons","url":"https://fireship.io/lessons/saas-metered-subscriptions-with-stripe-billing-and-firebase/","weight":0,"wordcount":1418},{"author":"Jeff Delaney","date":1531227569,"description":"Perform geospatial queries in Firestore based on a radius and visualize realtime updates with Angular Google Maps","dir":"lessons/geolocation-query-in-firestore-realtime/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1576067410,"objectID":"6a7adc9e4e24db5c4533477cfc797bd9","permalink":"https://fireship.io/lessons/geolocation-query-in-firestore-realtime/","publishdate":"2018-07-10T05:59:29-07:00","readingtime":7,"relpermalink":"/lessons/geolocation-query-in-firestore-realtime/","section":"lessons","summary":"The ability to query by geographic coordinates in Firestore is a highly requested feature because many successful apps - like Uber, Pokemon Go, Instagram, etc - use realtime maps as part of the core user experience. Today you will learn how to build a realtime Google map using Firestore as the data source.\nFingers-crossed: It's possible that Firestore will have native support for Geolcation queries in the future, but there is no public timeline for this feature that I'm aware of","tags":["firebase","google-maps","firestore"],"title":"Realtime GeoQueries with Firestore","type":"lessons","url":"https://fireship.io/lessons/geolocation-query-in-firestore-realtime/","weight":0,"wordcount":1469},{"author":null,"date":1528885377,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1528885377,"objectID":"872616651a54d0294ebf1271a94a939b","permalink":"https://fireship.io/contributors/arjun-yelamanchili/","publishdate":"2018-06-13T10:22:57Z","readingtime":1,"relpermalink":"/contributors/arjun-yelamanchili/","section":"contributors","summary":"Arjun is a full-stack developer and future blockchain billionaire based in Denver, CO","tags":null,"title":"Arjun Yelamanchili","type":"contributors","url":"https://fireship.io/contributors/arjun-yelamanchili/","weight":0,"wordcount":13},{"author":null,"date":1528885377,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1528885377,"objectID":"3890fb5ee058eadd4572be1d4dc418c0","permalink":"https://fireship.io/contributors/dominik-simonik/","publishdate":"2018-06-13T10:22:57Z","readingtime":1,"relpermalink":"/contributors/dominik-simonik/","section":"contributors","summary":"Dominik Šimoník is software engineer developing apps in Angular, Java, Dart, Nodejs and Ruby. He is GDG Organizer and lector for women at community Czechitas in the Czech republic. When he is not at the computer he does some sort of geek things like drone races etc.","tags":null,"title":"Dominik Šimoník","type":"contributors","url":"https://fireship.io/contributors/dominik-simonik/","weight":0,"wordcount":47},{"author":null,"date":1528885377,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1528885377,"objectID":"8658d47a9e33564ebad6ac7767d8142d","permalink":"https://fireship.io/contributors/patrick-mullot/","publishdate":"2018-06-13T10:22:57Z","readingtime":1,"relpermalink":"/contributors/patrick-mullot/","section":"contributors","summary":"Patrick is a part-time full-stack developer, with (too) many years of experience as a Project Developer and programmer. He now specializes in the Firebase ecosystem. When not in his tech-cave, he enjoys traveling and have long walks with his family and their 4 legged friends","tags":null,"title":"Patrick Mullot","type":"contributors","url":"https://fireship.io/contributors/patrick-mullot/","weight":0,"wordcount":45},{"author":null,"date":1528885377,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1528885377,"objectID":"a1e9e817a2fc54776186062b5bfb87b5","permalink":"https://fireship.io/contributors/radi-cho/","publishdate":"2018-06-13T10:22:57Z","readingtime":1,"relpermalink":"/contributors/radi-cho/","section":"contributors","summary":"Radi is a student, developing futuristic projects, websites and Android apps as a hobby. He also plays with ML, IoT, Cloud services and anything else that looks like the next big thing.","tags":null,"title":"Radi Cho","type":"contributors","url":"https://fireship.io/contributors/radi-cho/","weight":0,"wordcount":32},{"author":null,"date":1528885377,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1528885377,"objectID":"6b4747395cc7563edfd50e79d4b968ae","permalink":"https://fireship.io/contributors/zack-derose/","publishdate":"2018-06-13T10:22:57Z","readingtime":1,"relpermalink":"/contributors/zack-derose/","section":"contributors","summary":"Zack is a GDE for Google, as well as an Engineer and Engineering Manager for Nx, and an avid fan of Supabase.\nZack always bets on Javascript (and Typescript), but he also enjoys Postgres, making videos, and has been dabbling recently in shit-posting on Twitter.","tags":null,"title":"Zack DeRose","type":"contributors","url":"https://fireship.io/contributors/zack-derose/","weight":0,"wordcount":45},{"author":"Jeff Delaney","date":1527542237,"description":"Build reactive forms that preload and autosave data with Firestore","dir":"lessons/auto-save-reactive-forms-with-firestore/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1527542237,"objectID":"22f33d81051eaf388e4c7246b1256d8e","permalink":"https://fireship.io/lessons/auto-save-reactive-forms-with-firestore/","publishdate":"2018-05-28T14:17:17-07:00","readingtime":4,"relpermalink":"/lessons/auto-save-reactive-forms-with-firestore/","section":"lessons","summary":"Forms are one of the most critical, yet most cumbersome aspects of app development. They require a ton of HTML markup and require complex validation rules for a good user experience. Almost all forms must be synced to a backend database, leaving us faced a state management conundrum that is not always easy to solve. In this lesson, my goal is to provide you with a reliable solution for syncing your frontend forms to any backend database.","tags":["pro","angular","firestore","forms"],"title":"Auto-save Reactive Form with Firestore","type":"lessons","url":"https://fireship.io/lessons/auto-save-reactive-forms-with-firestore/","weight":0,"wordcount":765},{"author":"Jeff Delaney","date":1527110719,"description":"Apply test-driven development to your Firebase Cloud Functions with Jest","dir":"lessons/testing-cloud-functions-in-firebase/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1527110719,"objectID":"81368496d9491d3610133c9be0aaa4cc","permalink":"https://fireship.io/lessons/testing-cloud-functions-in-firebase/","publishdate":"2018-05-23T14:25:19-07:00","readingtime":5,"relpermalink":"/lessons/testing-cloud-functions-in-firebase/","section":"lessons","summary":"Firebase Cloud Functions makes building a serverless backend easy and fun, but the proper way to write unit tests in this environment is not exactly clear. In this episode, I will show you how to setup a testing environment for your functions and use Jest to implement unit tests.\nJest is my preferred testing framework for Cloud Functions, but the official docs use Mocha, Sinon, and Chai. Either approach works.","tags":["pro","typescript","jest","cloud-functions"],"title":"Test Firebase Cloud Functions with Jest","type":"lessons","url":"https://fireship.io/lessons/testing-cloud-functions-in-firebase/","weight":0,"wordcount":995},{"author":"Jeff Delaney","date":1526936598,"description":"Master the basics of Reactive Forms in Angular by building five different forms from scratch.","dir":"lessons/basics-reactive-forms-in-angular/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1580158998,"objectID":"06f8d7c201151051893ba7c67c8d0457","permalink":"https://fireship.io/lessons/basics-reactive-forms-in-angular/","publishdate":"2018-05-21T14:03:18-07:00","readingtime":6,"relpermalink":"/lessons/basics-reactive-forms-in-angular/","section":"lessons","summary":"As part of the Angular Basics Series, we will be taking a comprehensive look at Reactive Forms from the ground up. The official documentation is a very long read, so this guide is designed to help you master the basics by focusing on the bare essential concepts you must know.\nReactive Forms for PROs Advanced Auto-saving Firestore Form Email/Password Auth with Reactive Forms 1. Reactive Forms Fundamentals At this point, it is assumed that you have an existing Angular project started with the CLI v6+.","tags":["angular","forms"],"title":"Angular Reactive Forms Basics Guide","type":"lessons","url":"https://fireship.io/lessons/basics-reactive-forms-in-angular/","weight":0,"wordcount":1093},{"author":"Jeff Delaney","date":1525294536,"description":"Build your own Angular library and publish it to NPM","dir":"lessons/build-an-angular-library-with-ngpackagr/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1525294536,"objectID":"eaec643f8bfc82af544462275a1816fc","permalink":"https://fireship.io/lessons/build-an-angular-library-with-ngpackagr/","publishdate":"2018-05-02T13:55:36-07:00","readingtime":5,"relpermalink":"/lessons/build-an-angular-library-with-ngpackagr/","section":"lessons","summary":"In this lesson, I will show you how to build an Angular Library from scratch using NgPackagr. My main motivation for this article is that Google Analytics recently changed their main API to gtag.js, but solid Angular libraries were lacking, so I decided to build one from scratch. NgPackagr made the bundling process very easy.\nAngular packages are standardized by the Angular Package Format, but generating this output manually is difficult.","tags":["pro","angular"],"title":"Build an Angular Library With NgPackagr","type":"lessons","url":"https://fireship.io/lessons/build-an-angular-library-with-ngpackagr/","weight":0,"wordcount":1033},{"author":"Jeff Delaney","date":1525034629,"description":"Build web components with Angular Elements","dir":"lessons/angular-elements-quick-start-guide/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1525034629,"objectID":"169e1d6637b335a379a941c30e8602ef","permalink":"https://fireship.io/lessons/angular-elements-quick-start-guide/","publishdate":"2018-04-29T13:43:49-07:00","readingtime":7,"relpermalink":"/lessons/angular-elements-quick-start-guide/","section":"lessons","summary":"It is exciting to finally see the adoption of web components going mainstream. There are many tools available for building them, but none can match the power and stability of Angular Elements. The following lesson will provide a handful of useful techniques aimed at building complex production-ready custom elements.\nIn addition to this post, check out these resources:\nManfred Steyer\u0026rsquo;s Angular Elements Series Sam Julian\u0026rsquo;s Getting Started with Angular Elements Nrwl\u0026rsquo;s Five Reasons to Use Angular Elements Angular Elements QuickStart Rendering without Zone.","tags":["angular","web-components"],"title":"Angular Elements Guide","type":"lessons","url":"https://fireship.io/lessons/angular-elements-quick-start-guide/","weight":0,"wordcount":1299},{"author":null,"date":1525034629,"description":"Web components are a set of web platform APIs that allow you to create new custom, reusable, encapsulated HTML tags to use in web pages and web apps. May be used with any JavaScript library or framework that works with HTML.","dir":"tags/web-components/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1525034629,"objectID":"92225c61c9b25930c35c7b8ea152e328","permalink":"https://fireship.io/tags/web-components/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/web-components/","section":"tags","summary":"","tags":null,"title":"Web Components","type":"tags","url":"https://fireship.io/tags/web-components/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1523046759,"description":"How to use NGXS for state management in Angular","dir":"lessons/ngxs-quick-start-angular-state-management/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1523046759,"objectID":"c48707d236f58543187f925ac429d67c","permalink":"https://fireship.io/lessons/ngxs-quick-start-angular-state-management/","publishdate":"2018-04-06T13:32:39-07:00","readingtime":3,"relpermalink":"/lessons/ngxs-quick-start-angular-state-management/","section":"lessons","summary":"In this lesson we will get up and running with NGXS - a redux-style state management system for Angular. My goal in this lesson is to get you familiar with the core concepts that underpin this library and make some balanced comparisons to NgRx.\nThis article is a work in progress. Let me know what you think about NGXS in the comments. NgRx vs NGXS The big question on everybody\u0026rsquo;s mind is how does NGXS compare to NgRx?","tags":["angular"],"title":"NGXS Quick Start","type":"lessons","url":"https://fireship.io/lessons/ngxs-quick-start-angular-state-management/","weight":0,"wordcount":551},{"author":null,"date":1522527917,"description":"TensorFlow is a free and open-source software library for machine learning and artificial intelligence with particular focus on training and inference of deep neural networks.","dir":"tags/tensorflow/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1522527917,"objectID":"694d7b69c5ccfc017be2ed769f090459","permalink":"https://fireship.io/tags/tensorflow/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tensorflow/","section":"tags","summary":"","tags":null,"title":"Tensorflow","type":"tags","url":"https://fireship.io/tags/tensorflow/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1522527917,"description":"Get started with TensorFlow.js by building machine learning models in a JavaScript app","dir":"lessons/tensorflow-js-quick-start/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1522527917,"objectID":"71fe06a555a55bdce659851b645d59c3","permalink":"https://fireship.io/lessons/tensorflow-js-quick-start/","publishdate":"2018-03-31T13:25:17-07:00","readingtime":7,"relpermalink":"/lessons/tensorflow-js-quick-start/","section":"lessons","summary":"Google launched TensorFlow.js at TensorFlow Dev Summit 2018, which opens the door to building machine learning (ML) models in the browser. This means web developers can do things like\u0026hellip;\nBuild privacy-friendly AI features. Data never leaves the client, so you can build deep learning models without ever seeing the actual data. Use pre-trained Python ML models in your app. There are tons of successful Python-based models that you can load into the browser and start running predictions with minimal code.","tags":["ml","tensorflow","javascript"],"title":"TensorFlow.js Quick Start Tutorial","type":"lessons","url":"https://fireship.io/lessons/tensorflow-js-quick-start/","weight":0,"wordcount":1324},{"author":"Jeff Delaney","date":1522024462,"description":"Build a Node CLI utility that imports data from a CSV file to Firestore","dir":"lessons/import-csv-json-or-excel-to-firestore/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1522024462,"objectID":"36010819bdebdb335f9a940a083f4de6","permalink":"https://fireship.io/lessons/import-csv-json-or-excel-to-firestore/","publishdate":"2018-03-25T17:34:22-07:00","readingtime":6,"relpermalink":"/lessons/import-csv-json-or-excel-to-firestore/","section":"lessons","summary":"If you want to migrate your existing database to Firestore, you might be wondering\u0026hellip; How do I import JSON or CSV to Firestore?. In this lesson, I will provide you with a reliable pipeline for reading raw data and parsing it to a writable format for Firestore.\nEverybody has different data modeling needs, so I will teach you how to quickly roll out your own NodeJS CSV-to-Firestore command line import tool.","tags":["pro","firebase","firestore","node"],"title":"CSV to Firestore","type":"lessons","url":"https://fireship.io/lessons/import-csv-json-or-excel-to-firestore/","weight":0,"wordcount":1110},{"author":"Jeff Delaney","date":1521591950,"description":"How to implement passwordless email-link authentication with Firebase and Angular","dir":"lessons/using-passwordless-signup-with-firebase-on-the-web/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1521591950,"objectID":"1e70ce759851213777615dd0819d8ac9","permalink":"https://fireship.io/lessons/using-passwordless-signup-with-firebase-on-the-web/","publishdate":"2018-03-20T17:25:50-07:00","readingtime":4,"relpermalink":"/lessons/using-passwordless-signup-with-firebase-on-the-web/","section":"lessons","summary":"Passwordless auth - or email-link signup - is a cool new user authentication option in the Firebase SDK that was released in v4.12.0 on March 20th, 2018. Rather than force a user to remember a password, we simply send them an email with a link that creates the JSON Web Token when they redirect back to the site. As a user of apps, I see this method quickly replacing traditional passwords and personally find it much more user-friendly.","tags":["auth","firebase"],"title":"Passwordless Signup With Firebase on the Web","type":"lessons","url":"https://fireship.io/lessons/using-passwordless-signup-with-firebase-on-the-web/","weight":0,"wordcount":808},{"author":"Jeff Delaney","date":1519600429,"description":"Go back to the basics with Firebase using JavaScript","dir":"lessons/the-ultimate-beginners-guide-to-firebase/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1519600429,"objectID":"3745e086668912b7db2c582f986b66e7","permalink":"https://fireship.io/lessons/the-ultimate-beginners-guide-to-firebase/","publishdate":"2018-02-25T16:13:49-07:00","readingtime":6,"relpermalink":"/lessons/the-ultimate-beginners-guide-to-firebase/","section":"lessons","summary":"Today we\u0026rsquo;re going back to the basics in Firebase by building a basic web app from scratch. Even though this is beginner level, I think it\u0026rsquo;s very useful to write code with Firebase using nothing but plain JS, especially if you\u0026rsquo;re used to developing with a framework library like AngularFire, ReactFire, or Vuefire. In addition, I want give you my Why Firebase? opinion and explain why it\u0026rsquo;s my goto cloud provider.","tags":["javascript","firebase"],"title":"The Ultimate Beginners Guide to Firebase","type":"lessons","url":"https://fireship.io/lessons/the-ultimate-beginners-guide-to-firebase/","weight":0,"wordcount":1227},{"author":"Jeff Delaney","date":1519162830,"description":"Build a typeahead autocomplete search form with Firestore by implementing advanced data querying methods.","dir":"lessons/typeahead-autocomplete-with-firestore/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1581370830,"objectID":"510e841c42c8129127a542333a93ada7","permalink":"https://fireship.io/lessons/typeahead-autocomplete-with-firestore/","publishdate":"2018-02-20T14:40:30-07:00","readingtime":5,"relpermalink":"/lessons/typeahead-autocomplete-with-firestore/","section":"lessons","summary":"In this lesson, we will build a basic typeahead or autocomplete system using nothing but Firestore. It relies on an object/map data structure that exposes some of the more advanced query patterns available to us. The database contains a collection of movie documents, and our goal is to build a search form that will auto-populate results based on the movie\u0026rsquo;s title.\nTypeahead demo using only Firestore\nMethod 1: Offset with the Magic uf8ff Character A few months ago I created a RealtimeDB Autocomplete lesson that uses '\\uf8ff', which is a very high Unicode point.","tags":["typescript","pro","rxjs","angular"],"title":"Typeahead Autocomplete with Firestore","type":"lessons","url":"https://fireship.io/lessons/typeahead-autocomplete-with-firestore/","weight":0,"wordcount":870},{"author":"Jeff Delaney","date":1518302426,"description":"Build a custom validator for Angular Reactive Forms that checks a username asynchronously in Firestore","dir":"lessons/async-form-validation-in-firebase-enforce-uniqueness/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1562971226,"objectID":"939dc42ef86b9f7e26ab23b6fbba2d81","permalink":"https://fireship.io/lessons/async-form-validation-in-firebase-enforce-uniqueness/","publishdate":"2018-02-10T15:40:26-07:00","readingtime":4,"relpermalink":"/lessons/async-form-validation-in-firebase-enforce-uniqueness/","section":"lessons","summary":"Reactive form validation can be a complex and difficult feature to implement, especially if you need to validate fields asynchronously. Angular ships with a few built-in validators, but they can only take you so far\u0026hellip;\nToday, we are building a custom async validator that can verify username uniqueness in Firebase Firestore. My goal is to show you async validator for your reactive forms that you can apply to virtually any backend data source.","tags":["pro","angular","firebase","rxjs"],"title":"Angular Reactive Forms Async Validation","type":"lessons","url":"https://fireship.io/lessons/async-form-validation-in-firebase-enforce-uniqueness/","weight":0,"wordcount":788},{"author":"Jeff Delaney","date":1517869897,"description":"Deal with advanced data modeling scenarios in NoSQL","dir":"lessons/advanced-firestore-nosql-data-structure-examples/","fuzzywordcount":1600,"keywords":null,"kind":"page","lang":"en","lastmod":1517869897,"objectID":"1f197fe0913e5821e9c458c28473b167","permalink":"https://fireship.io/lessons/advanced-firestore-nosql-data-structure-examples/","publishdate":"2018-02-05T15:31:37-07:00","readingtime":8,"relpermalink":"/lessons/advanced-firestore-nosql-data-structure-examples/","section":"lessons","summary":"In the previous lesson, we learned the fundamentals of relational data modeling with Firestore. Today I want to push further and look at several more practical examples. In addition to data modeling, we will look at techniques like duplication, aggregation, composite keys, bucketing, and more.\nKeep in mind, Firestore is still in beta. Firebase engineers hinted at some really cool features on the roadmap (geo queries, query by array of ids) - I'll be sure to keep you posted :)","tags":["pro","firebase","firestore"],"title":"Advanced Data Modeling with Firestore by Example","type":"lessons","url":"https://fireship.io/lessons/advanced-firestore-nosql-data-structure-examples/","weight":0,"wordcount":1515},{"author":"Jeff Delaney","date":1517869223,"description":"Get started in Firestore with practical real-world examples aimed at SQL Developers","dir":"lessons/firestore-nosql-data-modeling-by-example/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1517869223,"objectID":"91ead380f668c902a520df9362219b4c","permalink":"https://fireship.io/lessons/firestore-nosql-data-modeling-by-example/","publishdate":"2018-02-05T15:20:23-07:00","readingtime":7,"relpermalink":"/lessons/firestore-nosql-data-modeling-by-example/","section":"lessons","summary":"Looking for advanced data modeling concepts and examples? Take the Firestore Data Modeling Course.\nData modeling in a NoSQL environment is tricky - especially if you come from a RDBMS background (MySQL, Postgres, etc) because you will need to unlearn many of the core principles already solidified in your brain. Firestore uses a document-oriented NoSQL model, similar to MongoDB and CouchDB, which leads to fundamentally different data structuring decisions.\nThe goal of this lesson is to examine data modeling principles in Firestore with comparisons to SQL.","tags":["sql","firestore","firebase"],"title":"Firestore NoSQL Relational Data Modeling","type":"lessons","url":"https://fireship.io/lessons/firestore-nosql-data-modeling-by-example/","weight":0,"wordcount":1422},{"author":"Jeff Delaney","date":1517609293,"description":"Advanced Google Cloud Vision API techniques with Node.js Firebase Cloud Functions","dir":"lessons/advanced-cloud-vision-ocr-text-extraction/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1517609293,"objectID":"159dc1229a211975fb0fc16d2a36d6b5","permalink":"https://fireship.io/lessons/advanced-cloud-vision-ocr-text-extraction/","publishdate":"2018-02-02T15:08:13-07:00","readingtime":4,"relpermalink":"/lessons/advanced-cloud-vision-ocr-text-extraction/","section":"lessons","summary":"The following lesson uses the Cloud Vision API on Google Cloud to extract text from raw images. This is a highly sought-after feature in business applications that still work with non-digitized text documents.\nThe Cloud Vision Node.js documentation is a good reference to keep by your side.\nGetting Started You actually don\u0026rsquo;t need a frontend app to experiment with this technology - just a Firebase storage bucket. I recommend creating a dedicated bucket for the invocation of cloud functions.","tags":["pro","cloud-functions","node"],"title":"Extract Text from Images","type":"lessons","url":"https://fireship.io/lessons/advanced-cloud-vision-ocr-text-extraction/","weight":0,"wordcount":818},{"author":"Jeff Delaney","date":1516831249,"description":"Build the Not Hotdog app (Silicon Valley) using Ionic, Firebase, and Google Cloud Vision.","dir":"lessons/google-cloud-vision-with-ionic-and-firebase/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1516831249,"objectID":"c0f87a6d2b67ccd68c220ad197d48d6b","permalink":"https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/","publishdate":"2018-01-24T15:00:49-07:00","readingtime":7,"relpermalink":"/lessons/google-cloud-vision-with-ionic-and-firebase/","section":"lessons","summary":"In this lesson, we\u0026rsquo;re going to combine Google\u0026rsquo;s Google\u0026rsquo;s Cloud Vision API with Ionic and Firebase to create a native mobile app that can automatically label and tag images. But most importantly, it can determine if an image is a hotdog or not - just like the SeeFood app that made Jin Yang very rich.\nJust a few years ago, this technology would have been unreachable by the average developer. You would need to train your own deep neural network on tens-of-thousands of images with massive amounts of computing power.","tags":["ionic","gcp","ml","firebase"],"title":"Google Cloud Vision with Ionic - Not Hotdog App","type":"lessons","url":"https://fireship.io/lessons/google-cloud-vision-with-ionic-and-firebase/","weight":0,"wordcount":1473},{"author":"Jeff Delaney","date":1514495858,"description":"Animate mobile touch gestures using HammerJS","dir":"lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1514495858,"objectID":"832f5d62362330f95bd1581bc4d120f5","permalink":"https://fireship.io/lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/","publishdate":"2017-12-28T14:17:38-07:00","readingtime":7,"relpermalink":"/lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/","section":"lessons","summary":"If your app targets users on mobile devices (80% of apps do), then you should carefully consider the impact of touch gestures, i.e. swipe, tap, pinch, etc. In this lesson, I will show you how to listen to touch gestures with HammerJS, then apply cool animations to them with Angular.\nIn addition, we will learn how to customize the configuration of HammerJS and build our own custom events beyond the basic ones provided.","tags":["animation","angular"],"title":"Mobile Touch Animation with HammerJS","type":"lessons","url":"https://fireship.io/lessons/hammerjs-angular-5-animations-for-mobile-gestures-tutorial/","weight":0,"wordcount":1316},{"author":"Jeff Delaney","date":1513082977,"description":"Build a realtime Angular Material data table with Firestore and edit data with a dialog modal.","dir":"lessons/material-data-tables-with-firestore/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1513082977,"objectID":"ff3ad89a0c5eb7083f66886dd1188bfd","permalink":"https://fireship.io/lessons/material-data-tables-with-firestore/","publishdate":"2017-12-12T05:49:37-07:00","readingtime":5,"relpermalink":"/lessons/material-data-tables-with-firestore/","section":"lessons","summary":"In this lesson, I will show you how to build an Angular Material data datable that is sortable and filterable, while maintaining a realtime connection with Firestore. A dialog modal will be used share data between material components and update documents in Firestore.\nThis tutorial also makes suggestions for performance optimization when dealing with hundreds rows in the view. The end result is a table that\u0026hellip;\nUses Firebase/Firestore as the data source.","tags":["angular","firebase","firestore","pro"],"title":"Material Data Tables With Firestore","type":"lessons","url":"https://fireship.io/lessons/material-data-tables-with-firestore/","weight":0,"wordcount":860},{"author":"Jeff Delaney","date":1512650369,"description":"Implement role-based authorization with Firestore","dir":"lessons/role-based-authorization-with-firestore-nosql-and-angular-5/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1512650369,"objectID":"f3f8ca14811383c8f28539f9f10276ee","permalink":"https://fireship.io/lessons/role-based-authorization-with-firestore-nosql-and-angular-5/","publishdate":"2017-12-07T05:39:29-07:00","readingtime":7,"relpermalink":"/lessons/role-based-authorization-with-firestore-nosql-and-angular-5/","section":"lessons","summary":"Learn more about data modeling in Firestore in the full course.\nIn this lesson, I will show you how to assign roles to users with the Firestore NoSQL database, then secure them on both the frontend and backend. This feature is known as role-based access control and is commonly used in forums, social media, etc - Stack Overflow Privileges is an excellent specimen of this feature in the wild (minus the ranking system).","tags":["firebase","firestore","angular"],"title":"Role Based Authorization With Firestore","type":"lessons","url":"https://fireship.io/lessons/role-based-authorization-with-firestore-nosql-and-angular-5/","weight":0,"wordcount":1402},{"author":"Jeff Delaney","date":1511638031,"description":"Performance analysis and optimization tips for Progressive Web Apps","dir":"lessons/pwa-performance-optimization-angular/","fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1511638031,"objectID":"451efc8a93652a976437b8a3cb246600","permalink":"https://fireship.io/lessons/pwa-performance-optimization-angular/","publishdate":"2017-11-25T12:27:11-07:00","readingtime":6,"relpermalink":"/lessons/pwa-performance-optimization-angular/","section":"lessons","summary":"The following lesson contains a handful of tips and ideas aimed at optimizing the Lighthouse PWA performance score. Any good optimization starts with a solid analysis, so I will also provide you with some advanced tools for analyzing the performance for your progressive web app.\nHigh Performance PWAs with Angular PWA performance is largely dependent on the way you design your app. In this demo, I am following the PRPL pattern from Polymer as closely as possible.","tags":["pro","pwa","javascript","angular"],"title":"PWA Performance Optimization Tips","type":"lessons","url":"https://fireship.io/lessons/pwa-performance-optimization-angular/","weight":0,"wordcount":1128},{"author":"Jeff Delaney","date":1510686833,"description":"Convert Firestore data into a CSV Excel Spreadsheet with Firebase Cloud Functions.","dir":"lessons/csv-exports-from-firestore-database-with-cloud-functions/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1510686833,"objectID":"0e206e1c6ad6caedfd05b1b63a773911","permalink":"https://fireship.io/lessons/csv-exports-from-firestore-database-with-cloud-functions/","publishdate":"2017-11-14T12:13:53-07:00","readingtime":5,"relpermalink":"/lessons/csv-exports-from-firestore-database-with-cloud-functions/","section":"lessons","summary":"A common business requirement for a professional app is to export data as comma separated values, or CSV format. Data formatted this way can be used by spreadsheet software like Microsoft Excel and Google Docs, but it can also be used as input to many popular machine learning libraries. It this lesson, I will show you how to export a Firestore collection in CSV format using Firebase Cloud Functions and a Storage Bucket.","tags":["pro","cloud-functions","node"],"title":"CSV Exports from Firestore","type":"lessons","url":"https://fireship.io/lessons/csv-exports-from-firestore-database-with-cloud-functions/","weight":0,"wordcount":1061},{"author":"Jeff Delaney","date":1510513503,"description":"Build a multi-step reactive form for email-password auth with Firebase","dir":"lessons/multi-step-signup-firebase-email-password-auth-angular-reactive-forms/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1510513503,"objectID":"0b40164b419cf0676bb2c4a425baae81","permalink":"https://fireship.io/lessons/multi-step-signup-firebase-email-password-auth-angular-reactive-forms/","publishdate":"2017-11-12T12:05:03-07:00","readingtime":7,"relpermalink":"/lessons/multi-step-signup-firebase-email-password-auth-angular-reactive-forms/","section":"lessons","summary":"Firebase password auth can be configured with a few lines of code, but what happens if you need additional custom user data before authorizing activity in your app? In this lesson, my goal is to show you several important concepts.\nEmail/Password Auth Reactive Forms in Angular Security with custom Firebase user data What are we Building? This lesson is based off of the [Firstarter PWA starter app](https://firestarter-96e46.firebaseapp.com/), which is organized into NgModules.","tags":["angular","firebase","auth"],"title":"Multi-step Reactive Form for Email-Password Signup","type":"lessons","url":"https://fireship.io/lessons/multi-step-signup-firebase-email-password-auth-angular-reactive-forms/","weight":0,"wordcount":1310},{"author":"Jeff Delaney","date":1510167424,"description":"Configure Firebase Cloud Functions to serve as the middleware for Rendertron","dir":"lessons/seo-angular-part-2-firebase-cloud-functions-middleware-for-rendertron/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1510167424,"objectID":"e092a2623361a3ccc4fb7a910c18f878","permalink":"https://fireship.io/lessons/seo-angular-part-2-firebase-cloud-functions-middleware-for-rendertron/","publishdate":"2017-11-08T11:57:04-07:00","readingtime":5,"relpermalink":"/lessons/seo-angular-part-2-firebase-cloud-functions-middleware-for-rendertron/","section":"lessons","summary":"In Angular SEO Part 1, I introduced the awesomeness of Headless Chrome and Rendertron. The only thing missing is the middleware that can determine if incoming traffic is a bot or a regular user. Rendertron has officially supported Express middleware or you can create your own from scratch using Firebase Cloud Functions. As you will see, it\u0026rsquo;s not all that difficult.\nThis method works really well with Firebase and here\u0026rsquo;s why\u0026hellip;","tags":["pro","seo","angular","cloud-functions"],"title":"Middleware for Rendertron","type":"lessons","url":"https://fireship.io/lessons/seo-angular-part-2-firebase-cloud-functions-middleware-for-rendertron/","weight":0,"wordcount":1052},{"author":null,"date":1510167424,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1510167424,"objectID":"","permalink":"https://fireship.io/tags/seo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/seo/","section":"tags","summary":"","tags":null,"title":"seo","type":"tags","url":"https://fireship.io/tags/seo/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1509993786,"description":"Use Rendertron to make Angular SEO and linkbot friendly","dir":"lessons/seo-angular-part-1-rendertron-meta-tags/","fuzzywordcount":1800,"keywords":null,"kind":"page","lang":"en","lastmod":1509993786,"objectID":"23329d3a8b5a97799f0a5af52b8fd845","permalink":"https://fireship.io/lessons/seo-angular-part-1-rendertron-meta-tags/","publishdate":"2017-11-06T11:43:06-07:00","readingtime":9,"relpermalink":"/lessons/seo-angular-part-1-rendertron-meta-tags/","section":"lessons","summary":"⚠️ As of 2020, SEO and SSR in Angular is much-improved. Consider Angular Universal as your first option before this approach.\nThe single most common question I receive is How do I make Angular SEO friendly. Usually my answer is Well, it\u0026rsquo;s complicated\u0026hellip; no more. Today I bring you a simple solution to this very important problem.\nI am going to show you a novel SEO strategy to make an Angular5 (or any Progressive Web App for that matter) visible to search engine crawlers and social media link preview bots.","tags":["seo","angular","puppeteer"],"title":"Angular SEO with Rendertron","type":"lessons","url":"https://fireship.io/lessons/seo-angular-part-1-rendertron-meta-tags/","weight":0,"wordcount":1764},{"author":"Jeff Delaney","date":1509301622,"description":"A complete demo of data aggregation with Firestore Cloud Functions","dir":"lessons/firestore-cloud-functions-data-aggregation/","fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1509301622,"objectID":"7cf6fb8fda95c25dc741f5c8329cf84a","permalink":"https://fireship.io/lessons/firestore-cloud-functions-data-aggregation/","publishdate":"2017-10-29T11:27:02-07:00","readingtime":6,"relpermalink":"/lessons/firestore-cloud-functions-data-aggregation/","section":"lessons","summary":"The following lesson demonstrates how to make Firestore queries faster and more cost-effective by aggregating data from a subcollection to its parent. Aggregation is simply the process of totaling up a bunch of documents and calculating combined or cumulative information about them.\nA Firebase Cloud Function configured with a Firestore database trigger makes it possible to perform this task automatically whenever a document changes. This demo simulates the relationship between blog posts and a subcollection of comments.","tags":["firebase","cloud-functions","firestore"],"title":"Cloud Functions Data Aggregation","type":"lessons","url":"https://fireship.io/lessons/firestore-cloud-functions-data-aggregation/","weight":0,"wordcount":1081},{"author":"Jeff Delaney","date":1508264250,"description":"Build a five-star rating system from scratch with Firestore","dir":"lessons/star-ratings-system-with-firestore/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1508264250,"objectID":"89e0aba721ec1a7810e7f1b6efee6496","permalink":"https://fireship.io/lessons/star-ratings-system-with-firestore/","publishdate":"2017-10-17T11:17:30-07:00","readingtime":6,"relpermalink":"/lessons/star-ratings-system-with-firestore/","section":"lessons","summary":"In this lesson, we will build a five-star rating system from scratch with Angular and Firebase.\nKnowing how to implement star reviews in Angular is an important skill for a developer because the same concepts are used for likes, hearts, votes, and many other common UX features.\nFirestore Data Structure How do we model star-ratings in a NoSQL database like firestore? In the SQL world, this is known as a many-to-many-through` relationship where Users have many Movies through Reviews AND Movies have many Users through Reviews","tags":["firestore","firebase","angular"],"title":"Star Ratings System With Firestore","type":"lessons","url":"https://fireship.io/lessons/star-ratings-system-with-firestore/","weight":0,"wordcount":1241},{"author":"Jeff Delaney","date":1507744572,"description":"Use the Angular HTTP Client and to make requests to API endpoints","dir":"lessons/http-with-angular-quick-start/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1507744572,"objectID":"e4e730423eb9cf31fd110f77950d7f50","permalink":"https://fireship.io/lessons/http-with-angular-quick-start/","publishdate":"2017-10-11T10:56:12-07:00","readingtime":6,"relpermalink":"/lessons/http-with-angular-quick-start/","section":"lessons","summary":"In this lesson, we are going to use the Angular HTTP Client to make API calls to an API endpoint to retrieve data. My goal is to teach you the fundamental concepts needed to start using one of the thousands of RESTful APIs in the world.\nThis lesson uses the newer `HttpClientModule` introduced in Angular 4.3, not to be confused with the old standalone HttpModule.\nTo simulate requests to a real API we are using JSONPlaceholder.","tags":["angular"],"title":"Http With Angular Quick Start","type":"lessons","url":"https://fireship.io/lessons/http-with-angular-quick-start/","weight":0,"wordcount":1232},{"author":"Jeff Delaney","date":1507724771,"description":"Perform infinite scroll pagination, both downwards and upwards, with Firestore and Angular.","dir":"lessons/infinite-scroll-firestore-angular/","fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1507724771,"objectID":"e199b43f72c66e7ae8d0ea4fb2c6a2c9","permalink":"https://fireship.io/lessons/infinite-scroll-firestore-angular/","publishdate":"2017-10-11T05:26:11-07:00","readingtime":7,"relpermalink":"/lessons/infinite-scroll-firestore-angular/","section":"lessons","summary":"A few months ago, I showed you how to create a basic infinite scroll feature using Realtime Database. Today, we will create a more sophisticated and flexible pagination service with Firestore to facilitate infinite scroll.\nAs an added bonus, the feature will be able to scroll upwards, which is useful when scrolling back in time through a text feed - think Facebook Messenger or Slack.\nGet the [Firestore Pagination source code](https://github.","tags":["firestore","firebase","angular"],"title":"Infinite Scroll Firestore Angular","type":"lessons","url":"https://fireship.io/lessons/infinite-scroll-firestore-angular/","weight":0,"wordcount":1437},{"author":"Jeff Delaney","date":1507572472,"description":"Build a weather forecasting app with the Angular HTTP Client and Dark Sky API","dir":"lessons/weather-app-with-the-angular-http-client-and-dark-sky-api/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1507572472,"objectID":"63daf06dc1eca9a1a42b0002479d835b","permalink":"https://fireship.io/lessons/weather-app-with-the-angular-http-client-and-dark-sky-api/","publishdate":"2017-10-09T11:07:52-07:00","readingtime":6,"relpermalink":"/lessons/weather-app-with-the-angular-http-client-and-dark-sky-api/","section":"lessons","summary":"In this lesson, you will learn how to retrieve weather data from an API and use it in a frontend Angular app. A secure backend built with Firebase Cloud Functions will make the HTTP request to ensure sensitive data is not exposed in Angular.\nThe end result looks like this, but you will have access to whole bunch of weather data to completely customize the user experience.\nWeather forecasting app demo","tags":["pro","angular","node"],"title":"Build a Weather App with Angular","type":"lessons","url":"https://fireship.io/lessons/weather-app-with-the-angular-http-client-and-dark-sky-api/","weight":0,"wordcount":1277},{"author":"Jeff Delaney","date":1506521289,"description":"Run HTTP and Database Cloud Functions when a user is logged-in","dir":"lessons/secure-firebase-cloud-functions/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1506521289,"objectID":"d258bba7e20317194a00a7af4277db0d","permalink":"https://fireship.io/lessons/secure-firebase-cloud-functions/","publishdate":"2017-09-27T07:08:09-07:00","readingtime":4,"relpermalink":"/lessons/secure-firebase-cloud-functions/","section":"lessons","summary":"Learn more in the Cloud Functions Master Course.\nIn this lesson, I will show you how to run Firebase Cloud Functions ONLY when users are authenticated with a valid user ID.\nEndpoint security is critical - especially if using a paid 3rd party API like SendGrid or Twilio. There are certain situations where only want a function to run if the user is currently authenticated. For example, you may have a function that sends transactional email to a user via SendGrid.","tags":["firebase","security","pro"],"title":"Secure Firebase Cloud Functions for Authenticated Users","type":"lessons","url":"https://fireship.io/lessons/secure-firebase-cloud-functions/","weight":0,"wordcount":810},{"author":"Jeff Delaney","date":1506002185,"description":"Learn how to build native desktop apps for Windows, macOS, or Linux using Angular and Electron","dir":"lessons/desktop-apps-with-electron-and-angular/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1506002185,"objectID":"79e47f328d43c317deb9dc39f7f7c9ce","permalink":"https://fireship.io/lessons/desktop-apps-with-electron-and-angular/","publishdate":"2017-09-21T06:56:25-07:00","readingtime":6,"relpermalink":"/lessons/desktop-apps-with-electron-and-angular/","section":"lessons","summary":"In this lesson, you will learn how to build native desktop apps with Angular and Electron. You might be surprised how easy it is to start building high-quality desktop apps for any platform, or even port your existing Angular app to native desktop platforms.\nThis lesson covers the following topics:\nConfigure Electron 1.7 with Angular. Build a simple timer app in Angular. Package the app for install on Windows 10, macOS, and Linux Ubuntu.","tags":["electron","angular"],"title":"Desktop Apps with Electron and Angular","type":"lessons","url":"https://fireship.io/lessons/desktop-apps-with-electron-and-angular/","weight":0,"wordcount":1271},{"author":"Jeff Delaney","date":1503840317,"description":"Get started building redux apps in Angular with NgRx","dir":"lessons/angular-ngrx-redux-starter-guide/","fuzzywordcount":1900,"keywords":null,"kind":"page","lang":"en","lastmod":1503840317,"objectID":"a503d35e3278628b50acf4620a045186","permalink":"https://fireship.io/lessons/angular-ngrx-redux-starter-guide/","publishdate":"2017-08-27T06:25:17-07:00","readingtime":9,"relpermalink":"/lessons/angular-ngrx-redux-starter-guide/","section":"lessons","summary":"The Redux JavaScript library was made famous by React and Elm, but its design patterns can also be applied in Angular. The general idea is that all application data is kept in a single JavaScript object on the client, giving you a predictable tree of state changes (we\u0026rsquo;ll get into this later). In this lesson, we are going to build a simple NgRx Angular app from scratch, that will eventually become this NgRx-Fire demo app.","tags":["ngrx","angular"],"title":"Angular NgRx Starter Guide","type":"lessons","url":"https://fireship.io/lessons/angular-ngrx-redux-starter-guide/","weight":0,"wordcount":1840},{"author":null,"date":1503840317,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1503840317,"objectID":"","permalink":"https://fireship.io/tags/ngrx/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ngrx/","section":"tags","summary":"","tags":null,"title":"ngrx","type":"tags","url":"https://fireship.io/tags/ngrx/","weight":0,"wordcount":0},{"author":null,"date":1501589679,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1581423279,"objectID":"","permalink":"https://fireship.io/tags/fcm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fcm/","section":"tags","summary":"","tags":null,"title":"fcm","type":"tags","url":"https://fireship.io/tags/fcm/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1501589679,"description":"Send web push notifications to multiple devices with Firebase Cloud Messaging and Firestore","dir":"lessons/push-messages-with-firestore/","fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1581423279,"objectID":"4c3ab21bb077a9c93f48aefcf5b1f85c","permalink":"https://fireship.io/lessons/push-messages-with-firestore/","publishdate":"2017-08-01T05:14:39-07:00","readingtime":6,"relpermalink":"/lessons/push-messages-with-firestore/","section":"lessons","summary":"A few months ago, I released a video covering Firebase Cloud Messaging (FCM) with the Realtime Database. Today, I am going to update this code with the following improvements:\nSave FCM tokens in Firestore. Send Firebase push messages to multiple devices simultaneously. Angular 5 firebase cloud messaging demo in angular\nSetting Up Firebase Cloud Messaging in Angular There are several steps you must take in Angular to get started with cloud messaging.","tags":["push-notifications","firebase","fcm","pro"],"title":"Push Notifications on the Web","type":"lessons","url":"https://fireship.io/lessons/push-messages-with-firestore/","weight":0,"wordcount":1224},{"author":"Jeff Delaney","date":1501243198,"description":"Build realtime map features with Angular, Firebase, and Mapbox","dir":"lessons/build-realtime-maps-in-angular-with-mapbox-gl/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1501243198,"objectID":"f5db8b3426bff7c9d91e457de0f8a56b","permalink":"https://fireship.io/lessons/build-realtime-maps-in-angular-with-mapbox-gl/","publishdate":"2017-07-28T04:59:58-07:00","readingtime":5,"relpermalink":"/lessons/build-realtime-maps-in-angular-with-mapbox-gl/","section":"lessons","summary":"In this lesson, I am going to cover the basics of building realtime map features with Angular4, Firebase, and MapBox. Here’s a highlight of what is covered in the code below. How to obtain a user’s current location How to connect Firebase data with Mapbox How to format GeoJSON data. How to quickly customize map styles. realtime interaction between two maps\nInitial Setup Start by signing up for a free Mapbox account, then installing mapbox-gl in your Angular project.","tags":["angular","mapbox","firebase"],"title":"Build Realtime Maps with Mapbox GL","type":"lessons","url":"https://fireship.io/lessons/build-realtime-maps-in-angular-with-mapbox-gl/","weight":0,"wordcount":961},{"author":null,"date":1501243198,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1501243198,"objectID":"","permalink":"https://fireship.io/tags/mapbox/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mapbox/","section":"tags","summary":"","tags":null,"title":"mapbox","type":"tags","url":"https://fireship.io/tags/mapbox/","weight":0,"wordcount":0},{"author":"Jeff Delaney","date":1500897044,"description":"Five basic animation techniques and examples based on Angular","dir":"lessons/angular-animations-examples/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1500897044,"objectID":"cea7d67480c8225cc45954d466a8315f","permalink":"https://fireship.io/lessons/angular-animations-examples/","publishdate":"2017-07-24T04:50:44-07:00","readingtime":4,"relpermalink":"/lessons/angular-animations-examples/","section":"lessons","summary":"Animation is often the X-factor that sets remarkable apps apart from average apps. In this lesson, I provide five basic animation examples based on Angular 4.3+. This article covers the animation techniques I find most useful when building Angular apps, but check out this excellent post on new Angular 4.2 animation features for a more comprehensive look at the latest features.\nAll animations can be boiled down into two simple steps:","tags":["angular","animation"],"title":"Angular Animations Examples","type":"lessons","url":"https://fireship.io/lessons/angular-animations-examples/","weight":0,"wordcount":792},{"author":"Jeff Delaney","date":1500464082,"description":"Use the Firebase to implement Phone authentication on the web.","dir":"lessons/firebase-phone-authentication-with-angular-4-tutorial/","fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1500464082,"objectID":"9df0fae35529029d75c68a7dfd3e4947","permalink":"https://fireship.io/lessons/firebase-phone-authentication-with-angular-4-tutorial/","publishdate":"2017-07-19T04:34:42-07:00","readingtime":3,"relpermalink":"/lessons/firebase-phone-authentication-with-angular-4-tutorial/","section":"lessons","summary":"Signing up users with a phone number adds certain degree of trust or confidence to an app. In this lesson, we are going to use the new phone authentication paradigm from Firebase in our Angular 4 app. At this time, phone auth is not supported in AngularFire, so we will use the firebase JavaScript SDK directly. Phone auth can also be used to link accounts, providing an effective solution for two-factor authentication.","tags":["angular","firebase","auth"],"title":"Firebase Phone Authentication","type":"lessons","url":"https://fireship.io/lessons/firebase-phone-authentication-with-angular-4-tutorial/","weight":0,"wordcount":591},{"author":"Jeff Delaney","date":1499295654,"description":"Build a Facebook-inspired reaction component to allow users to like or react to your content.","dir":"lessons/facebook-inspired-reactions-from-scratch-with-angular-and-firebase/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1499295654,"objectID":"a8101e829886aad777b73df66da0cafd","permalink":"https://fireship.io/lessons/facebook-inspired-reactions-from-scratch-with-angular-and-firebase/","publishdate":"2017-07-05T16:00:54-07:00","readingtime":5,"relpermalink":"/lessons/facebook-inspired-reactions-from-scratch-with-angular-and-firebase/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices.\nIn this lesson, we are going to build a Facebook-inspired reaction component. It works by mapping each reaction type to an integer then saves it with an associated userId. This is similar to the reddit voting system lesson, with some added complexity to manage the various reaction types. Importing the Graphics First, let’s add some graphics to the assets folder.","tags":["angular","firebase"],"title":"Facebook-Inspired Reactions From Scratch","type":"lessons","url":"https://fireship.io/lessons/facebook-inspired-reactions-from-scratch-with-angular-and-firebase/","weight":0,"wordcount":902},{"author":"Jeff Delaney","date":1499122219,"description":"Send toast notifications to users with Angular and Firebase.","dir":"lessons/angular-toast-message-notifications-from-scratch/","fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1499122219,"objectID":"deaa8fc3837b8c93f882c950911a15c6","permalink":"https://fireship.io/lessons/angular-toast-message-notifications-from-scratch/","publishdate":"2017-07-03T15:50:19-07:00","readingtime":4,"relpermalink":"/lessons/angular-toast-message-notifications-from-scratch/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices.\nIn this lesson, we are going to build toast notifications from scratch with Angular 4. There are a couple of good Angular toast packages that solve this problem, but it’s not very hard to do from scratch. This implementation provides a feed of 5 messages/notifications, which the user can dismiss by clicking. A service will manage the notifications, so they can be observed or updated from any component.","tags":["angular","firebase"],"title":"Angular Toast Message Notifications From Scratch","type":"lessons","url":"https://fireship.io/lessons/angular-toast-message-notifications-from-scratch/","weight":0,"wordcount":668},{"author":"Jeff Delaney","date":1498602961,"description":"Create a twitter-inspired follow unfollow system with Angular and Firebase","dir":"lessons/twitter-inspired-follow-system-with-firebase-and-angular/","fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1498602961,"objectID":"3bc479750675a2459c8779fc5ff96ffc","permalink":"https://fireship.io/lessons/twitter-inspired-follow-system-with-firebase-and-angular/","publishdate":"2017-06-27T15:36:01-07:00","readingtime":5,"relpermalink":"/lessons/twitter-inspired-follow-system-with-firebase-and-angular/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices about building a CRUD app.\nThe idea of user following and unfollowing has been around since the rise of Twitter, but add this feature into an app is not as easy as you might think. It is an inherently relational problem, so making it work with a NoSQL database requires some tradeoffs. In this lesson, we are going to build twitter-inspired follow and unfollow feature using on Firebase and Angular 4.","tags":["angular","firebase"],"title":"Twitter Inspired Follow System with Firebase","type":"lessons","url":"https://fireship.io/lessons/twitter-inspired-follow-system-with-firebase-and-angular/","weight":0,"wordcount":983},{"author":"Jeff Delaney","date":1498429041,"description":"Translate text in the cloud with Firebase Cloud Functions","dir":"lessons/text-translator-with-firebase-cloud-functions-onwrite-and-angular/","fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1581373041,"objectID":"f757354780b972ff9546f1c386d2107e","permalink":"https://fireship.io/lessons/text-translator-with-firebase-cloud-functions-onwrite-and-angular/","publishdate":"2017-06-25T15:17:21-07:00","readingtime":4,"relpermalink":"/lessons/text-translator-with-firebase-cloud-functions-onwrite-and-angular/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices about building a CRUD app.\nIn this lesson, we are going to use Firebase Cloud Functions to run code in the background when new data is created in a specific part of the database, using the onWrite event handler. This will allow us to abstract CPU or memory intensive tasks outside of the frontend Angular app.","tags":["node","cloud-functions"],"title":"Text Translator With Firebase Cloud Functions Onwrite and Angular","type":"lessons","url":"https://fireship.io/lessons/text-translator-with-firebase-cloud-functions-onwrite-and-angular/","weight":0,"wordcount":793},{"author":"Jeff Delaney","date":1498343252,"description":"Give Firebase users custom usernames after and validate them asynchronously","dir":"lessons/custom-usernames-with-firebase-authentication-and-angular/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1498343252,"objectID":"752129aa08d557b791ea88ad5a3a1de6","permalink":"https://fireship.io/lessons/custom-usernames-with-firebase-authentication-and-angular/","publishdate":"2017-06-24T15:27:32-07:00","readingtime":4,"relpermalink":"/lessons/custom-usernames-with-firebase-authentication-and-angular/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices about building a CRUD app and the custom Firebase Usernames tutorial.\nFirebase authentication is super convenient, but you can’t easily assign custom usernames out of the box. In this lesson, we are going to give users custom usernames and asynchronously validate their availability during the signup process. On every keyup, the username will be checked for duplicates, so we can display a helpful message to the user.","tags":["angular","firebase"],"title":"Custom Usernames With Firebase Authentication and Angular","type":"lessons","url":"https://fireship.io/lessons/custom-usernames-with-firebase-authentication-and-angular/","weight":0,"wordcount":815},{"author":"Jeff Delaney","date":1498255794,"description":"Create a Reddit-Style Voting System from Scratch with Angular and Firebase","dir":"lessons/reddit-style-upvoting-in-angular-4-and-firebase-nosql/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1498255794,"objectID":"867c465b3a2bcdbaa2ef7e3e0ae4c8e8","permalink":"https://fireship.io/lessons/reddit-style-upvoting-in-angular-4-and-firebase-nosql/","publishdate":"2017-06-23T15:09:54-07:00","readingtime":5,"relpermalink":"/lessons/reddit-style-upvoting-in-angular-4-and-firebase-nosql/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices about building a CRUD app.\nUpvoting and downvoting is an excellent ay handle community-driven content curation. Reddit is the most famous example of this feature, but it is common throughout the interwebs on places like StackOverflow, Kaggle, and others. In this lesson, we will use Angular 4 and Firebase to implement upvoting with ease.","tags":["firebase","angular"],"title":"Reddit Style Upvoting in Angular 4 and Firebase","type":"lessons","url":"https://fireship.io/lessons/reddit-style-upvoting-in-angular-4-and-firebase-nosql/","weight":0,"wordcount":879},{"author":"Jeff Delaney","date":1492722800,"description":"Four different methods for sharing data between Angular components.","dir":"lessons/sharing-data-between-angular-components-four-methods/","fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1523394800,"objectID":"1498b9174b8f1d239f70cbbbb654e127","permalink":"https://fireship.io/lessons/sharing-data-between-angular-components-four-methods/","publishdate":"2017-04-20T14:13:20-07:00","readingtime":5,"relpermalink":"/lessons/sharing-data-between-angular-components-four-methods/","section":"lessons","summary":"Learning Angular? Check out the full Angular 9 Course\nData sharing is an essential concept to understand before diving into your first Angular project. In this lesson, I provide four different methods for sharing data between Angular components.\nThe Parent-Child-Sibling structure of our Angular app.\nParent to Child: Sharing Data via Input This is probably the most common and straightforward method of sharing data. It works by using the @Input() decorator to allow data to be passed via the template.","tags":["angular"],"title":"Sharing Data between Angular Components - Four Methods","type":"lessons","url":"https://fireship.io/lessons/sharing-data-between-angular-components-four-methods/","weight":0,"wordcount":892},{"author":"Jeff Delaney","date":1491854764,"description":"Build a CRUD app that manages a basic list of items - create, read, update, delete.","dir":"lessons/reactive-crud-app-with-angular-and-firebase-tutorial/","fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1491854764,"objectID":"b32cc583cfb54acdaf170412fc3eb808","permalink":"https://fireship.io/lessons/reactive-crud-app-with-angular-and-firebase-tutorial/","publishdate":"2017-04-10T13:06:04-07:00","readingtime":7,"relpermalink":"/lessons/reactive-crud-app-with-angular-and-firebase-tutorial/","section":"lessons","summary":"⚠️ This lesson has been archived! Check out the Full Angular Course for the latest best practices about building a CRUD app.\nWe’re going to be building a basic list of items that you do CRUD to - create, read, update, delete. The feature itself is nothing special, it’s really just a skeleton that demonstrates how to do the most common operations with Angular and Firebase. The realtime database from Firebase uses NoSQL, so think of CRUD in the following terms.","tags":["firebase","angular"],"title":"Reactive Crud App With Angular and Firebase Tutorial","type":"lessons","url":"https://fireship.io/lessons/reactive-crud-app-with-angular-and-firebase-tutorial/","weight":0,"wordcount":1363},{"author":null,"date":-62135596800,"description":"","dir":"/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b542d0b778259080bcfca724c62288b5","permalink":"https://fireship.io/fail/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/fail/","section":"","summary":" Purchase Cancelled Looks like you we're not able to complete your purchase. If you ran into any issues or have questions, email hello@fireship.io\nYou may now close this tab ","tags":null,"title":"Canceled","type":"blank","url":"https://fireship.io/fail/","weight":0,"wordcount":29},{"author":null,"date":-62135596800,"description":"","dir":"","fuzzywordcount":100,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://fireship.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"https://fireship.io/categories/","weight":0,"wordcount":0},{"author":null,"date":-62135596800,"description":"","dir":"/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ec8af71c7dd864fb830597d9997c1dc1","permalink":"https://fireship.io/dashboard/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/dashboard/","section":"","summary":"XP User ID: PRO Status: Account Email: Sign Out Enterprise Account Use the form below to assign your seats. Each account will get a welcome email and have full access after signing in. You can always revoke access later.\nManage account FAQ How do I get my T-shirt \u0026 Sticker? You should have received an email with a link to a Google Form after upgrading. If not, you can access with the /pro command in Discord","tags":null,"title":"Dashboard","type":"page","url":"https://fireship.io/dashboard/","weight":0,"wordcount":196},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"807e5b3c266120d1e500ae0e847bd268","permalink":"https://fireship.io/contributors/finn-krestel/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/finn-krestel/","section":"contributors","summary":"Finn Krestel is a Java, JavaScript, CSS and HTML developer. He mainly uses React or Preact for interactive web applications. Next.js is his favorite SSR framework.","tags":null,"title":"Finn Krestel","type":"contributors","url":"https://fireship.io/contributors/finn-krestel/","weight":0,"wordcount":26},{"author":null,"date":-62135596800,"description":"Getting started with Fireship PRO","dir":"/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3282643614388fe45584734117bbe788","permalink":"https://fireship.io/get-started/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/get-started/","section":"","summary":"Getting Starting Learning Paths This is how you do it.\nwebdev react firebase flutter Get in Touch This is how you do it.\nExperience Points This is how you do it.","tags":null,"title":"Get Started","type":"page","url":"https://fireship.io/get-started/","weight":0,"wordcount":31},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"58ce23e79498a7dc9665b1e5d3160b7e","permalink":"https://fireship.io/contributors/jarrett-helton/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/jarrett-helton/","section":"contributors","summary":"Jarrett is a code enthusiast from the Central Michigan area. He is a jack-of-all-trades engineer with experiences in just about everything you can shake a stick at. When not slangin\u0026rsquo; code for federal health care contracts, he finds enjoyment with side projects through different LLCs and is always open for more consultations. On the occasion he is not coding or sleeping, you can find him chilling with his wife and daughter.","tags":null,"title":"Jarrett Helton","type":"contributors","url":"https://fireship.io/contributors/jarrett-helton/","weight":0,"wordcount":71},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"dd3722d786127950285c80caea2c2e8d","permalink":"https://fireship.io/contributors/jeroen.ouwehand/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/jeroen.ouwehand/","section":"contributors","summary":"Jeroen is a full-stack developer from Rotterdam (The Netherlands) and is currently working for a bank. Sometimes writes posts on Medium or contribute on Github.","tags":null,"title":"Jeroen Ouwehand","type":"contributors","url":"https://fireship.io/contributors/jeroen.ouwehand/","weight":0,"wordcount":25},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ed0b9cbbb8d7dbb09a1359a7d9fd7de2","permalink":"https://fireship.io/contributors/jorge-dacosta/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/jorge-dacosta/","section":"contributors","summary":"Jorge Dacosta is Co-Founder of Splash Ink (🇦🇴 🇿🇦), Graphic Designer and Open Source (OSS) enthusiast who loves share his knowledge.","tags":null,"title":"Jorge Dacosta","type":"contributors","url":"https://fireship.io/contributors/jorge-dacosta/","weight":0,"wordcount":21},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e7158fac5d344435e3533124932829e2","permalink":"https://fireship.io/contributors/marc-stammerjohann/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/marc-stammerjohann/","section":"contributors","summary":"Marc Stammerjohann is a freelance full-stack software engineer developing apps with Ionic, Angular, Typescript, Java and Kotlin. He is interested in Web Components, nest and Prisma lately. In his free time he enjoys inline skating, traveling, diving and reading books.","tags":null,"title":"Marc Stammerjohann","type":"contributors","url":"https://fireship.io/contributors/marc-stammerjohann/","weight":0,"wordcount":40},{"author":null,"date":-62135596800,"description":"Upgrade to a pro membership","dir":"/","fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4ad4ddb1ab63e9c4a2c36c83c84cdef3","permalink":"https://fireship.io/pro/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/pro/","section":"","summary":"Become an awesome developer Learn the essential skills for modern fullstack app development while having tons of fun in the process. 🦄 You are a pro member! Only use this page if purchasing a gift or enterprise account\nPlan $ Unlimited access to PRO courses Quizzes with hand-picked meme prizes Invite to private Discord chat Free Sticker mailed to your door Lifetime $ 399 once All PRO-tier benefits Single payment, lifetime access 4,200 bonus xp points Next Level T-shirt shipped worldwide Yo!","tags":null,"title":"pro","type":"page","url":"https://fireship.io/pro/","weight":0,"wordcount":141},{"author":null,"date":-62135596800,"description":"Sass lets you use features that don't exist in CSS yet like variables, nesting, mixins, inheritance and other nifty goodies that make writing CSS fun again.","dir":"tags/sass/","fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"aa4435a89de00db81edb3a5dcad2dcb8","permalink":"https://fireship.io/tags/sass/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sass/","section":"tags","summary":"","tags":null,"title":"Sass","type":"tags","url":"https://fireship.io/tags/sass/","weight":0,"wordcount":0},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4a3ddb55802e0bd9e85d70cc3774c481","permalink":"https://fireship.io/contributors/shawn-eubanks/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/shawn-eubanks/","section":"contributors","summary":"devEUBE = technology geek and expert problem solver. I love to learn anything new, and I am especially interested and passionate about emerging technologies in cloud computing and web development. I am driven and passionate about sharing skills and knowledge with others and helping others succeed using new and innovative technologies.\nPassionate Hobbies: Learning New Media, Gaming and Design / Development of media and web presences.","tags":null,"title":"Shawn Eubanks","type":"contributors","url":"https://fireship.io/contributors/shawn-eubanks/","weight":0,"wordcount":66},{"author":null,"date":-62135596800,"description":"","dir":"/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"226b9f97c8d3ff7b60595a785d178002","permalink":"https://fireship.io/success/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/success/","section":"","summary":" Purchase Confirmed! Thank you for your order! You should now have access to your content. If you run into any issues email hello@fireship.io\nYou may now close this tab ","tags":null,"title":"Success!","type":"blank","url":"https://fireship.io/success/","weight":0,"wordcount":29},{"author":null,"date":-62135596800,"description":"","dir":"contributors/","fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ef70d33893fe5ae2c94a1010a00976f2","permalink":"https://fireship.io/contributors/weilun/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/contributors/weilun/","section":"contributors","summary":"Wei Lun is a bachelor\u0026rsquo;s degree student in Software Engineering based in Malaysia. He actively learning trendy technologies, mainly in web, mobile, cloud technologies and solution architect.","tags":null,"title":"Wei Lun","type":"contributors","url":"https://fireship.io/contributors/weilun/","weight":0,"wordcount":27}]